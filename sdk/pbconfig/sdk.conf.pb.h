// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sdk.conf.proto

#ifndef PROTOBUF_INCLUDED_sdk_2econf_2eproto
#define PROTOBUF_INCLUDED_sdk_2econf_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_sdk_2econf_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_sdk_2econf_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_sdk_2econf_2eproto();
namespace pbconfig {
class SdkConfig;
class SdkConfigDefaultTypeInternal;
extern SdkConfigDefaultTypeInternal _SdkConfig_default_instance_;
class SdkConfig_DatabaseModule;
class SdkConfig_DatabaseModuleDefaultTypeInternal;
extern SdkConfig_DatabaseModuleDefaultTypeInternal _SdkConfig_DatabaseModule_default_instance_;
class SdkConfig_LogicModule;
class SdkConfig_LogicModuleDefaultTypeInternal;
extern SdkConfig_LogicModuleDefaultTypeInternal _SdkConfig_LogicModule_default_instance_;
class SdkConfig_NetworkModule;
class SdkConfig_NetworkModuleDefaultTypeInternal;
extern SdkConfig_NetworkModuleDefaultTypeInternal _SdkConfig_NetworkModule_default_instance_;
class SdkConfig_ResourceModule;
class SdkConfig_ResourceModuleDefaultTypeInternal;
extern SdkConfig_ResourceModuleDefaultTypeInternal _SdkConfig_ResourceModule_default_instance_;
}  // namespace pbconfig
namespace google {
namespace protobuf {
template<> ::pbconfig::SdkConfig* Arena::CreateMaybeMessage<::pbconfig::SdkConfig>(Arena*);
template<> ::pbconfig::SdkConfig_DatabaseModule* Arena::CreateMaybeMessage<::pbconfig::SdkConfig_DatabaseModule>(Arena*);
template<> ::pbconfig::SdkConfig_LogicModule* Arena::CreateMaybeMessage<::pbconfig::SdkConfig_LogicModule>(Arena*);
template<> ::pbconfig::SdkConfig_NetworkModule* Arena::CreateMaybeMessage<::pbconfig::SdkConfig_NetworkModule>(Arena*);
template<> ::pbconfig::SdkConfig_ResourceModule* Arena::CreateMaybeMessage<::pbconfig::SdkConfig_ResourceModule>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace pbconfig {

// ===================================================================

class SdkConfig_ResourceModule :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbconfig.SdkConfig.ResourceModule) */ {
 public:
  SdkConfig_ResourceModule();
  virtual ~SdkConfig_ResourceModule();

  SdkConfig_ResourceModule(const SdkConfig_ResourceModule& from);

  inline SdkConfig_ResourceModule& operator=(const SdkConfig_ResourceModule& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SdkConfig_ResourceModule(SdkConfig_ResourceModule&& from) noexcept
    : SdkConfig_ResourceModule() {
    *this = ::std::move(from);
  }

  inline SdkConfig_ResourceModule& operator=(SdkConfig_ResourceModule&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SdkConfig_ResourceModule& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SdkConfig_ResourceModule* internal_default_instance() {
    return reinterpret_cast<const SdkConfig_ResourceModule*>(
               &_SdkConfig_ResourceModule_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(SdkConfig_ResourceModule* other);
  friend void swap(SdkConfig_ResourceModule& a, SdkConfig_ResourceModule& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SdkConfig_ResourceModule* New() const final {
    return CreateMaybeMessage<SdkConfig_ResourceModule>(nullptr);
  }

  SdkConfig_ResourceModule* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SdkConfig_ResourceModule>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SdkConfig_ResourceModule& from);
  void MergeFrom(const SdkConfig_ResourceModule& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SdkConfig_ResourceModule* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pbconfig.SdkConfig.ResourceModule)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_sdk_2econf_2eproto;
};
// -------------------------------------------------------------------

class SdkConfig_LogicModule :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbconfig.SdkConfig.LogicModule) */ {
 public:
  SdkConfig_LogicModule();
  virtual ~SdkConfig_LogicModule();

  SdkConfig_LogicModule(const SdkConfig_LogicModule& from);

  inline SdkConfig_LogicModule& operator=(const SdkConfig_LogicModule& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SdkConfig_LogicModule(SdkConfig_LogicModule&& from) noexcept
    : SdkConfig_LogicModule() {
    *this = ::std::move(from);
  }

  inline SdkConfig_LogicModule& operator=(SdkConfig_LogicModule&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SdkConfig_LogicModule& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SdkConfig_LogicModule* internal_default_instance() {
    return reinterpret_cast<const SdkConfig_LogicModule*>(
               &_SdkConfig_LogicModule_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(SdkConfig_LogicModule* other);
  friend void swap(SdkConfig_LogicModule& a, SdkConfig_LogicModule& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SdkConfig_LogicModule* New() const final {
    return CreateMaybeMessage<SdkConfig_LogicModule>(nullptr);
  }

  SdkConfig_LogicModule* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SdkConfig_LogicModule>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SdkConfig_LogicModule& from);
  void MergeFrom(const SdkConfig_LogicModule& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SdkConfig_LogicModule* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 work_thread_num = 1;
  void clear_work_thread_num();
  static const int kWorkThreadNumFieldNumber = 1;
  ::google::protobuf::uint32 work_thread_num() const;
  void set_work_thread_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pbconfig.SdkConfig.LogicModule)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 work_thread_num_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_sdk_2econf_2eproto;
};
// -------------------------------------------------------------------

class SdkConfig_DatabaseModule :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbconfig.SdkConfig.DatabaseModule) */ {
 public:
  SdkConfig_DatabaseModule();
  virtual ~SdkConfig_DatabaseModule();

  SdkConfig_DatabaseModule(const SdkConfig_DatabaseModule& from);

  inline SdkConfig_DatabaseModule& operator=(const SdkConfig_DatabaseModule& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SdkConfig_DatabaseModule(SdkConfig_DatabaseModule&& from) noexcept
    : SdkConfig_DatabaseModule() {
    *this = ::std::move(from);
  }

  inline SdkConfig_DatabaseModule& operator=(SdkConfig_DatabaseModule&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SdkConfig_DatabaseModule& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SdkConfig_DatabaseModule* internal_default_instance() {
    return reinterpret_cast<const SdkConfig_DatabaseModule*>(
               &_SdkConfig_DatabaseModule_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(SdkConfig_DatabaseModule* other);
  friend void swap(SdkConfig_DatabaseModule& a, SdkConfig_DatabaseModule& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SdkConfig_DatabaseModule* New() const final {
    return CreateMaybeMessage<SdkConfig_DatabaseModule>(nullptr);
  }

  SdkConfig_DatabaseModule* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SdkConfig_DatabaseModule>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SdkConfig_DatabaseModule& from);
  void MergeFrom(const SdkConfig_DatabaseModule& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SdkConfig_DatabaseModule* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string host = 1;
  void clear_host();
  static const int kHostFieldNumber = 1;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  #if LANG_CXX11
  void set_host(::std::string&& value);
  #endif
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);

  // string username = 2;
  void clear_username();
  static const int kUsernameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // string password = 3;
  void clear_password();
  static const int kPasswordFieldNumber = 3;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // string dbname = 4;
  void clear_dbname();
  static const int kDbnameFieldNumber = 4;
  const ::std::string& dbname() const;
  void set_dbname(const ::std::string& value);
  #if LANG_CXX11
  void set_dbname(::std::string&& value);
  #endif
  void set_dbname(const char* value);
  void set_dbname(const char* value, size_t size);
  ::std::string* mutable_dbname();
  ::std::string* release_dbname();
  void set_allocated_dbname(::std::string* dbname);

  // @@protoc_insertion_point(class_scope:pbconfig.SdkConfig.DatabaseModule)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr dbname_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_sdk_2econf_2eproto;
};
// -------------------------------------------------------------------

class SdkConfig_NetworkModule :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbconfig.SdkConfig.NetworkModule) */ {
 public:
  SdkConfig_NetworkModule();
  virtual ~SdkConfig_NetworkModule();

  SdkConfig_NetworkModule(const SdkConfig_NetworkModule& from);

  inline SdkConfig_NetworkModule& operator=(const SdkConfig_NetworkModule& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SdkConfig_NetworkModule(SdkConfig_NetworkModule&& from) noexcept
    : SdkConfig_NetworkModule() {
    *this = ::std::move(from);
  }

  inline SdkConfig_NetworkModule& operator=(SdkConfig_NetworkModule&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SdkConfig_NetworkModule& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SdkConfig_NetworkModule* internal_default_instance() {
    return reinterpret_cast<const SdkConfig_NetworkModule*>(
               &_SdkConfig_NetworkModule_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(SdkConfig_NetworkModule* other);
  friend void swap(SdkConfig_NetworkModule& a, SdkConfig_NetworkModule& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SdkConfig_NetworkModule* New() const final {
    return CreateMaybeMessage<SdkConfig_NetworkModule>(nullptr);
  }

  SdkConfig_NetworkModule* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SdkConfig_NetworkModule>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SdkConfig_NetworkModule& from);
  void MergeFrom(const SdkConfig_NetworkModule& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SdkConfig_NetworkModule* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string from_ws_listen_addr = 1;
  void clear_from_ws_listen_addr();
  static const int kFromWsListenAddrFieldNumber = 1;
  const ::std::string& from_ws_listen_addr() const;
  void set_from_ws_listen_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_from_ws_listen_addr(::std::string&& value);
  #endif
  void set_from_ws_listen_addr(const char* value);
  void set_from_ws_listen_addr(const char* value, size_t size);
  ::std::string* mutable_from_ws_listen_addr();
  ::std::string* release_from_ws_listen_addr();
  void set_allocated_from_ws_listen_addr(::std::string* from_ws_listen_addr);

  // string from_ls_listen_addr = 4;
  void clear_from_ls_listen_addr();
  static const int kFromLsListenAddrFieldNumber = 4;
  const ::std::string& from_ls_listen_addr() const;
  void set_from_ls_listen_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_from_ls_listen_addr(::std::string&& value);
  #endif
  void set_from_ls_listen_addr(const char* value);
  void set_from_ls_listen_addr(const char* value, size_t size);
  ::std::string* mutable_from_ls_listen_addr();
  ::std::string* release_from_ls_listen_addr();
  void set_allocated_from_ls_listen_addr(::std::string* from_ls_listen_addr);

  // string to_plat_http_host = 8;
  void clear_to_plat_http_host();
  static const int kToPlatHttpHostFieldNumber = 8;
  const ::std::string& to_plat_http_host() const;
  void set_to_plat_http_host(const ::std::string& value);
  #if LANG_CXX11
  void set_to_plat_http_host(::std::string&& value);
  #endif
  void set_to_plat_http_host(const char* value);
  void set_to_plat_http_host(const char* value, size_t size);
  ::std::string* mutable_to_plat_http_host();
  ::std::string* release_to_plat_http_host();
  void set_allocated_to_plat_http_host(::std::string* to_plat_http_host);

  // string to_plat_http_cert_filename = 13;
  void clear_to_plat_http_cert_filename();
  static const int kToPlatHttpCertFilenameFieldNumber = 13;
  const ::std::string& to_plat_http_cert_filename() const;
  void set_to_plat_http_cert_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_to_plat_http_cert_filename(::std::string&& value);
  #endif
  void set_to_plat_http_cert_filename(const char* value);
  void set_to_plat_http_cert_filename(const char* value, size_t size);
  ::std::string* mutable_to_plat_http_cert_filename();
  ::std::string* release_to_plat_http_cert_filename();
  void set_allocated_to_plat_http_cert_filename(::std::string* to_plat_http_cert_filename);

  // string to_tzplat_http_host = 15;
  void clear_to_tzplat_http_host();
  static const int kToTzplatHttpHostFieldNumber = 15;
  const ::std::string& to_tzplat_http_host() const;
  void set_to_tzplat_http_host(const ::std::string& value);
  #if LANG_CXX11
  void set_to_tzplat_http_host(::std::string&& value);
  #endif
  void set_to_tzplat_http_host(const char* value);
  void set_to_tzplat_http_host(const char* value, size_t size);
  ::std::string* mutable_to_tzplat_http_host();
  ::std::string* release_to_tzplat_http_host();
  void set_allocated_to_tzplat_http_host(::std::string* to_tzplat_http_host);

  // string to_tzplat_http_cert_filename = 20;
  void clear_to_tzplat_http_cert_filename();
  static const int kToTzplatHttpCertFilenameFieldNumber = 20;
  const ::std::string& to_tzplat_http_cert_filename() const;
  void set_to_tzplat_http_cert_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_to_tzplat_http_cert_filename(::std::string&& value);
  #endif
  void set_to_tzplat_http_cert_filename(const char* value);
  void set_to_tzplat_http_cert_filename(const char* value, size_t size);
  ::std::string* mutable_to_tzplat_http_cert_filename();
  ::std::string* release_to_tzplat_http_cert_filename();
  void set_allocated_to_tzplat_http_cert_filename(::std::string* to_tzplat_http_cert_filename);

  // string from_plat_listen_ports = 21;
  void clear_from_plat_listen_ports();
  static const int kFromPlatListenPortsFieldNumber = 21;
  const ::std::string& from_plat_listen_ports() const;
  void set_from_plat_listen_ports(const ::std::string& value);
  #if LANG_CXX11
  void set_from_plat_listen_ports(::std::string&& value);
  #endif
  void set_from_plat_listen_ports(const char* value);
  void set_from_plat_listen_ports(const char* value, size_t size);
  ::std::string* mutable_from_plat_listen_ports();
  ::std::string* release_from_plat_listen_ports();
  void set_allocated_from_plat_listen_ports(::std::string* from_plat_listen_ports);

  // uint32 from_ws_thread_num = 2;
  void clear_from_ws_thread_num();
  static const int kFromWsThreadNumFieldNumber = 2;
  ::google::protobuf::uint32 from_ws_thread_num() const;
  void set_from_ws_thread_num(::google::protobuf::uint32 value);

  // uint32 from_ws_session_num = 3;
  void clear_from_ws_session_num();
  static const int kFromWsSessionNumFieldNumber = 3;
  ::google::protobuf::uint32 from_ws_session_num() const;
  void set_from_ws_session_num(::google::protobuf::uint32 value);

  // uint32 from_ls_thread_num = 5;
  void clear_from_ls_thread_num();
  static const int kFromLsThreadNumFieldNumber = 5;
  ::google::protobuf::uint32 from_ls_thread_num() const;
  void set_from_ls_thread_num(::google::protobuf::uint32 value);

  // uint32 from_ls_session_num = 6;
  void clear_from_ls_session_num();
  static const int kFromLsSessionNumFieldNumber = 6;
  ::google::protobuf::uint32 from_ls_session_num() const;
  void set_from_ls_session_num(::google::protobuf::uint32 value);

  // uint32 to_plat_http_port = 9;
  void clear_to_plat_http_port();
  static const int kToPlatHttpPortFieldNumber = 9;
  ::google::protobuf::uint32 to_plat_http_port() const;
  void set_to_plat_http_port(::google::protobuf::uint32 value);

  // uint32 to_plat_http_thread_num = 10;
  void clear_to_plat_http_thread_num();
  static const int kToPlatHttpThreadNumFieldNumber = 10;
  ::google::protobuf::uint32 to_plat_http_thread_num() const;
  void set_to_plat_http_thread_num(::google::protobuf::uint32 value);

  // bool to_plat_http_testmode = 7;
  void clear_to_plat_http_testmode();
  static const int kToPlatHttpTestmodeFieldNumber = 7;
  bool to_plat_http_testmode() const;
  void set_to_plat_http_testmode(bool value);

  // bool to_tzplat_http_testmode = 14;
  void clear_to_tzplat_http_testmode();
  static const int kToTzplatHttpTestmodeFieldNumber = 14;
  bool to_tzplat_http_testmode() const;
  void set_to_tzplat_http_testmode(bool value);

  // uint32 to_plat_http_max_conn_pool = 11;
  void clear_to_plat_http_max_conn_pool();
  static const int kToPlatHttpMaxConnPoolFieldNumber = 11;
  ::google::protobuf::uint32 to_plat_http_max_conn_pool() const;
  void set_to_plat_http_max_conn_pool(::google::protobuf::uint32 value);

  // double to_plat_http_timeout = 12;
  void clear_to_plat_http_timeout();
  static const int kToPlatHttpTimeoutFieldNumber = 12;
  double to_plat_http_timeout() const;
  void set_to_plat_http_timeout(double value);

  // uint32 to_tzplat_http_port = 16;
  void clear_to_tzplat_http_port();
  static const int kToTzplatHttpPortFieldNumber = 16;
  ::google::protobuf::uint32 to_tzplat_http_port() const;
  void set_to_tzplat_http_port(::google::protobuf::uint32 value);

  // uint32 to_tzplat_http_thread_num = 17;
  void clear_to_tzplat_http_thread_num();
  static const int kToTzplatHttpThreadNumFieldNumber = 17;
  ::google::protobuf::uint32 to_tzplat_http_thread_num() const;
  void set_to_tzplat_http_thread_num(::google::protobuf::uint32 value);

  // double to_tzplat_http_timeout = 19;
  void clear_to_tzplat_http_timeout();
  static const int kToTzplatHttpTimeoutFieldNumber = 19;
  double to_tzplat_http_timeout() const;
  void set_to_tzplat_http_timeout(double value);

  // uint32 to_tzplat_http_max_conn_pool = 18;
  void clear_to_tzplat_http_max_conn_pool();
  static const int kToTzplatHttpMaxConnPoolFieldNumber = 18;
  ::google::protobuf::uint32 to_tzplat_http_max_conn_pool() const;
  void set_to_tzplat_http_max_conn_pool(::google::protobuf::uint32 value);

  // uint32 from_plat_thread_num = 22;
  void clear_from_plat_thread_num();
  static const int kFromPlatThreadNumFieldNumber = 22;
  ::google::protobuf::uint32 from_plat_thread_num() const;
  void set_from_plat_thread_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pbconfig.SdkConfig.NetworkModule)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr from_ws_listen_addr_;
  ::google::protobuf::internal::ArenaStringPtr from_ls_listen_addr_;
  ::google::protobuf::internal::ArenaStringPtr to_plat_http_host_;
  ::google::protobuf::internal::ArenaStringPtr to_plat_http_cert_filename_;
  ::google::protobuf::internal::ArenaStringPtr to_tzplat_http_host_;
  ::google::protobuf::internal::ArenaStringPtr to_tzplat_http_cert_filename_;
  ::google::protobuf::internal::ArenaStringPtr from_plat_listen_ports_;
  ::google::protobuf::uint32 from_ws_thread_num_;
  ::google::protobuf::uint32 from_ws_session_num_;
  ::google::protobuf::uint32 from_ls_thread_num_;
  ::google::protobuf::uint32 from_ls_session_num_;
  ::google::protobuf::uint32 to_plat_http_port_;
  ::google::protobuf::uint32 to_plat_http_thread_num_;
  bool to_plat_http_testmode_;
  bool to_tzplat_http_testmode_;
  ::google::protobuf::uint32 to_plat_http_max_conn_pool_;
  double to_plat_http_timeout_;
  ::google::protobuf::uint32 to_tzplat_http_port_;
  ::google::protobuf::uint32 to_tzplat_http_thread_num_;
  double to_tzplat_http_timeout_;
  ::google::protobuf::uint32 to_tzplat_http_max_conn_pool_;
  ::google::protobuf::uint32 from_plat_thread_num_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_sdk_2econf_2eproto;
};
// -------------------------------------------------------------------

class SdkConfig :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbconfig.SdkConfig) */ {
 public:
  SdkConfig();
  virtual ~SdkConfig();

  SdkConfig(const SdkConfig& from);

  inline SdkConfig& operator=(const SdkConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SdkConfig(SdkConfig&& from) noexcept
    : SdkConfig() {
    *this = ::std::move(from);
  }

  inline SdkConfig& operator=(SdkConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SdkConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SdkConfig* internal_default_instance() {
    return reinterpret_cast<const SdkConfig*>(
               &_SdkConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(SdkConfig* other);
  friend void swap(SdkConfig& a, SdkConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SdkConfig* New() const final {
    return CreateMaybeMessage<SdkConfig>(nullptr);
  }

  SdkConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SdkConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SdkConfig& from);
  void MergeFrom(const SdkConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SdkConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SdkConfig_ResourceModule ResourceModule;
  typedef SdkConfig_LogicModule LogicModule;
  typedef SdkConfig_DatabaseModule DatabaseModule;
  typedef SdkConfig_NetworkModule NetworkModule;

  // accessors -------------------------------------------------------

  // .pbconfig.SdkConfig.LogicModule logicModule = 1;
  bool has_logicmodule() const;
  void clear_logicmodule();
  static const int kLogicModuleFieldNumber = 1;
  const ::pbconfig::SdkConfig_LogicModule& logicmodule() const;
  ::pbconfig::SdkConfig_LogicModule* release_logicmodule();
  ::pbconfig::SdkConfig_LogicModule* mutable_logicmodule();
  void set_allocated_logicmodule(::pbconfig::SdkConfig_LogicModule* logicmodule);

  // .pbconfig.SdkConfig.DatabaseModule databaseModule = 2;
  bool has_databasemodule() const;
  void clear_databasemodule();
  static const int kDatabaseModuleFieldNumber = 2;
  const ::pbconfig::SdkConfig_DatabaseModule& databasemodule() const;
  ::pbconfig::SdkConfig_DatabaseModule* release_databasemodule();
  ::pbconfig::SdkConfig_DatabaseModule* mutable_databasemodule();
  void set_allocated_databasemodule(::pbconfig::SdkConfig_DatabaseModule* databasemodule);

  // .pbconfig.SdkConfig.NetworkModule networkModule = 3;
  bool has_networkmodule() const;
  void clear_networkmodule();
  static const int kNetworkModuleFieldNumber = 3;
  const ::pbconfig::SdkConfig_NetworkModule& networkmodule() const;
  ::pbconfig::SdkConfig_NetworkModule* release_networkmodule();
  ::pbconfig::SdkConfig_NetworkModule* mutable_networkmodule();
  void set_allocated_networkmodule(::pbconfig::SdkConfig_NetworkModule* networkmodule);

  // @@protoc_insertion_point(class_scope:pbconfig.SdkConfig)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::pbconfig::SdkConfig_LogicModule* logicmodule_;
  ::pbconfig::SdkConfig_DatabaseModule* databasemodule_;
  ::pbconfig::SdkConfig_NetworkModule* networkmodule_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_sdk_2econf_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SdkConfig_ResourceModule

// -------------------------------------------------------------------

// SdkConfig_LogicModule

// uint32 work_thread_num = 1;
inline void SdkConfig_LogicModule::clear_work_thread_num() {
  work_thread_num_ = 0u;
}
inline ::google::protobuf::uint32 SdkConfig_LogicModule::work_thread_num() const {
  // @@protoc_insertion_point(field_get:pbconfig.SdkConfig.LogicModule.work_thread_num)
  return work_thread_num_;
}
inline void SdkConfig_LogicModule::set_work_thread_num(::google::protobuf::uint32 value) {
  
  work_thread_num_ = value;
  // @@protoc_insertion_point(field_set:pbconfig.SdkConfig.LogicModule.work_thread_num)
}

// -------------------------------------------------------------------

// SdkConfig_DatabaseModule

// string host = 1;
inline void SdkConfig_DatabaseModule::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SdkConfig_DatabaseModule::host() const {
  // @@protoc_insertion_point(field_get:pbconfig.SdkConfig.DatabaseModule.host)
  return host_.GetNoArena();
}
inline void SdkConfig_DatabaseModule::set_host(const ::std::string& value) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbconfig.SdkConfig.DatabaseModule.host)
}
#if LANG_CXX11
inline void SdkConfig_DatabaseModule::set_host(::std::string&& value) {
  
  host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbconfig.SdkConfig.DatabaseModule.host)
}
#endif
inline void SdkConfig_DatabaseModule::set_host(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbconfig.SdkConfig.DatabaseModule.host)
}
inline void SdkConfig_DatabaseModule::set_host(const char* value, size_t size) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbconfig.SdkConfig.DatabaseModule.host)
}
inline ::std::string* SdkConfig_DatabaseModule::mutable_host() {
  
  // @@protoc_insertion_point(field_mutable:pbconfig.SdkConfig.DatabaseModule.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SdkConfig_DatabaseModule::release_host() {
  // @@protoc_insertion_point(field_release:pbconfig.SdkConfig.DatabaseModule.host)
  
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SdkConfig_DatabaseModule::set_allocated_host(::std::string* host) {
  if (host != nullptr) {
    
  } else {
    
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:pbconfig.SdkConfig.DatabaseModule.host)
}

// string username = 2;
inline void SdkConfig_DatabaseModule::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SdkConfig_DatabaseModule::username() const {
  // @@protoc_insertion_point(field_get:pbconfig.SdkConfig.DatabaseModule.username)
  return username_.GetNoArena();
}
inline void SdkConfig_DatabaseModule::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbconfig.SdkConfig.DatabaseModule.username)
}
#if LANG_CXX11
inline void SdkConfig_DatabaseModule::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbconfig.SdkConfig.DatabaseModule.username)
}
#endif
inline void SdkConfig_DatabaseModule::set_username(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbconfig.SdkConfig.DatabaseModule.username)
}
inline void SdkConfig_DatabaseModule::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbconfig.SdkConfig.DatabaseModule.username)
}
inline ::std::string* SdkConfig_DatabaseModule::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:pbconfig.SdkConfig.DatabaseModule.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SdkConfig_DatabaseModule::release_username() {
  // @@protoc_insertion_point(field_release:pbconfig.SdkConfig.DatabaseModule.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SdkConfig_DatabaseModule::set_allocated_username(::std::string* username) {
  if (username != nullptr) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:pbconfig.SdkConfig.DatabaseModule.username)
}

// string password = 3;
inline void SdkConfig_DatabaseModule::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SdkConfig_DatabaseModule::password() const {
  // @@protoc_insertion_point(field_get:pbconfig.SdkConfig.DatabaseModule.password)
  return password_.GetNoArena();
}
inline void SdkConfig_DatabaseModule::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbconfig.SdkConfig.DatabaseModule.password)
}
#if LANG_CXX11
inline void SdkConfig_DatabaseModule::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbconfig.SdkConfig.DatabaseModule.password)
}
#endif
inline void SdkConfig_DatabaseModule::set_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbconfig.SdkConfig.DatabaseModule.password)
}
inline void SdkConfig_DatabaseModule::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbconfig.SdkConfig.DatabaseModule.password)
}
inline ::std::string* SdkConfig_DatabaseModule::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:pbconfig.SdkConfig.DatabaseModule.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SdkConfig_DatabaseModule::release_password() {
  // @@protoc_insertion_point(field_release:pbconfig.SdkConfig.DatabaseModule.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SdkConfig_DatabaseModule::set_allocated_password(::std::string* password) {
  if (password != nullptr) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:pbconfig.SdkConfig.DatabaseModule.password)
}

// string dbname = 4;
inline void SdkConfig_DatabaseModule::clear_dbname() {
  dbname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SdkConfig_DatabaseModule::dbname() const {
  // @@protoc_insertion_point(field_get:pbconfig.SdkConfig.DatabaseModule.dbname)
  return dbname_.GetNoArena();
}
inline void SdkConfig_DatabaseModule::set_dbname(const ::std::string& value) {
  
  dbname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbconfig.SdkConfig.DatabaseModule.dbname)
}
#if LANG_CXX11
inline void SdkConfig_DatabaseModule::set_dbname(::std::string&& value) {
  
  dbname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbconfig.SdkConfig.DatabaseModule.dbname)
}
#endif
inline void SdkConfig_DatabaseModule::set_dbname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  dbname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbconfig.SdkConfig.DatabaseModule.dbname)
}
inline void SdkConfig_DatabaseModule::set_dbname(const char* value, size_t size) {
  
  dbname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbconfig.SdkConfig.DatabaseModule.dbname)
}
inline ::std::string* SdkConfig_DatabaseModule::mutable_dbname() {
  
  // @@protoc_insertion_point(field_mutable:pbconfig.SdkConfig.DatabaseModule.dbname)
  return dbname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SdkConfig_DatabaseModule::release_dbname() {
  // @@protoc_insertion_point(field_release:pbconfig.SdkConfig.DatabaseModule.dbname)
  
  return dbname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SdkConfig_DatabaseModule::set_allocated_dbname(::std::string* dbname) {
  if (dbname != nullptr) {
    
  } else {
    
  }
  dbname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dbname);
  // @@protoc_insertion_point(field_set_allocated:pbconfig.SdkConfig.DatabaseModule.dbname)
}

// -------------------------------------------------------------------

// SdkConfig_NetworkModule

// string from_ws_listen_addr = 1;
inline void SdkConfig_NetworkModule::clear_from_ws_listen_addr() {
  from_ws_listen_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SdkConfig_NetworkModule::from_ws_listen_addr() const {
  // @@protoc_insertion_point(field_get:pbconfig.SdkConfig.NetworkModule.from_ws_listen_addr)
  return from_ws_listen_addr_.GetNoArena();
}
inline void SdkConfig_NetworkModule::set_from_ws_listen_addr(const ::std::string& value) {
  
  from_ws_listen_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbconfig.SdkConfig.NetworkModule.from_ws_listen_addr)
}
#if LANG_CXX11
inline void SdkConfig_NetworkModule::set_from_ws_listen_addr(::std::string&& value) {
  
  from_ws_listen_addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbconfig.SdkConfig.NetworkModule.from_ws_listen_addr)
}
#endif
inline void SdkConfig_NetworkModule::set_from_ws_listen_addr(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  from_ws_listen_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbconfig.SdkConfig.NetworkModule.from_ws_listen_addr)
}
inline void SdkConfig_NetworkModule::set_from_ws_listen_addr(const char* value, size_t size) {
  
  from_ws_listen_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbconfig.SdkConfig.NetworkModule.from_ws_listen_addr)
}
inline ::std::string* SdkConfig_NetworkModule::mutable_from_ws_listen_addr() {
  
  // @@protoc_insertion_point(field_mutable:pbconfig.SdkConfig.NetworkModule.from_ws_listen_addr)
  return from_ws_listen_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SdkConfig_NetworkModule::release_from_ws_listen_addr() {
  // @@protoc_insertion_point(field_release:pbconfig.SdkConfig.NetworkModule.from_ws_listen_addr)
  
  return from_ws_listen_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SdkConfig_NetworkModule::set_allocated_from_ws_listen_addr(::std::string* from_ws_listen_addr) {
  if (from_ws_listen_addr != nullptr) {
    
  } else {
    
  }
  from_ws_listen_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_ws_listen_addr);
  // @@protoc_insertion_point(field_set_allocated:pbconfig.SdkConfig.NetworkModule.from_ws_listen_addr)
}

// uint32 from_ws_thread_num = 2;
inline void SdkConfig_NetworkModule::clear_from_ws_thread_num() {
  from_ws_thread_num_ = 0u;
}
inline ::google::protobuf::uint32 SdkConfig_NetworkModule::from_ws_thread_num() const {
  // @@protoc_insertion_point(field_get:pbconfig.SdkConfig.NetworkModule.from_ws_thread_num)
  return from_ws_thread_num_;
}
inline void SdkConfig_NetworkModule::set_from_ws_thread_num(::google::protobuf::uint32 value) {
  
  from_ws_thread_num_ = value;
  // @@protoc_insertion_point(field_set:pbconfig.SdkConfig.NetworkModule.from_ws_thread_num)
}

// uint32 from_ws_session_num = 3;
inline void SdkConfig_NetworkModule::clear_from_ws_session_num() {
  from_ws_session_num_ = 0u;
}
inline ::google::protobuf::uint32 SdkConfig_NetworkModule::from_ws_session_num() const {
  // @@protoc_insertion_point(field_get:pbconfig.SdkConfig.NetworkModule.from_ws_session_num)
  return from_ws_session_num_;
}
inline void SdkConfig_NetworkModule::set_from_ws_session_num(::google::protobuf::uint32 value) {
  
  from_ws_session_num_ = value;
  // @@protoc_insertion_point(field_set:pbconfig.SdkConfig.NetworkModule.from_ws_session_num)
}

// string from_ls_listen_addr = 4;
inline void SdkConfig_NetworkModule::clear_from_ls_listen_addr() {
  from_ls_listen_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SdkConfig_NetworkModule::from_ls_listen_addr() const {
  // @@protoc_insertion_point(field_get:pbconfig.SdkConfig.NetworkModule.from_ls_listen_addr)
  return from_ls_listen_addr_.GetNoArena();
}
inline void SdkConfig_NetworkModule::set_from_ls_listen_addr(const ::std::string& value) {
  
  from_ls_listen_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbconfig.SdkConfig.NetworkModule.from_ls_listen_addr)
}
#if LANG_CXX11
inline void SdkConfig_NetworkModule::set_from_ls_listen_addr(::std::string&& value) {
  
  from_ls_listen_addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbconfig.SdkConfig.NetworkModule.from_ls_listen_addr)
}
#endif
inline void SdkConfig_NetworkModule::set_from_ls_listen_addr(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  from_ls_listen_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbconfig.SdkConfig.NetworkModule.from_ls_listen_addr)
}
inline void SdkConfig_NetworkModule::set_from_ls_listen_addr(const char* value, size_t size) {
  
  from_ls_listen_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbconfig.SdkConfig.NetworkModule.from_ls_listen_addr)
}
inline ::std::string* SdkConfig_NetworkModule::mutable_from_ls_listen_addr() {
  
  // @@protoc_insertion_point(field_mutable:pbconfig.SdkConfig.NetworkModule.from_ls_listen_addr)
  return from_ls_listen_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SdkConfig_NetworkModule::release_from_ls_listen_addr() {
  // @@protoc_insertion_point(field_release:pbconfig.SdkConfig.NetworkModule.from_ls_listen_addr)
  
  return from_ls_listen_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SdkConfig_NetworkModule::set_allocated_from_ls_listen_addr(::std::string* from_ls_listen_addr) {
  if (from_ls_listen_addr != nullptr) {
    
  } else {
    
  }
  from_ls_listen_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_ls_listen_addr);
  // @@protoc_insertion_point(field_set_allocated:pbconfig.SdkConfig.NetworkModule.from_ls_listen_addr)
}

// uint32 from_ls_thread_num = 5;
inline void SdkConfig_NetworkModule::clear_from_ls_thread_num() {
  from_ls_thread_num_ = 0u;
}
inline ::google::protobuf::uint32 SdkConfig_NetworkModule::from_ls_thread_num() const {
  // @@protoc_insertion_point(field_get:pbconfig.SdkConfig.NetworkModule.from_ls_thread_num)
  return from_ls_thread_num_;
}
inline void SdkConfig_NetworkModule::set_from_ls_thread_num(::google::protobuf::uint32 value) {
  
  from_ls_thread_num_ = value;
  // @@protoc_insertion_point(field_set:pbconfig.SdkConfig.NetworkModule.from_ls_thread_num)
}

// uint32 from_ls_session_num = 6;
inline void SdkConfig_NetworkModule::clear_from_ls_session_num() {
  from_ls_session_num_ = 0u;
}
inline ::google::protobuf::uint32 SdkConfig_NetworkModule::from_ls_session_num() const {
  // @@protoc_insertion_point(field_get:pbconfig.SdkConfig.NetworkModule.from_ls_session_num)
  return from_ls_session_num_;
}
inline void SdkConfig_NetworkModule::set_from_ls_session_num(::google::protobuf::uint32 value) {
  
  from_ls_session_num_ = value;
  // @@protoc_insertion_point(field_set:pbconfig.SdkConfig.NetworkModule.from_ls_session_num)
}

// bool to_plat_http_testmode = 7;
inline void SdkConfig_NetworkModule::clear_to_plat_http_testmode() {
  to_plat_http_testmode_ = false;
}
inline bool SdkConfig_NetworkModule::to_plat_http_testmode() const {
  // @@protoc_insertion_point(field_get:pbconfig.SdkConfig.NetworkModule.to_plat_http_testmode)
  return to_plat_http_testmode_;
}
inline void SdkConfig_NetworkModule::set_to_plat_http_testmode(bool value) {
  
  to_plat_http_testmode_ = value;
  // @@protoc_insertion_point(field_set:pbconfig.SdkConfig.NetworkModule.to_plat_http_testmode)
}

// string to_plat_http_host = 8;
inline void SdkConfig_NetworkModule::clear_to_plat_http_host() {
  to_plat_http_host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SdkConfig_NetworkModule::to_plat_http_host() const {
  // @@protoc_insertion_point(field_get:pbconfig.SdkConfig.NetworkModule.to_plat_http_host)
  return to_plat_http_host_.GetNoArena();
}
inline void SdkConfig_NetworkModule::set_to_plat_http_host(const ::std::string& value) {
  
  to_plat_http_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbconfig.SdkConfig.NetworkModule.to_plat_http_host)
}
#if LANG_CXX11
inline void SdkConfig_NetworkModule::set_to_plat_http_host(::std::string&& value) {
  
  to_plat_http_host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbconfig.SdkConfig.NetworkModule.to_plat_http_host)
}
#endif
inline void SdkConfig_NetworkModule::set_to_plat_http_host(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  to_plat_http_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbconfig.SdkConfig.NetworkModule.to_plat_http_host)
}
inline void SdkConfig_NetworkModule::set_to_plat_http_host(const char* value, size_t size) {
  
  to_plat_http_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbconfig.SdkConfig.NetworkModule.to_plat_http_host)
}
inline ::std::string* SdkConfig_NetworkModule::mutable_to_plat_http_host() {
  
  // @@protoc_insertion_point(field_mutable:pbconfig.SdkConfig.NetworkModule.to_plat_http_host)
  return to_plat_http_host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SdkConfig_NetworkModule::release_to_plat_http_host() {
  // @@protoc_insertion_point(field_release:pbconfig.SdkConfig.NetworkModule.to_plat_http_host)
  
  return to_plat_http_host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SdkConfig_NetworkModule::set_allocated_to_plat_http_host(::std::string* to_plat_http_host) {
  if (to_plat_http_host != nullptr) {
    
  } else {
    
  }
  to_plat_http_host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_plat_http_host);
  // @@protoc_insertion_point(field_set_allocated:pbconfig.SdkConfig.NetworkModule.to_plat_http_host)
}

// uint32 to_plat_http_port = 9;
inline void SdkConfig_NetworkModule::clear_to_plat_http_port() {
  to_plat_http_port_ = 0u;
}
inline ::google::protobuf::uint32 SdkConfig_NetworkModule::to_plat_http_port() const {
  // @@protoc_insertion_point(field_get:pbconfig.SdkConfig.NetworkModule.to_plat_http_port)
  return to_plat_http_port_;
}
inline void SdkConfig_NetworkModule::set_to_plat_http_port(::google::protobuf::uint32 value) {
  
  to_plat_http_port_ = value;
  // @@protoc_insertion_point(field_set:pbconfig.SdkConfig.NetworkModule.to_plat_http_port)
}

// uint32 to_plat_http_thread_num = 10;
inline void SdkConfig_NetworkModule::clear_to_plat_http_thread_num() {
  to_plat_http_thread_num_ = 0u;
}
inline ::google::protobuf::uint32 SdkConfig_NetworkModule::to_plat_http_thread_num() const {
  // @@protoc_insertion_point(field_get:pbconfig.SdkConfig.NetworkModule.to_plat_http_thread_num)
  return to_plat_http_thread_num_;
}
inline void SdkConfig_NetworkModule::set_to_plat_http_thread_num(::google::protobuf::uint32 value) {
  
  to_plat_http_thread_num_ = value;
  // @@protoc_insertion_point(field_set:pbconfig.SdkConfig.NetworkModule.to_plat_http_thread_num)
}

// uint32 to_plat_http_max_conn_pool = 11;
inline void SdkConfig_NetworkModule::clear_to_plat_http_max_conn_pool() {
  to_plat_http_max_conn_pool_ = 0u;
}
inline ::google::protobuf::uint32 SdkConfig_NetworkModule::to_plat_http_max_conn_pool() const {
  // @@protoc_insertion_point(field_get:pbconfig.SdkConfig.NetworkModule.to_plat_http_max_conn_pool)
  return to_plat_http_max_conn_pool_;
}
inline void SdkConfig_NetworkModule::set_to_plat_http_max_conn_pool(::google::protobuf::uint32 value) {
  
  to_plat_http_max_conn_pool_ = value;
  // @@protoc_insertion_point(field_set:pbconfig.SdkConfig.NetworkModule.to_plat_http_max_conn_pool)
}

// double to_plat_http_timeout = 12;
inline void SdkConfig_NetworkModule::clear_to_plat_http_timeout() {
  to_plat_http_timeout_ = 0;
}
inline double SdkConfig_NetworkModule::to_plat_http_timeout() const {
  // @@protoc_insertion_point(field_get:pbconfig.SdkConfig.NetworkModule.to_plat_http_timeout)
  return to_plat_http_timeout_;
}
inline void SdkConfig_NetworkModule::set_to_plat_http_timeout(double value) {
  
  to_plat_http_timeout_ = value;
  // @@protoc_insertion_point(field_set:pbconfig.SdkConfig.NetworkModule.to_plat_http_timeout)
}

// string to_plat_http_cert_filename = 13;
inline void SdkConfig_NetworkModule::clear_to_plat_http_cert_filename() {
  to_plat_http_cert_filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SdkConfig_NetworkModule::to_plat_http_cert_filename() const {
  // @@protoc_insertion_point(field_get:pbconfig.SdkConfig.NetworkModule.to_plat_http_cert_filename)
  return to_plat_http_cert_filename_.GetNoArena();
}
inline void SdkConfig_NetworkModule::set_to_plat_http_cert_filename(const ::std::string& value) {
  
  to_plat_http_cert_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbconfig.SdkConfig.NetworkModule.to_plat_http_cert_filename)
}
#if LANG_CXX11
inline void SdkConfig_NetworkModule::set_to_plat_http_cert_filename(::std::string&& value) {
  
  to_plat_http_cert_filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbconfig.SdkConfig.NetworkModule.to_plat_http_cert_filename)
}
#endif
inline void SdkConfig_NetworkModule::set_to_plat_http_cert_filename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  to_plat_http_cert_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbconfig.SdkConfig.NetworkModule.to_plat_http_cert_filename)
}
inline void SdkConfig_NetworkModule::set_to_plat_http_cert_filename(const char* value, size_t size) {
  
  to_plat_http_cert_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbconfig.SdkConfig.NetworkModule.to_plat_http_cert_filename)
}
inline ::std::string* SdkConfig_NetworkModule::mutable_to_plat_http_cert_filename() {
  
  // @@protoc_insertion_point(field_mutable:pbconfig.SdkConfig.NetworkModule.to_plat_http_cert_filename)
  return to_plat_http_cert_filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SdkConfig_NetworkModule::release_to_plat_http_cert_filename() {
  // @@protoc_insertion_point(field_release:pbconfig.SdkConfig.NetworkModule.to_plat_http_cert_filename)
  
  return to_plat_http_cert_filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SdkConfig_NetworkModule::set_allocated_to_plat_http_cert_filename(::std::string* to_plat_http_cert_filename) {
  if (to_plat_http_cert_filename != nullptr) {
    
  } else {
    
  }
  to_plat_http_cert_filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_plat_http_cert_filename);
  // @@protoc_insertion_point(field_set_allocated:pbconfig.SdkConfig.NetworkModule.to_plat_http_cert_filename)
}

// bool to_tzplat_http_testmode = 14;
inline void SdkConfig_NetworkModule::clear_to_tzplat_http_testmode() {
  to_tzplat_http_testmode_ = false;
}
inline bool SdkConfig_NetworkModule::to_tzplat_http_testmode() const {
  // @@protoc_insertion_point(field_get:pbconfig.SdkConfig.NetworkModule.to_tzplat_http_testmode)
  return to_tzplat_http_testmode_;
}
inline void SdkConfig_NetworkModule::set_to_tzplat_http_testmode(bool value) {
  
  to_tzplat_http_testmode_ = value;
  // @@protoc_insertion_point(field_set:pbconfig.SdkConfig.NetworkModule.to_tzplat_http_testmode)
}

// string to_tzplat_http_host = 15;
inline void SdkConfig_NetworkModule::clear_to_tzplat_http_host() {
  to_tzplat_http_host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SdkConfig_NetworkModule::to_tzplat_http_host() const {
  // @@protoc_insertion_point(field_get:pbconfig.SdkConfig.NetworkModule.to_tzplat_http_host)
  return to_tzplat_http_host_.GetNoArena();
}
inline void SdkConfig_NetworkModule::set_to_tzplat_http_host(const ::std::string& value) {
  
  to_tzplat_http_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbconfig.SdkConfig.NetworkModule.to_tzplat_http_host)
}
#if LANG_CXX11
inline void SdkConfig_NetworkModule::set_to_tzplat_http_host(::std::string&& value) {
  
  to_tzplat_http_host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbconfig.SdkConfig.NetworkModule.to_tzplat_http_host)
}
#endif
inline void SdkConfig_NetworkModule::set_to_tzplat_http_host(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  to_tzplat_http_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbconfig.SdkConfig.NetworkModule.to_tzplat_http_host)
}
inline void SdkConfig_NetworkModule::set_to_tzplat_http_host(const char* value, size_t size) {
  
  to_tzplat_http_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbconfig.SdkConfig.NetworkModule.to_tzplat_http_host)
}
inline ::std::string* SdkConfig_NetworkModule::mutable_to_tzplat_http_host() {
  
  // @@protoc_insertion_point(field_mutable:pbconfig.SdkConfig.NetworkModule.to_tzplat_http_host)
  return to_tzplat_http_host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SdkConfig_NetworkModule::release_to_tzplat_http_host() {
  // @@protoc_insertion_point(field_release:pbconfig.SdkConfig.NetworkModule.to_tzplat_http_host)
  
  return to_tzplat_http_host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SdkConfig_NetworkModule::set_allocated_to_tzplat_http_host(::std::string* to_tzplat_http_host) {
  if (to_tzplat_http_host != nullptr) {
    
  } else {
    
  }
  to_tzplat_http_host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_tzplat_http_host);
  // @@protoc_insertion_point(field_set_allocated:pbconfig.SdkConfig.NetworkModule.to_tzplat_http_host)
}

// uint32 to_tzplat_http_port = 16;
inline void SdkConfig_NetworkModule::clear_to_tzplat_http_port() {
  to_tzplat_http_port_ = 0u;
}
inline ::google::protobuf::uint32 SdkConfig_NetworkModule::to_tzplat_http_port() const {
  // @@protoc_insertion_point(field_get:pbconfig.SdkConfig.NetworkModule.to_tzplat_http_port)
  return to_tzplat_http_port_;
}
inline void SdkConfig_NetworkModule::set_to_tzplat_http_port(::google::protobuf::uint32 value) {
  
  to_tzplat_http_port_ = value;
  // @@protoc_insertion_point(field_set:pbconfig.SdkConfig.NetworkModule.to_tzplat_http_port)
}

// uint32 to_tzplat_http_thread_num = 17;
inline void SdkConfig_NetworkModule::clear_to_tzplat_http_thread_num() {
  to_tzplat_http_thread_num_ = 0u;
}
inline ::google::protobuf::uint32 SdkConfig_NetworkModule::to_tzplat_http_thread_num() const {
  // @@protoc_insertion_point(field_get:pbconfig.SdkConfig.NetworkModule.to_tzplat_http_thread_num)
  return to_tzplat_http_thread_num_;
}
inline void SdkConfig_NetworkModule::set_to_tzplat_http_thread_num(::google::protobuf::uint32 value) {
  
  to_tzplat_http_thread_num_ = value;
  // @@protoc_insertion_point(field_set:pbconfig.SdkConfig.NetworkModule.to_tzplat_http_thread_num)
}

// uint32 to_tzplat_http_max_conn_pool = 18;
inline void SdkConfig_NetworkModule::clear_to_tzplat_http_max_conn_pool() {
  to_tzplat_http_max_conn_pool_ = 0u;
}
inline ::google::protobuf::uint32 SdkConfig_NetworkModule::to_tzplat_http_max_conn_pool() const {
  // @@protoc_insertion_point(field_get:pbconfig.SdkConfig.NetworkModule.to_tzplat_http_max_conn_pool)
  return to_tzplat_http_max_conn_pool_;
}
inline void SdkConfig_NetworkModule::set_to_tzplat_http_max_conn_pool(::google::protobuf::uint32 value) {
  
  to_tzplat_http_max_conn_pool_ = value;
  // @@protoc_insertion_point(field_set:pbconfig.SdkConfig.NetworkModule.to_tzplat_http_max_conn_pool)
}

// double to_tzplat_http_timeout = 19;
inline void SdkConfig_NetworkModule::clear_to_tzplat_http_timeout() {
  to_tzplat_http_timeout_ = 0;
}
inline double SdkConfig_NetworkModule::to_tzplat_http_timeout() const {
  // @@protoc_insertion_point(field_get:pbconfig.SdkConfig.NetworkModule.to_tzplat_http_timeout)
  return to_tzplat_http_timeout_;
}
inline void SdkConfig_NetworkModule::set_to_tzplat_http_timeout(double value) {
  
  to_tzplat_http_timeout_ = value;
  // @@protoc_insertion_point(field_set:pbconfig.SdkConfig.NetworkModule.to_tzplat_http_timeout)
}

// string to_tzplat_http_cert_filename = 20;
inline void SdkConfig_NetworkModule::clear_to_tzplat_http_cert_filename() {
  to_tzplat_http_cert_filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SdkConfig_NetworkModule::to_tzplat_http_cert_filename() const {
  // @@protoc_insertion_point(field_get:pbconfig.SdkConfig.NetworkModule.to_tzplat_http_cert_filename)
  return to_tzplat_http_cert_filename_.GetNoArena();
}
inline void SdkConfig_NetworkModule::set_to_tzplat_http_cert_filename(const ::std::string& value) {
  
  to_tzplat_http_cert_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbconfig.SdkConfig.NetworkModule.to_tzplat_http_cert_filename)
}
#if LANG_CXX11
inline void SdkConfig_NetworkModule::set_to_tzplat_http_cert_filename(::std::string&& value) {
  
  to_tzplat_http_cert_filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbconfig.SdkConfig.NetworkModule.to_tzplat_http_cert_filename)
}
#endif
inline void SdkConfig_NetworkModule::set_to_tzplat_http_cert_filename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  to_tzplat_http_cert_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbconfig.SdkConfig.NetworkModule.to_tzplat_http_cert_filename)
}
inline void SdkConfig_NetworkModule::set_to_tzplat_http_cert_filename(const char* value, size_t size) {
  
  to_tzplat_http_cert_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbconfig.SdkConfig.NetworkModule.to_tzplat_http_cert_filename)
}
inline ::std::string* SdkConfig_NetworkModule::mutable_to_tzplat_http_cert_filename() {
  
  // @@protoc_insertion_point(field_mutable:pbconfig.SdkConfig.NetworkModule.to_tzplat_http_cert_filename)
  return to_tzplat_http_cert_filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SdkConfig_NetworkModule::release_to_tzplat_http_cert_filename() {
  // @@protoc_insertion_point(field_release:pbconfig.SdkConfig.NetworkModule.to_tzplat_http_cert_filename)
  
  return to_tzplat_http_cert_filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SdkConfig_NetworkModule::set_allocated_to_tzplat_http_cert_filename(::std::string* to_tzplat_http_cert_filename) {
  if (to_tzplat_http_cert_filename != nullptr) {
    
  } else {
    
  }
  to_tzplat_http_cert_filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_tzplat_http_cert_filename);
  // @@protoc_insertion_point(field_set_allocated:pbconfig.SdkConfig.NetworkModule.to_tzplat_http_cert_filename)
}

// string from_plat_listen_ports = 21;
inline void SdkConfig_NetworkModule::clear_from_plat_listen_ports() {
  from_plat_listen_ports_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SdkConfig_NetworkModule::from_plat_listen_ports() const {
  // @@protoc_insertion_point(field_get:pbconfig.SdkConfig.NetworkModule.from_plat_listen_ports)
  return from_plat_listen_ports_.GetNoArena();
}
inline void SdkConfig_NetworkModule::set_from_plat_listen_ports(const ::std::string& value) {
  
  from_plat_listen_ports_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbconfig.SdkConfig.NetworkModule.from_plat_listen_ports)
}
#if LANG_CXX11
inline void SdkConfig_NetworkModule::set_from_plat_listen_ports(::std::string&& value) {
  
  from_plat_listen_ports_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbconfig.SdkConfig.NetworkModule.from_plat_listen_ports)
}
#endif
inline void SdkConfig_NetworkModule::set_from_plat_listen_ports(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  from_plat_listen_ports_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbconfig.SdkConfig.NetworkModule.from_plat_listen_ports)
}
inline void SdkConfig_NetworkModule::set_from_plat_listen_ports(const char* value, size_t size) {
  
  from_plat_listen_ports_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbconfig.SdkConfig.NetworkModule.from_plat_listen_ports)
}
inline ::std::string* SdkConfig_NetworkModule::mutable_from_plat_listen_ports() {
  
  // @@protoc_insertion_point(field_mutable:pbconfig.SdkConfig.NetworkModule.from_plat_listen_ports)
  return from_plat_listen_ports_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SdkConfig_NetworkModule::release_from_plat_listen_ports() {
  // @@protoc_insertion_point(field_release:pbconfig.SdkConfig.NetworkModule.from_plat_listen_ports)
  
  return from_plat_listen_ports_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SdkConfig_NetworkModule::set_allocated_from_plat_listen_ports(::std::string* from_plat_listen_ports) {
  if (from_plat_listen_ports != nullptr) {
    
  } else {
    
  }
  from_plat_listen_ports_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_plat_listen_ports);
  // @@protoc_insertion_point(field_set_allocated:pbconfig.SdkConfig.NetworkModule.from_plat_listen_ports)
}

// uint32 from_plat_thread_num = 22;
inline void SdkConfig_NetworkModule::clear_from_plat_thread_num() {
  from_plat_thread_num_ = 0u;
}
inline ::google::protobuf::uint32 SdkConfig_NetworkModule::from_plat_thread_num() const {
  // @@protoc_insertion_point(field_get:pbconfig.SdkConfig.NetworkModule.from_plat_thread_num)
  return from_plat_thread_num_;
}
inline void SdkConfig_NetworkModule::set_from_plat_thread_num(::google::protobuf::uint32 value) {
  
  from_plat_thread_num_ = value;
  // @@protoc_insertion_point(field_set:pbconfig.SdkConfig.NetworkModule.from_plat_thread_num)
}

// -------------------------------------------------------------------

// SdkConfig

// .pbconfig.SdkConfig.LogicModule logicModule = 1;
inline bool SdkConfig::has_logicmodule() const {
  return this != internal_default_instance() && logicmodule_ != nullptr;
}
inline void SdkConfig::clear_logicmodule() {
  if (GetArenaNoVirtual() == nullptr && logicmodule_ != nullptr) {
    delete logicmodule_;
  }
  logicmodule_ = nullptr;
}
inline const ::pbconfig::SdkConfig_LogicModule& SdkConfig::logicmodule() const {
  const ::pbconfig::SdkConfig_LogicModule* p = logicmodule_;
  // @@protoc_insertion_point(field_get:pbconfig.SdkConfig.logicModule)
  return p != nullptr ? *p : *reinterpret_cast<const ::pbconfig::SdkConfig_LogicModule*>(
      &::pbconfig::_SdkConfig_LogicModule_default_instance_);
}
inline ::pbconfig::SdkConfig_LogicModule* SdkConfig::release_logicmodule() {
  // @@protoc_insertion_point(field_release:pbconfig.SdkConfig.logicModule)
  
  ::pbconfig::SdkConfig_LogicModule* temp = logicmodule_;
  logicmodule_ = nullptr;
  return temp;
}
inline ::pbconfig::SdkConfig_LogicModule* SdkConfig::mutable_logicmodule() {
  
  if (logicmodule_ == nullptr) {
    auto* p = CreateMaybeMessage<::pbconfig::SdkConfig_LogicModule>(GetArenaNoVirtual());
    logicmodule_ = p;
  }
  // @@protoc_insertion_point(field_mutable:pbconfig.SdkConfig.logicModule)
  return logicmodule_;
}
inline void SdkConfig::set_allocated_logicmodule(::pbconfig::SdkConfig_LogicModule* logicmodule) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete logicmodule_;
  }
  if (logicmodule) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      logicmodule = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, logicmodule, submessage_arena);
    }
    
  } else {
    
  }
  logicmodule_ = logicmodule;
  // @@protoc_insertion_point(field_set_allocated:pbconfig.SdkConfig.logicModule)
}

// .pbconfig.SdkConfig.DatabaseModule databaseModule = 2;
inline bool SdkConfig::has_databasemodule() const {
  return this != internal_default_instance() && databasemodule_ != nullptr;
}
inline void SdkConfig::clear_databasemodule() {
  if (GetArenaNoVirtual() == nullptr && databasemodule_ != nullptr) {
    delete databasemodule_;
  }
  databasemodule_ = nullptr;
}
inline const ::pbconfig::SdkConfig_DatabaseModule& SdkConfig::databasemodule() const {
  const ::pbconfig::SdkConfig_DatabaseModule* p = databasemodule_;
  // @@protoc_insertion_point(field_get:pbconfig.SdkConfig.databaseModule)
  return p != nullptr ? *p : *reinterpret_cast<const ::pbconfig::SdkConfig_DatabaseModule*>(
      &::pbconfig::_SdkConfig_DatabaseModule_default_instance_);
}
inline ::pbconfig::SdkConfig_DatabaseModule* SdkConfig::release_databasemodule() {
  // @@protoc_insertion_point(field_release:pbconfig.SdkConfig.databaseModule)
  
  ::pbconfig::SdkConfig_DatabaseModule* temp = databasemodule_;
  databasemodule_ = nullptr;
  return temp;
}
inline ::pbconfig::SdkConfig_DatabaseModule* SdkConfig::mutable_databasemodule() {
  
  if (databasemodule_ == nullptr) {
    auto* p = CreateMaybeMessage<::pbconfig::SdkConfig_DatabaseModule>(GetArenaNoVirtual());
    databasemodule_ = p;
  }
  // @@protoc_insertion_point(field_mutable:pbconfig.SdkConfig.databaseModule)
  return databasemodule_;
}
inline void SdkConfig::set_allocated_databasemodule(::pbconfig::SdkConfig_DatabaseModule* databasemodule) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete databasemodule_;
  }
  if (databasemodule) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      databasemodule = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, databasemodule, submessage_arena);
    }
    
  } else {
    
  }
  databasemodule_ = databasemodule;
  // @@protoc_insertion_point(field_set_allocated:pbconfig.SdkConfig.databaseModule)
}

// .pbconfig.SdkConfig.NetworkModule networkModule = 3;
inline bool SdkConfig::has_networkmodule() const {
  return this != internal_default_instance() && networkmodule_ != nullptr;
}
inline void SdkConfig::clear_networkmodule() {
  if (GetArenaNoVirtual() == nullptr && networkmodule_ != nullptr) {
    delete networkmodule_;
  }
  networkmodule_ = nullptr;
}
inline const ::pbconfig::SdkConfig_NetworkModule& SdkConfig::networkmodule() const {
  const ::pbconfig::SdkConfig_NetworkModule* p = networkmodule_;
  // @@protoc_insertion_point(field_get:pbconfig.SdkConfig.networkModule)
  return p != nullptr ? *p : *reinterpret_cast<const ::pbconfig::SdkConfig_NetworkModule*>(
      &::pbconfig::_SdkConfig_NetworkModule_default_instance_);
}
inline ::pbconfig::SdkConfig_NetworkModule* SdkConfig::release_networkmodule() {
  // @@protoc_insertion_point(field_release:pbconfig.SdkConfig.networkModule)
  
  ::pbconfig::SdkConfig_NetworkModule* temp = networkmodule_;
  networkmodule_ = nullptr;
  return temp;
}
inline ::pbconfig::SdkConfig_NetworkModule* SdkConfig::mutable_networkmodule() {
  
  if (networkmodule_ == nullptr) {
    auto* p = CreateMaybeMessage<::pbconfig::SdkConfig_NetworkModule>(GetArenaNoVirtual());
    networkmodule_ = p;
  }
  // @@protoc_insertion_point(field_mutable:pbconfig.SdkConfig.networkModule)
  return networkmodule_;
}
inline void SdkConfig::set_allocated_networkmodule(::pbconfig::SdkConfig_NetworkModule* networkmodule) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete networkmodule_;
  }
  if (networkmodule) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      networkmodule = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, networkmodule, submessage_arena);
    }
    
  } else {
    
  }
  networkmodule_ = networkmodule;
  // @@protoc_insertion_point(field_set_allocated:pbconfig.SdkConfig.networkModule)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pbconfig

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_sdk_2econf_2eproto
