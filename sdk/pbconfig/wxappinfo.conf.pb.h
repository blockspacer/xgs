// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wxappinfo.conf.proto

#ifndef PROTOBUF_INCLUDED_wxappinfo_2econf_2eproto
#define PROTOBUF_INCLUDED_wxappinfo_2econf_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_wxappinfo_2econf_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_wxappinfo_2econf_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_wxappinfo_2econf_2eproto();
namespace pbconfig {
class WXAppInfo;
class WXAppInfoDefaultTypeInternal;
extern WXAppInfoDefaultTypeInternal _WXAppInfo_default_instance_;
}  // namespace pbconfig
namespace google {
namespace protobuf {
template<> ::pbconfig::WXAppInfo* Arena::CreateMaybeMessage<::pbconfig::WXAppInfo>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace pbconfig {

// ===================================================================

class WXAppInfo :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbconfig.WXAppInfo) */ {
 public:
  WXAppInfo();
  virtual ~WXAppInfo();

  WXAppInfo(const WXAppInfo& from);

  inline WXAppInfo& operator=(const WXAppInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WXAppInfo(WXAppInfo&& from) noexcept
    : WXAppInfo() {
    *this = ::std::move(from);
  }

  inline WXAppInfo& operator=(WXAppInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WXAppInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WXAppInfo* internal_default_instance() {
    return reinterpret_cast<const WXAppInfo*>(
               &_WXAppInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(WXAppInfo* other);
  friend void swap(WXAppInfo& a, WXAppInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WXAppInfo* New() const final {
    return CreateMaybeMessage<WXAppInfo>(nullptr);
  }

  WXAppInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WXAppInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WXAppInfo& from);
  void MergeFrom(const WXAppInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WXAppInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string appname = 1;
  void clear_appname();
  static const int kAppnameFieldNumber = 1;
  const ::std::string& appname() const;
  void set_appname(const ::std::string& value);
  #if LANG_CXX11
  void set_appname(::std::string&& value);
  #endif
  void set_appname(const char* value);
  void set_appname(const char* value, size_t size);
  ::std::string* mutable_appname();
  ::std::string* release_appname();
  void set_allocated_appname(::std::string* appname);

  // string appid = 2;
  void clear_appid();
  static const int kAppidFieldNumber = 2;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  #if LANG_CXX11
  void set_appid(::std::string&& value);
  #endif
  void set_appid(const char* value);
  void set_appid(const char* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // string secret = 3;
  void clear_secret();
  static const int kSecretFieldNumber = 3;
  const ::std::string& secret() const;
  void set_secret(const ::std::string& value);
  #if LANG_CXX11
  void set_secret(::std::string&& value);
  #endif
  void set_secret(const char* value);
  void set_secret(const char* value, size_t size);
  ::std::string* mutable_secret();
  ::std::string* release_secret();
  void set_allocated_secret(::std::string* secret);

  // @@protoc_insertion_point(class_scope:pbconfig.WXAppInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr appname_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  ::google::protobuf::internal::ArenaStringPtr secret_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_wxappinfo_2econf_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// WXAppInfo

// string appname = 1;
inline void WXAppInfo::clear_appname() {
  appname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WXAppInfo::appname() const {
  // @@protoc_insertion_point(field_get:pbconfig.WXAppInfo.appname)
  return appname_.GetNoArena();
}
inline void WXAppInfo::set_appname(const ::std::string& value) {
  
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbconfig.WXAppInfo.appname)
}
#if LANG_CXX11
inline void WXAppInfo::set_appname(::std::string&& value) {
  
  appname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbconfig.WXAppInfo.appname)
}
#endif
inline void WXAppInfo::set_appname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbconfig.WXAppInfo.appname)
}
inline void WXAppInfo::set_appname(const char* value, size_t size) {
  
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbconfig.WXAppInfo.appname)
}
inline ::std::string* WXAppInfo::mutable_appname() {
  
  // @@protoc_insertion_point(field_mutable:pbconfig.WXAppInfo.appname)
  return appname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WXAppInfo::release_appname() {
  // @@protoc_insertion_point(field_release:pbconfig.WXAppInfo.appname)
  
  return appname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WXAppInfo::set_allocated_appname(::std::string* appname) {
  if (appname != nullptr) {
    
  } else {
    
  }
  appname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appname);
  // @@protoc_insertion_point(field_set_allocated:pbconfig.WXAppInfo.appname)
}

// string appid = 2;
inline void WXAppInfo::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WXAppInfo::appid() const {
  // @@protoc_insertion_point(field_get:pbconfig.WXAppInfo.appid)
  return appid_.GetNoArena();
}
inline void WXAppInfo::set_appid(const ::std::string& value) {
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbconfig.WXAppInfo.appid)
}
#if LANG_CXX11
inline void WXAppInfo::set_appid(::std::string&& value) {
  
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbconfig.WXAppInfo.appid)
}
#endif
inline void WXAppInfo::set_appid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbconfig.WXAppInfo.appid)
}
inline void WXAppInfo::set_appid(const char* value, size_t size) {
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbconfig.WXAppInfo.appid)
}
inline ::std::string* WXAppInfo::mutable_appid() {
  
  // @@protoc_insertion_point(field_mutable:pbconfig.WXAppInfo.appid)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WXAppInfo::release_appid() {
  // @@protoc_insertion_point(field_release:pbconfig.WXAppInfo.appid)
  
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WXAppInfo::set_allocated_appid(::std::string* appid) {
  if (appid != nullptr) {
    
  } else {
    
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:pbconfig.WXAppInfo.appid)
}

// string secret = 3;
inline void WXAppInfo::clear_secret() {
  secret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WXAppInfo::secret() const {
  // @@protoc_insertion_point(field_get:pbconfig.WXAppInfo.secret)
  return secret_.GetNoArena();
}
inline void WXAppInfo::set_secret(const ::std::string& value) {
  
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbconfig.WXAppInfo.secret)
}
#if LANG_CXX11
inline void WXAppInfo::set_secret(::std::string&& value) {
  
  secret_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbconfig.WXAppInfo.secret)
}
#endif
inline void WXAppInfo::set_secret(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbconfig.WXAppInfo.secret)
}
inline void WXAppInfo::set_secret(const char* value, size_t size) {
  
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbconfig.WXAppInfo.secret)
}
inline ::std::string* WXAppInfo::mutable_secret() {
  
  // @@protoc_insertion_point(field_mutable:pbconfig.WXAppInfo.secret)
  return secret_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WXAppInfo::release_secret() {
  // @@protoc_insertion_point(field_release:pbconfig.WXAppInfo.secret)
  
  return secret_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WXAppInfo::set_allocated_secret(::std::string* secret) {
  if (secret != nullptr) {
    
  } else {
    
  }
  secret_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secret);
  // @@protoc_insertion_point(field_set_allocated:pbconfig.WXAppInfo.secret)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace pbconfig

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_wxappinfo_2econf_2eproto
