// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: link.conf.proto

#ifndef PROTOBUF_INCLUDED_link_2econf_2eproto
#define PROTOBUF_INCLUDED_link_2econf_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_link_2econf_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_link_2econf_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_link_2econf_2eproto();
namespace pbconfig {
class LinkConfig;
class LinkConfigDefaultTypeInternal;
extern LinkConfigDefaultTypeInternal _LinkConfig_default_instance_;
class LinkConfig_DatabaseModule;
class LinkConfig_DatabaseModuleDefaultTypeInternal;
extern LinkConfig_DatabaseModuleDefaultTypeInternal _LinkConfig_DatabaseModule_default_instance_;
class LinkConfig_LogicModule;
class LinkConfig_LogicModuleDefaultTypeInternal;
extern LinkConfig_LogicModuleDefaultTypeInternal _LinkConfig_LogicModule_default_instance_;
class LinkConfig_NetworkModule;
class LinkConfig_NetworkModuleDefaultTypeInternal;
extern LinkConfig_NetworkModuleDefaultTypeInternal _LinkConfig_NetworkModule_default_instance_;
class LinkConfig_ResourceModule;
class LinkConfig_ResourceModuleDefaultTypeInternal;
extern LinkConfig_ResourceModuleDefaultTypeInternal _LinkConfig_ResourceModule_default_instance_;
}  // namespace pbconfig
namespace google {
namespace protobuf {
template<> ::pbconfig::LinkConfig* Arena::CreateMaybeMessage<::pbconfig::LinkConfig>(Arena*);
template<> ::pbconfig::LinkConfig_DatabaseModule* Arena::CreateMaybeMessage<::pbconfig::LinkConfig_DatabaseModule>(Arena*);
template<> ::pbconfig::LinkConfig_LogicModule* Arena::CreateMaybeMessage<::pbconfig::LinkConfig_LogicModule>(Arena*);
template<> ::pbconfig::LinkConfig_NetworkModule* Arena::CreateMaybeMessage<::pbconfig::LinkConfig_NetworkModule>(Arena*);
template<> ::pbconfig::LinkConfig_ResourceModule* Arena::CreateMaybeMessage<::pbconfig::LinkConfig_ResourceModule>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace pbconfig {

// ===================================================================

class LinkConfig_ResourceModule :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbconfig.LinkConfig.ResourceModule) */ {
 public:
  LinkConfig_ResourceModule();
  virtual ~LinkConfig_ResourceModule();

  LinkConfig_ResourceModule(const LinkConfig_ResourceModule& from);

  inline LinkConfig_ResourceModule& operator=(const LinkConfig_ResourceModule& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LinkConfig_ResourceModule(LinkConfig_ResourceModule&& from) noexcept
    : LinkConfig_ResourceModule() {
    *this = ::std::move(from);
  }

  inline LinkConfig_ResourceModule& operator=(LinkConfig_ResourceModule&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LinkConfig_ResourceModule& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LinkConfig_ResourceModule* internal_default_instance() {
    return reinterpret_cast<const LinkConfig_ResourceModule*>(
               &_LinkConfig_ResourceModule_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(LinkConfig_ResourceModule* other);
  friend void swap(LinkConfig_ResourceModule& a, LinkConfig_ResourceModule& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LinkConfig_ResourceModule* New() const final {
    return CreateMaybeMessage<LinkConfig_ResourceModule>(nullptr);
  }

  LinkConfig_ResourceModule* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LinkConfig_ResourceModule>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LinkConfig_ResourceModule& from);
  void MergeFrom(const LinkConfig_ResourceModule& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LinkConfig_ResourceModule* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pbconfig.LinkConfig.ResourceModule)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_link_2econf_2eproto;
};
// -------------------------------------------------------------------

class LinkConfig_LogicModule :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbconfig.LinkConfig.LogicModule) */ {
 public:
  LinkConfig_LogicModule();
  virtual ~LinkConfig_LogicModule();

  LinkConfig_LogicModule(const LinkConfig_LogicModule& from);

  inline LinkConfig_LogicModule& operator=(const LinkConfig_LogicModule& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LinkConfig_LogicModule(LinkConfig_LogicModule&& from) noexcept
    : LinkConfig_LogicModule() {
    *this = ::std::move(from);
  }

  inline LinkConfig_LogicModule& operator=(LinkConfig_LogicModule&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LinkConfig_LogicModule& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LinkConfig_LogicModule* internal_default_instance() {
    return reinterpret_cast<const LinkConfig_LogicModule*>(
               &_LinkConfig_LogicModule_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(LinkConfig_LogicModule* other);
  friend void swap(LinkConfig_LogicModule& a, LinkConfig_LogicModule& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LinkConfig_LogicModule* New() const final {
    return CreateMaybeMessage<LinkConfig_LogicModule>(nullptr);
  }

  LinkConfig_LogicModule* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LinkConfig_LogicModule>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LinkConfig_LogicModule& from);
  void MergeFrom(const LinkConfig_LogicModule& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LinkConfig_LogicModule* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 work_thread_num = 1;
  void clear_work_thread_num();
  static const int kWorkThreadNumFieldNumber = 1;
  ::google::protobuf::uint32 work_thread_num() const;
  void set_work_thread_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pbconfig.LinkConfig.LogicModule)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 work_thread_num_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_link_2econf_2eproto;
};
// -------------------------------------------------------------------

class LinkConfig_DatabaseModule :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbconfig.LinkConfig.DatabaseModule) */ {
 public:
  LinkConfig_DatabaseModule();
  virtual ~LinkConfig_DatabaseModule();

  LinkConfig_DatabaseModule(const LinkConfig_DatabaseModule& from);

  inline LinkConfig_DatabaseModule& operator=(const LinkConfig_DatabaseModule& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LinkConfig_DatabaseModule(LinkConfig_DatabaseModule&& from) noexcept
    : LinkConfig_DatabaseModule() {
    *this = ::std::move(from);
  }

  inline LinkConfig_DatabaseModule& operator=(LinkConfig_DatabaseModule&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LinkConfig_DatabaseModule& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LinkConfig_DatabaseModule* internal_default_instance() {
    return reinterpret_cast<const LinkConfig_DatabaseModule*>(
               &_LinkConfig_DatabaseModule_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(LinkConfig_DatabaseModule* other);
  friend void swap(LinkConfig_DatabaseModule& a, LinkConfig_DatabaseModule& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LinkConfig_DatabaseModule* New() const final {
    return CreateMaybeMessage<LinkConfig_DatabaseModule>(nullptr);
  }

  LinkConfig_DatabaseModule* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LinkConfig_DatabaseModule>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LinkConfig_DatabaseModule& from);
  void MergeFrom(const LinkConfig_DatabaseModule& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LinkConfig_DatabaseModule* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pbconfig.LinkConfig.DatabaseModule)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_link_2econf_2eproto;
};
// -------------------------------------------------------------------

class LinkConfig_NetworkModule :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbconfig.LinkConfig.NetworkModule) */ {
 public:
  LinkConfig_NetworkModule();
  virtual ~LinkConfig_NetworkModule();

  LinkConfig_NetworkModule(const LinkConfig_NetworkModule& from);

  inline LinkConfig_NetworkModule& operator=(const LinkConfig_NetworkModule& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LinkConfig_NetworkModule(LinkConfig_NetworkModule&& from) noexcept
    : LinkConfig_NetworkModule() {
    *this = ::std::move(from);
  }

  inline LinkConfig_NetworkModule& operator=(LinkConfig_NetworkModule&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LinkConfig_NetworkModule& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LinkConfig_NetworkModule* internal_default_instance() {
    return reinterpret_cast<const LinkConfig_NetworkModule*>(
               &_LinkConfig_NetworkModule_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(LinkConfig_NetworkModule* other);
  friend void swap(LinkConfig_NetworkModule& a, LinkConfig_NetworkModule& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LinkConfig_NetworkModule* New() const final {
    return CreateMaybeMessage<LinkConfig_NetworkModule>(nullptr);
  }

  LinkConfig_NetworkModule* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LinkConfig_NetworkModule>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LinkConfig_NetworkModule& from);
  void MergeFrom(const LinkConfig_NetworkModule& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LinkConfig_NetworkModule* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string from_c_listen_addr = 1;
  void clear_from_c_listen_addr();
  static const int kFromCListenAddrFieldNumber = 1;
  const ::std::string& from_c_listen_addr() const;
  void set_from_c_listen_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_from_c_listen_addr(::std::string&& value);
  #endif
  void set_from_c_listen_addr(const char* value);
  void set_from_c_listen_addr(const char* value, size_t size);
  ::std::string* mutable_from_c_listen_addr();
  ::std::string* release_from_c_listen_addr();
  void set_allocated_from_c_listen_addr(::std::string* from_c_listen_addr);

  // string to_ls_remote_addr = 4;
  void clear_to_ls_remote_addr();
  static const int kToLsRemoteAddrFieldNumber = 4;
  const ::std::string& to_ls_remote_addr() const;
  void set_to_ls_remote_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_to_ls_remote_addr(::std::string&& value);
  #endif
  void set_to_ls_remote_addr(const char* value);
  void set_to_ls_remote_addr(const char* value, size_t size);
  ::std::string* mutable_to_ls_remote_addr();
  ::std::string* release_to_ls_remote_addr();
  void set_allocated_to_ls_remote_addr(::std::string* to_ls_remote_addr);

  // uint32 from_c_thread_num = 2;
  void clear_from_c_thread_num();
  static const int kFromCThreadNumFieldNumber = 2;
  ::google::protobuf::uint32 from_c_thread_num() const;
  void set_from_c_thread_num(::google::protobuf::uint32 value);

  // uint32 from_c_session_num = 3;
  void clear_from_c_session_num();
  static const int kFromCSessionNumFieldNumber = 3;
  ::google::protobuf::uint32 from_c_session_num() const;
  void set_from_c_session_num(::google::protobuf::uint32 value);

  // uint32 to_ls_thread_num = 5;
  void clear_to_ls_thread_num();
  static const int kToLsThreadNumFieldNumber = 5;
  ::google::protobuf::uint32 to_ls_thread_num() const;
  void set_to_ls_thread_num(::google::protobuf::uint32 value);

  // uint32 to_ls_session_num = 6;
  void clear_to_ls_session_num();
  static const int kToLsSessionNumFieldNumber = 6;
  ::google::protobuf::uint32 to_ls_session_num() const;
  void set_to_ls_session_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pbconfig.LinkConfig.NetworkModule)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr from_c_listen_addr_;
  ::google::protobuf::internal::ArenaStringPtr to_ls_remote_addr_;
  ::google::protobuf::uint32 from_c_thread_num_;
  ::google::protobuf::uint32 from_c_session_num_;
  ::google::protobuf::uint32 to_ls_thread_num_;
  ::google::protobuf::uint32 to_ls_session_num_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_link_2econf_2eproto;
};
// -------------------------------------------------------------------

class LinkConfig :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbconfig.LinkConfig) */ {
 public:
  LinkConfig();
  virtual ~LinkConfig();

  LinkConfig(const LinkConfig& from);

  inline LinkConfig& operator=(const LinkConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LinkConfig(LinkConfig&& from) noexcept
    : LinkConfig() {
    *this = ::std::move(from);
  }

  inline LinkConfig& operator=(LinkConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LinkConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LinkConfig* internal_default_instance() {
    return reinterpret_cast<const LinkConfig*>(
               &_LinkConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(LinkConfig* other);
  friend void swap(LinkConfig& a, LinkConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LinkConfig* New() const final {
    return CreateMaybeMessage<LinkConfig>(nullptr);
  }

  LinkConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LinkConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LinkConfig& from);
  void MergeFrom(const LinkConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LinkConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef LinkConfig_ResourceModule ResourceModule;
  typedef LinkConfig_LogicModule LogicModule;
  typedef LinkConfig_DatabaseModule DatabaseModule;
  typedef LinkConfig_NetworkModule NetworkModule;

  // accessors -------------------------------------------------------

  // .pbconfig.LinkConfig.LogicModule logicModule = 1;
  bool has_logicmodule() const;
  void clear_logicmodule();
  static const int kLogicModuleFieldNumber = 1;
  const ::pbconfig::LinkConfig_LogicModule& logicmodule() const;
  ::pbconfig::LinkConfig_LogicModule* release_logicmodule();
  ::pbconfig::LinkConfig_LogicModule* mutable_logicmodule();
  void set_allocated_logicmodule(::pbconfig::LinkConfig_LogicModule* logicmodule);

  // .pbconfig.LinkConfig.NetworkModule networkModule = 2;
  bool has_networkmodule() const;
  void clear_networkmodule();
  static const int kNetworkModuleFieldNumber = 2;
  const ::pbconfig::LinkConfig_NetworkModule& networkmodule() const;
  ::pbconfig::LinkConfig_NetworkModule* release_networkmodule();
  ::pbconfig::LinkConfig_NetworkModule* mutable_networkmodule();
  void set_allocated_networkmodule(::pbconfig::LinkConfig_NetworkModule* networkmodule);

  // @@protoc_insertion_point(class_scope:pbconfig.LinkConfig)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::pbconfig::LinkConfig_LogicModule* logicmodule_;
  ::pbconfig::LinkConfig_NetworkModule* networkmodule_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_link_2econf_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LinkConfig_ResourceModule

// -------------------------------------------------------------------

// LinkConfig_LogicModule

// uint32 work_thread_num = 1;
inline void LinkConfig_LogicModule::clear_work_thread_num() {
  work_thread_num_ = 0u;
}
inline ::google::protobuf::uint32 LinkConfig_LogicModule::work_thread_num() const {
  // @@protoc_insertion_point(field_get:pbconfig.LinkConfig.LogicModule.work_thread_num)
  return work_thread_num_;
}
inline void LinkConfig_LogicModule::set_work_thread_num(::google::protobuf::uint32 value) {
  
  work_thread_num_ = value;
  // @@protoc_insertion_point(field_set:pbconfig.LinkConfig.LogicModule.work_thread_num)
}

// -------------------------------------------------------------------

// LinkConfig_DatabaseModule

// -------------------------------------------------------------------

// LinkConfig_NetworkModule

// string from_c_listen_addr = 1;
inline void LinkConfig_NetworkModule::clear_from_c_listen_addr() {
  from_c_listen_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LinkConfig_NetworkModule::from_c_listen_addr() const {
  // @@protoc_insertion_point(field_get:pbconfig.LinkConfig.NetworkModule.from_c_listen_addr)
  return from_c_listen_addr_.GetNoArena();
}
inline void LinkConfig_NetworkModule::set_from_c_listen_addr(const ::std::string& value) {
  
  from_c_listen_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbconfig.LinkConfig.NetworkModule.from_c_listen_addr)
}
#if LANG_CXX11
inline void LinkConfig_NetworkModule::set_from_c_listen_addr(::std::string&& value) {
  
  from_c_listen_addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbconfig.LinkConfig.NetworkModule.from_c_listen_addr)
}
#endif
inline void LinkConfig_NetworkModule::set_from_c_listen_addr(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  from_c_listen_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbconfig.LinkConfig.NetworkModule.from_c_listen_addr)
}
inline void LinkConfig_NetworkModule::set_from_c_listen_addr(const char* value, size_t size) {
  
  from_c_listen_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbconfig.LinkConfig.NetworkModule.from_c_listen_addr)
}
inline ::std::string* LinkConfig_NetworkModule::mutable_from_c_listen_addr() {
  
  // @@protoc_insertion_point(field_mutable:pbconfig.LinkConfig.NetworkModule.from_c_listen_addr)
  return from_c_listen_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LinkConfig_NetworkModule::release_from_c_listen_addr() {
  // @@protoc_insertion_point(field_release:pbconfig.LinkConfig.NetworkModule.from_c_listen_addr)
  
  return from_c_listen_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LinkConfig_NetworkModule::set_allocated_from_c_listen_addr(::std::string* from_c_listen_addr) {
  if (from_c_listen_addr != nullptr) {
    
  } else {
    
  }
  from_c_listen_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_c_listen_addr);
  // @@protoc_insertion_point(field_set_allocated:pbconfig.LinkConfig.NetworkModule.from_c_listen_addr)
}

// uint32 from_c_thread_num = 2;
inline void LinkConfig_NetworkModule::clear_from_c_thread_num() {
  from_c_thread_num_ = 0u;
}
inline ::google::protobuf::uint32 LinkConfig_NetworkModule::from_c_thread_num() const {
  // @@protoc_insertion_point(field_get:pbconfig.LinkConfig.NetworkModule.from_c_thread_num)
  return from_c_thread_num_;
}
inline void LinkConfig_NetworkModule::set_from_c_thread_num(::google::protobuf::uint32 value) {
  
  from_c_thread_num_ = value;
  // @@protoc_insertion_point(field_set:pbconfig.LinkConfig.NetworkModule.from_c_thread_num)
}

// uint32 from_c_session_num = 3;
inline void LinkConfig_NetworkModule::clear_from_c_session_num() {
  from_c_session_num_ = 0u;
}
inline ::google::protobuf::uint32 LinkConfig_NetworkModule::from_c_session_num() const {
  // @@protoc_insertion_point(field_get:pbconfig.LinkConfig.NetworkModule.from_c_session_num)
  return from_c_session_num_;
}
inline void LinkConfig_NetworkModule::set_from_c_session_num(::google::protobuf::uint32 value) {
  
  from_c_session_num_ = value;
  // @@protoc_insertion_point(field_set:pbconfig.LinkConfig.NetworkModule.from_c_session_num)
}

// string to_ls_remote_addr = 4;
inline void LinkConfig_NetworkModule::clear_to_ls_remote_addr() {
  to_ls_remote_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LinkConfig_NetworkModule::to_ls_remote_addr() const {
  // @@protoc_insertion_point(field_get:pbconfig.LinkConfig.NetworkModule.to_ls_remote_addr)
  return to_ls_remote_addr_.GetNoArena();
}
inline void LinkConfig_NetworkModule::set_to_ls_remote_addr(const ::std::string& value) {
  
  to_ls_remote_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbconfig.LinkConfig.NetworkModule.to_ls_remote_addr)
}
#if LANG_CXX11
inline void LinkConfig_NetworkModule::set_to_ls_remote_addr(::std::string&& value) {
  
  to_ls_remote_addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbconfig.LinkConfig.NetworkModule.to_ls_remote_addr)
}
#endif
inline void LinkConfig_NetworkModule::set_to_ls_remote_addr(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  to_ls_remote_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbconfig.LinkConfig.NetworkModule.to_ls_remote_addr)
}
inline void LinkConfig_NetworkModule::set_to_ls_remote_addr(const char* value, size_t size) {
  
  to_ls_remote_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbconfig.LinkConfig.NetworkModule.to_ls_remote_addr)
}
inline ::std::string* LinkConfig_NetworkModule::mutable_to_ls_remote_addr() {
  
  // @@protoc_insertion_point(field_mutable:pbconfig.LinkConfig.NetworkModule.to_ls_remote_addr)
  return to_ls_remote_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LinkConfig_NetworkModule::release_to_ls_remote_addr() {
  // @@protoc_insertion_point(field_release:pbconfig.LinkConfig.NetworkModule.to_ls_remote_addr)
  
  return to_ls_remote_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LinkConfig_NetworkModule::set_allocated_to_ls_remote_addr(::std::string* to_ls_remote_addr) {
  if (to_ls_remote_addr != nullptr) {
    
  } else {
    
  }
  to_ls_remote_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_ls_remote_addr);
  // @@protoc_insertion_point(field_set_allocated:pbconfig.LinkConfig.NetworkModule.to_ls_remote_addr)
}

// uint32 to_ls_thread_num = 5;
inline void LinkConfig_NetworkModule::clear_to_ls_thread_num() {
  to_ls_thread_num_ = 0u;
}
inline ::google::protobuf::uint32 LinkConfig_NetworkModule::to_ls_thread_num() const {
  // @@protoc_insertion_point(field_get:pbconfig.LinkConfig.NetworkModule.to_ls_thread_num)
  return to_ls_thread_num_;
}
inline void LinkConfig_NetworkModule::set_to_ls_thread_num(::google::protobuf::uint32 value) {
  
  to_ls_thread_num_ = value;
  // @@protoc_insertion_point(field_set:pbconfig.LinkConfig.NetworkModule.to_ls_thread_num)
}

// uint32 to_ls_session_num = 6;
inline void LinkConfig_NetworkModule::clear_to_ls_session_num() {
  to_ls_session_num_ = 0u;
}
inline ::google::protobuf::uint32 LinkConfig_NetworkModule::to_ls_session_num() const {
  // @@protoc_insertion_point(field_get:pbconfig.LinkConfig.NetworkModule.to_ls_session_num)
  return to_ls_session_num_;
}
inline void LinkConfig_NetworkModule::set_to_ls_session_num(::google::protobuf::uint32 value) {
  
  to_ls_session_num_ = value;
  // @@protoc_insertion_point(field_set:pbconfig.LinkConfig.NetworkModule.to_ls_session_num)
}

// -------------------------------------------------------------------

// LinkConfig

// .pbconfig.LinkConfig.LogicModule logicModule = 1;
inline bool LinkConfig::has_logicmodule() const {
  return this != internal_default_instance() && logicmodule_ != nullptr;
}
inline void LinkConfig::clear_logicmodule() {
  if (GetArenaNoVirtual() == nullptr && logicmodule_ != nullptr) {
    delete logicmodule_;
  }
  logicmodule_ = nullptr;
}
inline const ::pbconfig::LinkConfig_LogicModule& LinkConfig::logicmodule() const {
  const ::pbconfig::LinkConfig_LogicModule* p = logicmodule_;
  // @@protoc_insertion_point(field_get:pbconfig.LinkConfig.logicModule)
  return p != nullptr ? *p : *reinterpret_cast<const ::pbconfig::LinkConfig_LogicModule*>(
      &::pbconfig::_LinkConfig_LogicModule_default_instance_);
}
inline ::pbconfig::LinkConfig_LogicModule* LinkConfig::release_logicmodule() {
  // @@protoc_insertion_point(field_release:pbconfig.LinkConfig.logicModule)
  
  ::pbconfig::LinkConfig_LogicModule* temp = logicmodule_;
  logicmodule_ = nullptr;
  return temp;
}
inline ::pbconfig::LinkConfig_LogicModule* LinkConfig::mutable_logicmodule() {
  
  if (logicmodule_ == nullptr) {
    auto* p = CreateMaybeMessage<::pbconfig::LinkConfig_LogicModule>(GetArenaNoVirtual());
    logicmodule_ = p;
  }
  // @@protoc_insertion_point(field_mutable:pbconfig.LinkConfig.logicModule)
  return logicmodule_;
}
inline void LinkConfig::set_allocated_logicmodule(::pbconfig::LinkConfig_LogicModule* logicmodule) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete logicmodule_;
  }
  if (logicmodule) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      logicmodule = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, logicmodule, submessage_arena);
    }
    
  } else {
    
  }
  logicmodule_ = logicmodule;
  // @@protoc_insertion_point(field_set_allocated:pbconfig.LinkConfig.logicModule)
}

// .pbconfig.LinkConfig.NetworkModule networkModule = 2;
inline bool LinkConfig::has_networkmodule() const {
  return this != internal_default_instance() && networkmodule_ != nullptr;
}
inline void LinkConfig::clear_networkmodule() {
  if (GetArenaNoVirtual() == nullptr && networkmodule_ != nullptr) {
    delete networkmodule_;
  }
  networkmodule_ = nullptr;
}
inline const ::pbconfig::LinkConfig_NetworkModule& LinkConfig::networkmodule() const {
  const ::pbconfig::LinkConfig_NetworkModule* p = networkmodule_;
  // @@protoc_insertion_point(field_get:pbconfig.LinkConfig.networkModule)
  return p != nullptr ? *p : *reinterpret_cast<const ::pbconfig::LinkConfig_NetworkModule*>(
      &::pbconfig::_LinkConfig_NetworkModule_default_instance_);
}
inline ::pbconfig::LinkConfig_NetworkModule* LinkConfig::release_networkmodule() {
  // @@protoc_insertion_point(field_release:pbconfig.LinkConfig.networkModule)
  
  ::pbconfig::LinkConfig_NetworkModule* temp = networkmodule_;
  networkmodule_ = nullptr;
  return temp;
}
inline ::pbconfig::LinkConfig_NetworkModule* LinkConfig::mutable_networkmodule() {
  
  if (networkmodule_ == nullptr) {
    auto* p = CreateMaybeMessage<::pbconfig::LinkConfig_NetworkModule>(GetArenaNoVirtual());
    networkmodule_ = p;
  }
  // @@protoc_insertion_point(field_mutable:pbconfig.LinkConfig.networkModule)
  return networkmodule_;
}
inline void LinkConfig::set_allocated_networkmodule(::pbconfig::LinkConfig_NetworkModule* networkmodule) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete networkmodule_;
  }
  if (networkmodule) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      networkmodule = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, networkmodule, submessage_arena);
    }
    
  } else {
    
  }
  networkmodule_ = networkmodule;
  // @@protoc_insertion_point(field_set_allocated:pbconfig.LinkConfig.networkModule)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pbconfig

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_link_2econf_2eproto
