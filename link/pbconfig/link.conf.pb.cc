// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: link.conf.proto

#include "link.conf.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_link_2econf_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LinkConfig_LogicModule_link_2econf_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_link_2econf_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LinkConfig_NetworkModule_link_2econf_2eproto;
namespace pbconfig {
class LinkConfig_ResourceModuleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LinkConfig_ResourceModule> _instance;
} _LinkConfig_ResourceModule_default_instance_;
class LinkConfig_LogicModuleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LinkConfig_LogicModule> _instance;
} _LinkConfig_LogicModule_default_instance_;
class LinkConfig_DatabaseModuleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LinkConfig_DatabaseModule> _instance;
} _LinkConfig_DatabaseModule_default_instance_;
class LinkConfig_NetworkModuleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LinkConfig_NetworkModule> _instance;
} _LinkConfig_NetworkModule_default_instance_;
class LinkConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LinkConfig> _instance;
} _LinkConfig_default_instance_;
}  // namespace pbconfig
static void InitDefaultsLinkConfig_ResourceModule_link_2econf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbconfig::_LinkConfig_ResourceModule_default_instance_;
    new (ptr) ::pbconfig::LinkConfig_ResourceModule();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbconfig::LinkConfig_ResourceModule::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LinkConfig_ResourceModule_link_2econf_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLinkConfig_ResourceModule_link_2econf_2eproto}, {}};

static void InitDefaultsLinkConfig_LogicModule_link_2econf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbconfig::_LinkConfig_LogicModule_default_instance_;
    new (ptr) ::pbconfig::LinkConfig_LogicModule();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbconfig::LinkConfig_LogicModule::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LinkConfig_LogicModule_link_2econf_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLinkConfig_LogicModule_link_2econf_2eproto}, {}};

static void InitDefaultsLinkConfig_DatabaseModule_link_2econf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbconfig::_LinkConfig_DatabaseModule_default_instance_;
    new (ptr) ::pbconfig::LinkConfig_DatabaseModule();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbconfig::LinkConfig_DatabaseModule::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LinkConfig_DatabaseModule_link_2econf_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLinkConfig_DatabaseModule_link_2econf_2eproto}, {}};

static void InitDefaultsLinkConfig_NetworkModule_link_2econf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbconfig::_LinkConfig_NetworkModule_default_instance_;
    new (ptr) ::pbconfig::LinkConfig_NetworkModule();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbconfig::LinkConfig_NetworkModule::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LinkConfig_NetworkModule_link_2econf_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLinkConfig_NetworkModule_link_2econf_2eproto}, {}};

static void InitDefaultsLinkConfig_link_2econf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbconfig::_LinkConfig_default_instance_;
    new (ptr) ::pbconfig::LinkConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbconfig::LinkConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_LinkConfig_link_2econf_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsLinkConfig_link_2econf_2eproto}, {
      &scc_info_LinkConfig_LogicModule_link_2econf_2eproto.base,
      &scc_info_LinkConfig_NetworkModule_link_2econf_2eproto.base,}};

void InitDefaults_link_2econf_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_LinkConfig_ResourceModule_link_2econf_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LinkConfig_LogicModule_link_2econf_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LinkConfig_DatabaseModule_link_2econf_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LinkConfig_NetworkModule_link_2econf_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LinkConfig_link_2econf_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_link_2econf_2eproto[5];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_link_2econf_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_link_2econf_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_link_2econf_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbconfig::LinkConfig_ResourceModule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbconfig::LinkConfig_LogicModule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pbconfig::LinkConfig_LogicModule, work_thread_num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbconfig::LinkConfig_DatabaseModule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbconfig::LinkConfig_NetworkModule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pbconfig::LinkConfig_NetworkModule, from_c_listen_addr_),
  PROTOBUF_FIELD_OFFSET(::pbconfig::LinkConfig_NetworkModule, from_c_thread_num_),
  PROTOBUF_FIELD_OFFSET(::pbconfig::LinkConfig_NetworkModule, from_c_session_num_),
  PROTOBUF_FIELD_OFFSET(::pbconfig::LinkConfig_NetworkModule, to_ls_remote_addr_),
  PROTOBUF_FIELD_OFFSET(::pbconfig::LinkConfig_NetworkModule, to_ls_thread_num_),
  PROTOBUF_FIELD_OFFSET(::pbconfig::LinkConfig_NetworkModule, to_ls_session_num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbconfig::LinkConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pbconfig::LinkConfig, logicmodule_),
  PROTOBUF_FIELD_OFFSET(::pbconfig::LinkConfig, networkmodule_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pbconfig::LinkConfig_ResourceModule)},
  { 5, -1, sizeof(::pbconfig::LinkConfig_LogicModule)},
  { 11, -1, sizeof(::pbconfig::LinkConfig_DatabaseModule)},
  { 16, -1, sizeof(::pbconfig::LinkConfig_NetworkModule)},
  { 27, -1, sizeof(::pbconfig::LinkConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::pbconfig::_LinkConfig_ResourceModule_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pbconfig::_LinkConfig_LogicModule_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pbconfig::_LinkConfig_DatabaseModule_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pbconfig::_LinkConfig_NetworkModule_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pbconfig::_LinkConfig_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_link_2econf_2eproto = {
  {}, AddDescriptors_link_2econf_2eproto, "link.conf.proto", schemas,
  file_default_instances, TableStruct_link_2econf_2eproto::offsets,
  file_level_metadata_link_2econf_2eproto, 5, file_level_enum_descriptors_link_2econf_2eproto, file_level_service_descriptors_link_2econf_2eproto,
};

const char descriptor_table_protodef_link_2econf_2eproto[] =
  "\n\017link.conf.proto\022\010pbconfig\"\377\002\n\nLinkConf"
  "ig\0225\n\013logicModule\030\001 \001(\0132 .pbconfig.LinkC"
  "onfig.LogicModule\0229\n\rnetworkModule\030\002 \001(\013"
  "2\".pbconfig.LinkConfig.NetworkModule\032\020\n\016"
  "ResourceModule\032&\n\013LogicModule\022\027\n\017work_th"
  "read_num\030\001 \001(\r\032\020\n\016DatabaseModule\032\262\001\n\rNet"
  "workModule\022\032\n\022from_c_listen_addr\030\001 \001(\t\022\031"
  "\n\021from_c_thread_num\030\002 \001(\r\022\032\n\022from_c_sess"
  "ion_num\030\003 \001(\r\022\031\n\021to_ls_remote_addr\030\004 \001(\t"
  "\022\030\n\020to_ls_thread_num\030\005 \001(\r\022\031\n\021to_ls_sess"
  "ion_num\030\006 \001(\rb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_link_2econf_2eproto = {
  false, InitDefaults_link_2econf_2eproto, 
  descriptor_table_protodef_link_2econf_2eproto,
  "link.conf.proto", &assign_descriptors_table_link_2econf_2eproto, 421,
};

void AddDescriptors_link_2econf_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_link_2econf_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_link_2econf_2eproto = []() { AddDescriptors_link_2econf_2eproto(); return true; }();
namespace pbconfig {

// ===================================================================

void LinkConfig_ResourceModule::InitAsDefaultInstance() {
}
class LinkConfig_ResourceModule::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LinkConfig_ResourceModule::LinkConfig_ResourceModule()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbconfig.LinkConfig.ResourceModule)
}
LinkConfig_ResourceModule::LinkConfig_ResourceModule(const LinkConfig_ResourceModule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pbconfig.LinkConfig.ResourceModule)
}

void LinkConfig_ResourceModule::SharedCtor() {
}

LinkConfig_ResourceModule::~LinkConfig_ResourceModule() {
  // @@protoc_insertion_point(destructor:pbconfig.LinkConfig.ResourceModule)
  SharedDtor();
}

void LinkConfig_ResourceModule::SharedDtor() {
}

void LinkConfig_ResourceModule::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LinkConfig_ResourceModule& LinkConfig_ResourceModule::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LinkConfig_ResourceModule_link_2econf_2eproto.base);
  return *internal_default_instance();
}


void LinkConfig_ResourceModule::Clear() {
// @@protoc_insertion_point(message_clear_start:pbconfig.LinkConfig.ResourceModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LinkConfig_ResourceModule::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LinkConfig_ResourceModule*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LinkConfig_ResourceModule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbconfig.LinkConfig.ResourceModule)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pbconfig.LinkConfig.ResourceModule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbconfig.LinkConfig.ResourceModule)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LinkConfig_ResourceModule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbconfig.LinkConfig.ResourceModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pbconfig.LinkConfig.ResourceModule)
}

::google::protobuf::uint8* LinkConfig_ResourceModule::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbconfig.LinkConfig.ResourceModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbconfig.LinkConfig.ResourceModule)
  return target;
}

size_t LinkConfig_ResourceModule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbconfig.LinkConfig.ResourceModule)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LinkConfig_ResourceModule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbconfig.LinkConfig.ResourceModule)
  GOOGLE_DCHECK_NE(&from, this);
  const LinkConfig_ResourceModule* source =
      ::google::protobuf::DynamicCastToGenerated<LinkConfig_ResourceModule>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbconfig.LinkConfig.ResourceModule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbconfig.LinkConfig.ResourceModule)
    MergeFrom(*source);
  }
}

void LinkConfig_ResourceModule::MergeFrom(const LinkConfig_ResourceModule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbconfig.LinkConfig.ResourceModule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void LinkConfig_ResourceModule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbconfig.LinkConfig.ResourceModule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinkConfig_ResourceModule::CopyFrom(const LinkConfig_ResourceModule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbconfig.LinkConfig.ResourceModule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinkConfig_ResourceModule::IsInitialized() const {
  return true;
}

void LinkConfig_ResourceModule::Swap(LinkConfig_ResourceModule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LinkConfig_ResourceModule::InternalSwap(LinkConfig_ResourceModule* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LinkConfig_ResourceModule::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_link_2econf_2eproto);
  return ::file_level_metadata_link_2econf_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LinkConfig_LogicModule::InitAsDefaultInstance() {
}
class LinkConfig_LogicModule::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinkConfig_LogicModule::kWorkThreadNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LinkConfig_LogicModule::LinkConfig_LogicModule()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbconfig.LinkConfig.LogicModule)
}
LinkConfig_LogicModule::LinkConfig_LogicModule(const LinkConfig_LogicModule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  work_thread_num_ = from.work_thread_num_;
  // @@protoc_insertion_point(copy_constructor:pbconfig.LinkConfig.LogicModule)
}

void LinkConfig_LogicModule::SharedCtor() {
  work_thread_num_ = 0u;
}

LinkConfig_LogicModule::~LinkConfig_LogicModule() {
  // @@protoc_insertion_point(destructor:pbconfig.LinkConfig.LogicModule)
  SharedDtor();
}

void LinkConfig_LogicModule::SharedDtor() {
}

void LinkConfig_LogicModule::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LinkConfig_LogicModule& LinkConfig_LogicModule::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LinkConfig_LogicModule_link_2econf_2eproto.base);
  return *internal_default_instance();
}


void LinkConfig_LogicModule::Clear() {
// @@protoc_insertion_point(message_clear_start:pbconfig.LinkConfig.LogicModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  work_thread_num_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LinkConfig_LogicModule::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LinkConfig_LogicModule*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 work_thread_num = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_work_thread_num(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LinkConfig_LogicModule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbconfig.LinkConfig.LogicModule)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 work_thread_num = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &work_thread_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbconfig.LinkConfig.LogicModule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbconfig.LinkConfig.LogicModule)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LinkConfig_LogicModule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbconfig.LinkConfig.LogicModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 work_thread_num = 1;
  if (this->work_thread_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->work_thread_num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pbconfig.LinkConfig.LogicModule)
}

::google::protobuf::uint8* LinkConfig_LogicModule::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbconfig.LinkConfig.LogicModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 work_thread_num = 1;
  if (this->work_thread_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->work_thread_num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbconfig.LinkConfig.LogicModule)
  return target;
}

size_t LinkConfig_LogicModule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbconfig.LinkConfig.LogicModule)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 work_thread_num = 1;
  if (this->work_thread_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->work_thread_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LinkConfig_LogicModule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbconfig.LinkConfig.LogicModule)
  GOOGLE_DCHECK_NE(&from, this);
  const LinkConfig_LogicModule* source =
      ::google::protobuf::DynamicCastToGenerated<LinkConfig_LogicModule>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbconfig.LinkConfig.LogicModule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbconfig.LinkConfig.LogicModule)
    MergeFrom(*source);
  }
}

void LinkConfig_LogicModule::MergeFrom(const LinkConfig_LogicModule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbconfig.LinkConfig.LogicModule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.work_thread_num() != 0) {
    set_work_thread_num(from.work_thread_num());
  }
}

void LinkConfig_LogicModule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbconfig.LinkConfig.LogicModule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinkConfig_LogicModule::CopyFrom(const LinkConfig_LogicModule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbconfig.LinkConfig.LogicModule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinkConfig_LogicModule::IsInitialized() const {
  return true;
}

void LinkConfig_LogicModule::Swap(LinkConfig_LogicModule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LinkConfig_LogicModule::InternalSwap(LinkConfig_LogicModule* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(work_thread_num_, other->work_thread_num_);
}

::google::protobuf::Metadata LinkConfig_LogicModule::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_link_2econf_2eproto);
  return ::file_level_metadata_link_2econf_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LinkConfig_DatabaseModule::InitAsDefaultInstance() {
}
class LinkConfig_DatabaseModule::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LinkConfig_DatabaseModule::LinkConfig_DatabaseModule()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbconfig.LinkConfig.DatabaseModule)
}
LinkConfig_DatabaseModule::LinkConfig_DatabaseModule(const LinkConfig_DatabaseModule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pbconfig.LinkConfig.DatabaseModule)
}

void LinkConfig_DatabaseModule::SharedCtor() {
}

LinkConfig_DatabaseModule::~LinkConfig_DatabaseModule() {
  // @@protoc_insertion_point(destructor:pbconfig.LinkConfig.DatabaseModule)
  SharedDtor();
}

void LinkConfig_DatabaseModule::SharedDtor() {
}

void LinkConfig_DatabaseModule::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LinkConfig_DatabaseModule& LinkConfig_DatabaseModule::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LinkConfig_DatabaseModule_link_2econf_2eproto.base);
  return *internal_default_instance();
}


void LinkConfig_DatabaseModule::Clear() {
// @@protoc_insertion_point(message_clear_start:pbconfig.LinkConfig.DatabaseModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LinkConfig_DatabaseModule::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LinkConfig_DatabaseModule*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LinkConfig_DatabaseModule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbconfig.LinkConfig.DatabaseModule)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pbconfig.LinkConfig.DatabaseModule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbconfig.LinkConfig.DatabaseModule)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LinkConfig_DatabaseModule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbconfig.LinkConfig.DatabaseModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pbconfig.LinkConfig.DatabaseModule)
}

::google::protobuf::uint8* LinkConfig_DatabaseModule::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbconfig.LinkConfig.DatabaseModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbconfig.LinkConfig.DatabaseModule)
  return target;
}

size_t LinkConfig_DatabaseModule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbconfig.LinkConfig.DatabaseModule)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LinkConfig_DatabaseModule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbconfig.LinkConfig.DatabaseModule)
  GOOGLE_DCHECK_NE(&from, this);
  const LinkConfig_DatabaseModule* source =
      ::google::protobuf::DynamicCastToGenerated<LinkConfig_DatabaseModule>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbconfig.LinkConfig.DatabaseModule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbconfig.LinkConfig.DatabaseModule)
    MergeFrom(*source);
  }
}

void LinkConfig_DatabaseModule::MergeFrom(const LinkConfig_DatabaseModule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbconfig.LinkConfig.DatabaseModule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void LinkConfig_DatabaseModule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbconfig.LinkConfig.DatabaseModule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinkConfig_DatabaseModule::CopyFrom(const LinkConfig_DatabaseModule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbconfig.LinkConfig.DatabaseModule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinkConfig_DatabaseModule::IsInitialized() const {
  return true;
}

void LinkConfig_DatabaseModule::Swap(LinkConfig_DatabaseModule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LinkConfig_DatabaseModule::InternalSwap(LinkConfig_DatabaseModule* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LinkConfig_DatabaseModule::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_link_2econf_2eproto);
  return ::file_level_metadata_link_2econf_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LinkConfig_NetworkModule::InitAsDefaultInstance() {
}
class LinkConfig_NetworkModule::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinkConfig_NetworkModule::kFromCListenAddrFieldNumber;
const int LinkConfig_NetworkModule::kFromCThreadNumFieldNumber;
const int LinkConfig_NetworkModule::kFromCSessionNumFieldNumber;
const int LinkConfig_NetworkModule::kToLsRemoteAddrFieldNumber;
const int LinkConfig_NetworkModule::kToLsThreadNumFieldNumber;
const int LinkConfig_NetworkModule::kToLsSessionNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LinkConfig_NetworkModule::LinkConfig_NetworkModule()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbconfig.LinkConfig.NetworkModule)
}
LinkConfig_NetworkModule::LinkConfig_NetworkModule(const LinkConfig_NetworkModule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_c_listen_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_c_listen_addr().size() > 0) {
    from_c_listen_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_c_listen_addr_);
  }
  to_ls_remote_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to_ls_remote_addr().size() > 0) {
    to_ls_remote_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_ls_remote_addr_);
  }
  ::memcpy(&from_c_thread_num_, &from.from_c_thread_num_,
    static_cast<size_t>(reinterpret_cast<char*>(&to_ls_session_num_) -
    reinterpret_cast<char*>(&from_c_thread_num_)) + sizeof(to_ls_session_num_));
  // @@protoc_insertion_point(copy_constructor:pbconfig.LinkConfig.NetworkModule)
}

void LinkConfig_NetworkModule::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LinkConfig_NetworkModule_link_2econf_2eproto.base);
  from_c_listen_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_ls_remote_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&from_c_thread_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&to_ls_session_num_) -
      reinterpret_cast<char*>(&from_c_thread_num_)) + sizeof(to_ls_session_num_));
}

LinkConfig_NetworkModule::~LinkConfig_NetworkModule() {
  // @@protoc_insertion_point(destructor:pbconfig.LinkConfig.NetworkModule)
  SharedDtor();
}

void LinkConfig_NetworkModule::SharedDtor() {
  from_c_listen_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_ls_remote_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LinkConfig_NetworkModule::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LinkConfig_NetworkModule& LinkConfig_NetworkModule::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LinkConfig_NetworkModule_link_2econf_2eproto.base);
  return *internal_default_instance();
}


void LinkConfig_NetworkModule::Clear() {
// @@protoc_insertion_point(message_clear_start:pbconfig.LinkConfig.NetworkModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  from_c_listen_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_ls_remote_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&from_c_thread_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&to_ls_session_num_) -
      reinterpret_cast<char*>(&from_c_thread_num_)) + sizeof(to_ls_session_num_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LinkConfig_NetworkModule::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LinkConfig_NetworkModule*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string from_c_listen_addr = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pbconfig.LinkConfig.NetworkModule.from_c_listen_addr");
        object = msg->mutable_from_c_listen_addr();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // uint32 from_c_thread_num = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_from_c_thread_num(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 from_c_session_num = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_from_c_session_num(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string to_ls_remote_addr = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pbconfig.LinkConfig.NetworkModule.to_ls_remote_addr");
        object = msg->mutable_to_ls_remote_addr();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // uint32 to_ls_thread_num = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_to_ls_thread_num(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 to_ls_session_num = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_to_ls_session_num(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LinkConfig_NetworkModule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbconfig.LinkConfig.NetworkModule)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string from_c_listen_addr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_c_listen_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_c_listen_addr().data(), static_cast<int>(this->from_c_listen_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pbconfig.LinkConfig.NetworkModule.from_c_listen_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 from_c_thread_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &from_c_thread_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 from_c_session_num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &from_c_session_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string to_ls_remote_addr = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to_ls_remote_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to_ls_remote_addr().data(), static_cast<int>(this->to_ls_remote_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pbconfig.LinkConfig.NetworkModule.to_ls_remote_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 to_ls_thread_num = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &to_ls_thread_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 to_ls_session_num = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &to_ls_session_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbconfig.LinkConfig.NetworkModule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbconfig.LinkConfig.NetworkModule)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LinkConfig_NetworkModule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbconfig.LinkConfig.NetworkModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_c_listen_addr = 1;
  if (this->from_c_listen_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_c_listen_addr().data(), static_cast<int>(this->from_c_listen_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pbconfig.LinkConfig.NetworkModule.from_c_listen_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from_c_listen_addr(), output);
  }

  // uint32 from_c_thread_num = 2;
  if (this->from_c_thread_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->from_c_thread_num(), output);
  }

  // uint32 from_c_session_num = 3;
  if (this->from_c_session_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->from_c_session_num(), output);
  }

  // string to_ls_remote_addr = 4;
  if (this->to_ls_remote_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_ls_remote_addr().data(), static_cast<int>(this->to_ls_remote_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pbconfig.LinkConfig.NetworkModule.to_ls_remote_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->to_ls_remote_addr(), output);
  }

  // uint32 to_ls_thread_num = 5;
  if (this->to_ls_thread_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->to_ls_thread_num(), output);
  }

  // uint32 to_ls_session_num = 6;
  if (this->to_ls_session_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->to_ls_session_num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pbconfig.LinkConfig.NetworkModule)
}

::google::protobuf::uint8* LinkConfig_NetworkModule::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbconfig.LinkConfig.NetworkModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_c_listen_addr = 1;
  if (this->from_c_listen_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_c_listen_addr().data(), static_cast<int>(this->from_c_listen_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pbconfig.LinkConfig.NetworkModule.from_c_listen_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from_c_listen_addr(), target);
  }

  // uint32 from_c_thread_num = 2;
  if (this->from_c_thread_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->from_c_thread_num(), target);
  }

  // uint32 from_c_session_num = 3;
  if (this->from_c_session_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->from_c_session_num(), target);
  }

  // string to_ls_remote_addr = 4;
  if (this->to_ls_remote_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_ls_remote_addr().data(), static_cast<int>(this->to_ls_remote_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pbconfig.LinkConfig.NetworkModule.to_ls_remote_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->to_ls_remote_addr(), target);
  }

  // uint32 to_ls_thread_num = 5;
  if (this->to_ls_thread_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->to_ls_thread_num(), target);
  }

  // uint32 to_ls_session_num = 6;
  if (this->to_ls_session_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->to_ls_session_num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbconfig.LinkConfig.NetworkModule)
  return target;
}

size_t LinkConfig_NetworkModule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbconfig.LinkConfig.NetworkModule)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string from_c_listen_addr = 1;
  if (this->from_c_listen_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_c_listen_addr());
  }

  // string to_ls_remote_addr = 4;
  if (this->to_ls_remote_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_ls_remote_addr());
  }

  // uint32 from_c_thread_num = 2;
  if (this->from_c_thread_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->from_c_thread_num());
  }

  // uint32 from_c_session_num = 3;
  if (this->from_c_session_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->from_c_session_num());
  }

  // uint32 to_ls_thread_num = 5;
  if (this->to_ls_thread_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->to_ls_thread_num());
  }

  // uint32 to_ls_session_num = 6;
  if (this->to_ls_session_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->to_ls_session_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LinkConfig_NetworkModule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbconfig.LinkConfig.NetworkModule)
  GOOGLE_DCHECK_NE(&from, this);
  const LinkConfig_NetworkModule* source =
      ::google::protobuf::DynamicCastToGenerated<LinkConfig_NetworkModule>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbconfig.LinkConfig.NetworkModule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbconfig.LinkConfig.NetworkModule)
    MergeFrom(*source);
  }
}

void LinkConfig_NetworkModule::MergeFrom(const LinkConfig_NetworkModule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbconfig.LinkConfig.NetworkModule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.from_c_listen_addr().size() > 0) {

    from_c_listen_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_c_listen_addr_);
  }
  if (from.to_ls_remote_addr().size() > 0) {

    to_ls_remote_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_ls_remote_addr_);
  }
  if (from.from_c_thread_num() != 0) {
    set_from_c_thread_num(from.from_c_thread_num());
  }
  if (from.from_c_session_num() != 0) {
    set_from_c_session_num(from.from_c_session_num());
  }
  if (from.to_ls_thread_num() != 0) {
    set_to_ls_thread_num(from.to_ls_thread_num());
  }
  if (from.to_ls_session_num() != 0) {
    set_to_ls_session_num(from.to_ls_session_num());
  }
}

void LinkConfig_NetworkModule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbconfig.LinkConfig.NetworkModule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinkConfig_NetworkModule::CopyFrom(const LinkConfig_NetworkModule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbconfig.LinkConfig.NetworkModule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinkConfig_NetworkModule::IsInitialized() const {
  return true;
}

void LinkConfig_NetworkModule::Swap(LinkConfig_NetworkModule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LinkConfig_NetworkModule::InternalSwap(LinkConfig_NetworkModule* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  from_c_listen_addr_.Swap(&other->from_c_listen_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  to_ls_remote_addr_.Swap(&other->to_ls_remote_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(from_c_thread_num_, other->from_c_thread_num_);
  swap(from_c_session_num_, other->from_c_session_num_);
  swap(to_ls_thread_num_, other->to_ls_thread_num_);
  swap(to_ls_session_num_, other->to_ls_session_num_);
}

::google::protobuf::Metadata LinkConfig_NetworkModule::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_link_2econf_2eproto);
  return ::file_level_metadata_link_2econf_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LinkConfig::InitAsDefaultInstance() {
  ::pbconfig::_LinkConfig_default_instance_._instance.get_mutable()->logicmodule_ = const_cast< ::pbconfig::LinkConfig_LogicModule*>(
      ::pbconfig::LinkConfig_LogicModule::internal_default_instance());
  ::pbconfig::_LinkConfig_default_instance_._instance.get_mutable()->networkmodule_ = const_cast< ::pbconfig::LinkConfig_NetworkModule*>(
      ::pbconfig::LinkConfig_NetworkModule::internal_default_instance());
}
class LinkConfig::HasBitSetters {
 public:
  static const ::pbconfig::LinkConfig_LogicModule& logicmodule(const LinkConfig* msg);
  static const ::pbconfig::LinkConfig_NetworkModule& networkmodule(const LinkConfig* msg);
};

const ::pbconfig::LinkConfig_LogicModule&
LinkConfig::HasBitSetters::logicmodule(const LinkConfig* msg) {
  return *msg->logicmodule_;
}
const ::pbconfig::LinkConfig_NetworkModule&
LinkConfig::HasBitSetters::networkmodule(const LinkConfig* msg) {
  return *msg->networkmodule_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinkConfig::kLogicModuleFieldNumber;
const int LinkConfig::kNetworkModuleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LinkConfig::LinkConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbconfig.LinkConfig)
}
LinkConfig::LinkConfig(const LinkConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_logicmodule()) {
    logicmodule_ = new ::pbconfig::LinkConfig_LogicModule(*from.logicmodule_);
  } else {
    logicmodule_ = nullptr;
  }
  if (from.has_networkmodule()) {
    networkmodule_ = new ::pbconfig::LinkConfig_NetworkModule(*from.networkmodule_);
  } else {
    networkmodule_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:pbconfig.LinkConfig)
}

void LinkConfig::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LinkConfig_link_2econf_2eproto.base);
  ::memset(&logicmodule_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&networkmodule_) -
      reinterpret_cast<char*>(&logicmodule_)) + sizeof(networkmodule_));
}

LinkConfig::~LinkConfig() {
  // @@protoc_insertion_point(destructor:pbconfig.LinkConfig)
  SharedDtor();
}

void LinkConfig::SharedDtor() {
  if (this != internal_default_instance()) delete logicmodule_;
  if (this != internal_default_instance()) delete networkmodule_;
}

void LinkConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LinkConfig& LinkConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LinkConfig_link_2econf_2eproto.base);
  return *internal_default_instance();
}


void LinkConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:pbconfig.LinkConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && logicmodule_ != nullptr) {
    delete logicmodule_;
  }
  logicmodule_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && networkmodule_ != nullptr) {
    delete networkmodule_;
  }
  networkmodule_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LinkConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LinkConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .pbconfig.LinkConfig.LogicModule logicModule = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::pbconfig::LinkConfig_LogicModule::_InternalParse;
        object = msg->mutable_logicmodule();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .pbconfig.LinkConfig.NetworkModule networkModule = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::pbconfig::LinkConfig_NetworkModule::_InternalParse;
        object = msg->mutable_networkmodule();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LinkConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbconfig.LinkConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .pbconfig.LinkConfig.LogicModule logicModule = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_logicmodule()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pbconfig.LinkConfig.NetworkModule networkModule = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_networkmodule()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbconfig.LinkConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbconfig.LinkConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LinkConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbconfig.LinkConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pbconfig.LinkConfig.LogicModule logicModule = 1;
  if (this->has_logicmodule()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::logicmodule(this), output);
  }

  // .pbconfig.LinkConfig.NetworkModule networkModule = 2;
  if (this->has_networkmodule()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::networkmodule(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pbconfig.LinkConfig)
}

::google::protobuf::uint8* LinkConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbconfig.LinkConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pbconfig.LinkConfig.LogicModule logicModule = 1;
  if (this->has_logicmodule()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::logicmodule(this), target);
  }

  // .pbconfig.LinkConfig.NetworkModule networkModule = 2;
  if (this->has_networkmodule()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::networkmodule(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbconfig.LinkConfig)
  return target;
}

size_t LinkConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbconfig.LinkConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pbconfig.LinkConfig.LogicModule logicModule = 1;
  if (this->has_logicmodule()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *logicmodule_);
  }

  // .pbconfig.LinkConfig.NetworkModule networkModule = 2;
  if (this->has_networkmodule()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *networkmodule_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LinkConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbconfig.LinkConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const LinkConfig* source =
      ::google::protobuf::DynamicCastToGenerated<LinkConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbconfig.LinkConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbconfig.LinkConfig)
    MergeFrom(*source);
  }
}

void LinkConfig::MergeFrom(const LinkConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbconfig.LinkConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_logicmodule()) {
    mutable_logicmodule()->::pbconfig::LinkConfig_LogicModule::MergeFrom(from.logicmodule());
  }
  if (from.has_networkmodule()) {
    mutable_networkmodule()->::pbconfig::LinkConfig_NetworkModule::MergeFrom(from.networkmodule());
  }
}

void LinkConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbconfig.LinkConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinkConfig::CopyFrom(const LinkConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbconfig.LinkConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinkConfig::IsInitialized() const {
  return true;
}

void LinkConfig::Swap(LinkConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LinkConfig::InternalSwap(LinkConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(logicmodule_, other->logicmodule_);
  swap(networkmodule_, other->networkmodule_);
}

::google::protobuf::Metadata LinkConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_link_2econf_2eproto);
  return ::file_level_metadata_link_2econf_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pbconfig
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::pbconfig::LinkConfig_ResourceModule* Arena::CreateMaybeMessage< ::pbconfig::LinkConfig_ResourceModule >(Arena* arena) {
  return Arena::CreateInternal< ::pbconfig::LinkConfig_ResourceModule >(arena);
}
template<> PROTOBUF_NOINLINE ::pbconfig::LinkConfig_LogicModule* Arena::CreateMaybeMessage< ::pbconfig::LinkConfig_LogicModule >(Arena* arena) {
  return Arena::CreateInternal< ::pbconfig::LinkConfig_LogicModule >(arena);
}
template<> PROTOBUF_NOINLINE ::pbconfig::LinkConfig_DatabaseModule* Arena::CreateMaybeMessage< ::pbconfig::LinkConfig_DatabaseModule >(Arena* arena) {
  return Arena::CreateInternal< ::pbconfig::LinkConfig_DatabaseModule >(arena);
}
template<> PROTOBUF_NOINLINE ::pbconfig::LinkConfig_NetworkModule* Arena::CreateMaybeMessage< ::pbconfig::LinkConfig_NetworkModule >(Arena* arena) {
  return Arena::CreateInternal< ::pbconfig::LinkConfig_NetworkModule >(arena);
}
template<> PROTOBUF_NOINLINE ::pbconfig::LinkConfig* Arena::CreateMaybeMessage< ::pbconfig::LinkConfig >(Arena* arena) {
  return Arena::CreateInternal< ::pbconfig::LinkConfig >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
