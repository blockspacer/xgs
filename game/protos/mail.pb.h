// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mail.proto

#ifndef PROTOBUF_INCLUDED_mail_2eproto
#define PROTOBUF_INCLUDED_mail_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_mail_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_mail_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[8]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_mail_2eproto();
namespace protos {
class CGMailDel;
class CGMailDelDefaultTypeInternal;
extern CGMailDelDefaultTypeInternal _CGMailDel_default_instance_;
class CGMailList;
class CGMailListDefaultTypeInternal;
extern CGMailListDefaultTypeInternal _CGMailList_default_instance_;
class CGMailModifyFlag;
class CGMailModifyFlagDefaultTypeInternal;
extern CGMailModifyFlagDefaultTypeInternal _CGMailModifyFlag_default_instance_;
class GCMailDel;
class GCMailDelDefaultTypeInternal;
extern GCMailDelDefaultTypeInternal _GCMailDel_default_instance_;
class GCMailList;
class GCMailListDefaultTypeInternal;
extern GCMailListDefaultTypeInternal _GCMailList_default_instance_;
class GCMailModifyFlag;
class GCMailModifyFlagDefaultTypeInternal;
extern GCMailModifyFlagDefaultTypeInternal _GCMailModifyFlag_default_instance_;
class MailAttachment;
class MailAttachmentDefaultTypeInternal;
extern MailAttachmentDefaultTypeInternal _MailAttachment_default_instance_;
class MailData;
class MailDataDefaultTypeInternal;
extern MailDataDefaultTypeInternal _MailData_default_instance_;
}  // namespace protos
namespace google {
namespace protobuf {
template<> ::protos::CGMailDel* Arena::CreateMaybeMessage<::protos::CGMailDel>(Arena*);
template<> ::protos::CGMailList* Arena::CreateMaybeMessage<::protos::CGMailList>(Arena*);
template<> ::protos::CGMailModifyFlag* Arena::CreateMaybeMessage<::protos::CGMailModifyFlag>(Arena*);
template<> ::protos::GCMailDel* Arena::CreateMaybeMessage<::protos::GCMailDel>(Arena*);
template<> ::protos::GCMailList* Arena::CreateMaybeMessage<::protos::GCMailList>(Arena*);
template<> ::protos::GCMailModifyFlag* Arena::CreateMaybeMessage<::protos::GCMailModifyFlag>(Arena*);
template<> ::protos::MailAttachment* Arena::CreateMaybeMessage<::protos::MailAttachment>(Arena*);
template<> ::protos::MailData* Arena::CreateMaybeMessage<::protos::MailData>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace protos {

enum MailAttachment_Type {
  MailAttachment_Type_TYPE_ITEM = 0,
  MailAttachment_Type_TYPE_POWER = 1,
  MailAttachment_Type_MailAttachment_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  MailAttachment_Type_MailAttachment_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool MailAttachment_Type_IsValid(int value);
const MailAttachment_Type MailAttachment_Type_Type_MIN = MailAttachment_Type_TYPE_ITEM;
const MailAttachment_Type MailAttachment_Type_Type_MAX = MailAttachment_Type_TYPE_POWER;
const int MailAttachment_Type_Type_ARRAYSIZE = MailAttachment_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* MailAttachment_Type_descriptor();
inline const ::std::string& MailAttachment_Type_Name(MailAttachment_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    MailAttachment_Type_descriptor(), value);
}
inline bool MailAttachment_Type_Parse(
    const ::std::string& name, MailAttachment_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MailAttachment_Type>(
    MailAttachment_Type_descriptor(), name, value);
}
// ===================================================================

class MailData :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.MailData) */ {
 public:
  MailData();
  virtual ~MailData();

  MailData(const MailData& from);

  inline MailData& operator=(const MailData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MailData(MailData&& from) noexcept
    : MailData() {
    *this = ::std::move(from);
  }

  inline MailData& operator=(MailData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MailData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MailData* internal_default_instance() {
    return reinterpret_cast<const MailData*>(
               &_MailData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(MailData* other);
  friend void swap(MailData& a, MailData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MailData* New() const final {
    return CreateMaybeMessage<MailData>(nullptr);
  }

  MailData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MailData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MailData& from);
  void MergeFrom(const MailData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MailData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protos.MailAttachment attachments = 6;
  int attachments_size() const;
  void clear_attachments();
  static const int kAttachmentsFieldNumber = 6;
  ::protos::MailAttachment* mutable_attachments(int index);
  ::google::protobuf::RepeatedPtrField< ::protos::MailAttachment >*
      mutable_attachments();
  const ::protos::MailAttachment& attachments(int index) const;
  ::protos::MailAttachment* add_attachments();
  const ::google::protobuf::RepeatedPtrField< ::protos::MailAttachment >&
      attachments() const;

  // string oid = 1;
  void clear_oid();
  static const int kOidFieldNumber = 1;
  const ::std::string& oid() const;
  void set_oid(const ::std::string& value);
  #if LANG_CXX11
  void set_oid(::std::string&& value);
  #endif
  void set_oid(const char* value);
  void set_oid(const char* value, size_t size);
  ::std::string* mutable_oid();
  ::std::string* release_oid();
  void set_allocated_oid(::std::string* oid);

  // string title = 2;
  void clear_title();
  static const int kTitleFieldNumber = 2;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // string content = 3;
  void clear_content();
  static const int kContentFieldNumber = 3;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // bool isread = 4;
  void clear_isread();
  static const int kIsreadFieldNumber = 4;
  bool isread() const;
  void set_isread(bool value);

  // bool isfetch = 5;
  void clear_isfetch();
  static const int kIsfetchFieldNumber = 5;
  bool isfetch() const;
  void set_isfetch(bool value);

  // @@protoc_insertion_point(class_scope:protos.MailData)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::protos::MailAttachment > attachments_;
  ::google::protobuf::internal::ArenaStringPtr oid_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  bool isread_;
  bool isfetch_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_mail_2eproto;
};
// -------------------------------------------------------------------

class MailAttachment :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.MailAttachment) */ {
 public:
  MailAttachment();
  virtual ~MailAttachment();

  MailAttachment(const MailAttachment& from);

  inline MailAttachment& operator=(const MailAttachment& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MailAttachment(MailAttachment&& from) noexcept
    : MailAttachment() {
    *this = ::std::move(from);
  }

  inline MailAttachment& operator=(MailAttachment&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MailAttachment& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MailAttachment* internal_default_instance() {
    return reinterpret_cast<const MailAttachment*>(
               &_MailAttachment_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(MailAttachment* other);
  friend void swap(MailAttachment& a, MailAttachment& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MailAttachment* New() const final {
    return CreateMaybeMessage<MailAttachment>(nullptr);
  }

  MailAttachment* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MailAttachment>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MailAttachment& from);
  void MergeFrom(const MailAttachment& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MailAttachment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MailAttachment_Type Type;
  static const Type TYPE_ITEM =
    MailAttachment_Type_TYPE_ITEM;
  static const Type TYPE_POWER =
    MailAttachment_Type_TYPE_POWER;
  static inline bool Type_IsValid(int value) {
    return MailAttachment_Type_IsValid(value);
  }
  static const Type Type_MIN =
    MailAttachment_Type_Type_MIN;
  static const Type Type_MAX =
    MailAttachment_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    MailAttachment_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return MailAttachment_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return MailAttachment_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return MailAttachment_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .protos.MailAttachment.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::protos::MailAttachment_Type type() const;
  void set_type(::protos::MailAttachment_Type value);

  // int32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // int32 num = 3;
  void clear_num();
  static const int kNumFieldNumber = 3;
  ::google::protobuf::int32 num() const;
  void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.MailAttachment)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 num_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_mail_2eproto;
};
// -------------------------------------------------------------------

class CGMailList :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.CGMailList) */ {
 public:
  CGMailList();
  virtual ~CGMailList();

  CGMailList(const CGMailList& from);

  inline CGMailList& operator=(const CGMailList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGMailList(CGMailList&& from) noexcept
    : CGMailList() {
    *this = ::std::move(from);
  }

  inline CGMailList& operator=(CGMailList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CGMailList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGMailList* internal_default_instance() {
    return reinterpret_cast<const CGMailList*>(
               &_CGMailList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CGMailList* other);
  friend void swap(CGMailList& a, CGMailList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGMailList* New() const final {
    return CreateMaybeMessage<CGMailList>(nullptr);
  }

  CGMailList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CGMailList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CGMailList& from);
  void MergeFrom(const CGMailList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGMailList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int64 guid() const;
  void set_guid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:protos.CGMailList)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_mail_2eproto;
};
// -------------------------------------------------------------------

class GCMailList :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.GCMailList) */ {
 public:
  GCMailList();
  virtual ~GCMailList();

  GCMailList(const GCMailList& from);

  inline GCMailList& operator=(const GCMailList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GCMailList(GCMailList&& from) noexcept
    : GCMailList() {
    *this = ::std::move(from);
  }

  inline GCMailList& operator=(GCMailList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GCMailList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GCMailList* internal_default_instance() {
    return reinterpret_cast<const GCMailList*>(
               &_GCMailList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(GCMailList* other);
  friend void swap(GCMailList& a, GCMailList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GCMailList* New() const final {
    return CreateMaybeMessage<GCMailList>(nullptr);
  }

  GCMailList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GCMailList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GCMailList& from);
  void MergeFrom(const GCMailList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GCMailList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protos.MailData mailDatas = 3;
  int maildatas_size() const;
  void clear_maildatas();
  static const int kMailDatasFieldNumber = 3;
  ::protos::MailData* mutable_maildatas(int index);
  ::google::protobuf::RepeatedPtrField< ::protos::MailData >*
      mutable_maildatas();
  const ::protos::MailData& maildatas(int index) const;
  ::protos::MailData* add_maildatas();
  const ::google::protobuf::RepeatedPtrField< ::protos::MailData >&
      maildatas() const;

  // int64 guid = 2;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::int64 guid() const;
  void set_guid(::google::protobuf::int64 value);

  // int32 error = 1;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.GCMailList)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::protos::MailData > maildatas_;
  ::google::protobuf::int64 guid_;
  ::google::protobuf::int32 error_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_mail_2eproto;
};
// -------------------------------------------------------------------

class CGMailDel :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.CGMailDel) */ {
 public:
  CGMailDel();
  virtual ~CGMailDel();

  CGMailDel(const CGMailDel& from);

  inline CGMailDel& operator=(const CGMailDel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGMailDel(CGMailDel&& from) noexcept
    : CGMailDel() {
    *this = ::std::move(from);
  }

  inline CGMailDel& operator=(CGMailDel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CGMailDel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGMailDel* internal_default_instance() {
    return reinterpret_cast<const CGMailDel*>(
               &_CGMailDel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(CGMailDel* other);
  friend void swap(CGMailDel& a, CGMailDel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGMailDel* New() const final {
    return CreateMaybeMessage<CGMailDel>(nullptr);
  }

  CGMailDel* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CGMailDel>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CGMailDel& from);
  void MergeFrom(const CGMailDel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGMailDel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string oid = 2;
  void clear_oid();
  static const int kOidFieldNumber = 2;
  const ::std::string& oid() const;
  void set_oid(const ::std::string& value);
  #if LANG_CXX11
  void set_oid(::std::string&& value);
  #endif
  void set_oid(const char* value);
  void set_oid(const char* value, size_t size);
  ::std::string* mutable_oid();
  ::std::string* release_oid();
  void set_allocated_oid(::std::string* oid);

  // int64 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int64 guid() const;
  void set_guid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:protos.CGMailDel)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr oid_;
  ::google::protobuf::int64 guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_mail_2eproto;
};
// -------------------------------------------------------------------

class GCMailDel :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.GCMailDel) */ {
 public:
  GCMailDel();
  virtual ~GCMailDel();

  GCMailDel(const GCMailDel& from);

  inline GCMailDel& operator=(const GCMailDel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GCMailDel(GCMailDel&& from) noexcept
    : GCMailDel() {
    *this = ::std::move(from);
  }

  inline GCMailDel& operator=(GCMailDel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GCMailDel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GCMailDel* internal_default_instance() {
    return reinterpret_cast<const GCMailDel*>(
               &_GCMailDel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(GCMailDel* other);
  friend void swap(GCMailDel& a, GCMailDel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GCMailDel* New() const final {
    return CreateMaybeMessage<GCMailDel>(nullptr);
  }

  GCMailDel* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GCMailDel>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GCMailDel& from);
  void MergeFrom(const GCMailDel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GCMailDel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string oid = 3;
  void clear_oid();
  static const int kOidFieldNumber = 3;
  const ::std::string& oid() const;
  void set_oid(const ::std::string& value);
  #if LANG_CXX11
  void set_oid(::std::string&& value);
  #endif
  void set_oid(const char* value);
  void set_oid(const char* value, size_t size);
  ::std::string* mutable_oid();
  ::std::string* release_oid();
  void set_allocated_oid(::std::string* oid);

  // int64 guid = 2;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::int64 guid() const;
  void set_guid(::google::protobuf::int64 value);

  // int32 error = 1;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.GCMailDel)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr oid_;
  ::google::protobuf::int64 guid_;
  ::google::protobuf::int32 error_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_mail_2eproto;
};
// -------------------------------------------------------------------

class CGMailModifyFlag :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.CGMailModifyFlag) */ {
 public:
  CGMailModifyFlag();
  virtual ~CGMailModifyFlag();

  CGMailModifyFlag(const CGMailModifyFlag& from);

  inline CGMailModifyFlag& operator=(const CGMailModifyFlag& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGMailModifyFlag(CGMailModifyFlag&& from) noexcept
    : CGMailModifyFlag() {
    *this = ::std::move(from);
  }

  inline CGMailModifyFlag& operator=(CGMailModifyFlag&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CGMailModifyFlag& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGMailModifyFlag* internal_default_instance() {
    return reinterpret_cast<const CGMailModifyFlag*>(
               &_CGMailModifyFlag_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(CGMailModifyFlag* other);
  friend void swap(CGMailModifyFlag& a, CGMailModifyFlag& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGMailModifyFlag* New() const final {
    return CreateMaybeMessage<CGMailModifyFlag>(nullptr);
  }

  CGMailModifyFlag* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CGMailModifyFlag>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CGMailModifyFlag& from);
  void MergeFrom(const CGMailModifyFlag& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGMailModifyFlag* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string oid = 2;
  void clear_oid();
  static const int kOidFieldNumber = 2;
  const ::std::string& oid() const;
  void set_oid(const ::std::string& value);
  #if LANG_CXX11
  void set_oid(::std::string&& value);
  #endif
  void set_oid(const char* value);
  void set_oid(const char* value, size_t size);
  ::std::string* mutable_oid();
  ::std::string* release_oid();
  void set_allocated_oid(::std::string* oid);

  // int64 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int64 guid() const;
  void set_guid(::google::protobuf::int64 value);

  // bool isread = 3;
  void clear_isread();
  static const int kIsreadFieldNumber = 3;
  bool isread() const;
  void set_isread(bool value);

  // bool isfetch = 4;
  void clear_isfetch();
  static const int kIsfetchFieldNumber = 4;
  bool isfetch() const;
  void set_isfetch(bool value);

  // @@protoc_insertion_point(class_scope:protos.CGMailModifyFlag)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr oid_;
  ::google::protobuf::int64 guid_;
  bool isread_;
  bool isfetch_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_mail_2eproto;
};
// -------------------------------------------------------------------

class GCMailModifyFlag :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.GCMailModifyFlag) */ {
 public:
  GCMailModifyFlag();
  virtual ~GCMailModifyFlag();

  GCMailModifyFlag(const GCMailModifyFlag& from);

  inline GCMailModifyFlag& operator=(const GCMailModifyFlag& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GCMailModifyFlag(GCMailModifyFlag&& from) noexcept
    : GCMailModifyFlag() {
    *this = ::std::move(from);
  }

  inline GCMailModifyFlag& operator=(GCMailModifyFlag&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GCMailModifyFlag& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GCMailModifyFlag* internal_default_instance() {
    return reinterpret_cast<const GCMailModifyFlag*>(
               &_GCMailModifyFlag_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(GCMailModifyFlag* other);
  friend void swap(GCMailModifyFlag& a, GCMailModifyFlag& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GCMailModifyFlag* New() const final {
    return CreateMaybeMessage<GCMailModifyFlag>(nullptr);
  }

  GCMailModifyFlag* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GCMailModifyFlag>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GCMailModifyFlag& from);
  void MergeFrom(const GCMailModifyFlag& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GCMailModifyFlag* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string oid = 3;
  void clear_oid();
  static const int kOidFieldNumber = 3;
  const ::std::string& oid() const;
  void set_oid(const ::std::string& value);
  #if LANG_CXX11
  void set_oid(::std::string&& value);
  #endif
  void set_oid(const char* value);
  void set_oid(const char* value, size_t size);
  ::std::string* mutable_oid();
  ::std::string* release_oid();
  void set_allocated_oid(::std::string* oid);

  // int64 guid = 2;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::int64 guid() const;
  void set_guid(::google::protobuf::int64 value);

  // int32 error = 1;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // bool isread = 4;
  void clear_isread();
  static const int kIsreadFieldNumber = 4;
  bool isread() const;
  void set_isread(bool value);

  // bool isfetch = 5;
  void clear_isfetch();
  static const int kIsfetchFieldNumber = 5;
  bool isfetch() const;
  void set_isfetch(bool value);

  // @@protoc_insertion_point(class_scope:protos.GCMailModifyFlag)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr oid_;
  ::google::protobuf::int64 guid_;
  ::google::protobuf::int32 error_;
  bool isread_;
  bool isfetch_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_mail_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MailData

// string oid = 1;
inline void MailData::clear_oid() {
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MailData::oid() const {
  // @@protoc_insertion_point(field_get:protos.MailData.oid)
  return oid_.GetNoArena();
}
inline void MailData::set_oid(const ::std::string& value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.MailData.oid)
}
#if LANG_CXX11
inline void MailData::set_oid(::std::string&& value) {
  
  oid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.MailData.oid)
}
#endif
inline void MailData::set_oid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.MailData.oid)
}
inline void MailData::set_oid(const char* value, size_t size) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.MailData.oid)
}
inline ::std::string* MailData::mutable_oid() {
  
  // @@protoc_insertion_point(field_mutable:protos.MailData.oid)
  return oid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MailData::release_oid() {
  // @@protoc_insertion_point(field_release:protos.MailData.oid)
  
  return oid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailData::set_allocated_oid(::std::string* oid) {
  if (oid != nullptr) {
    
  } else {
    
  }
  oid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oid);
  // @@protoc_insertion_point(field_set_allocated:protos.MailData.oid)
}

// string title = 2;
inline void MailData::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MailData::title() const {
  // @@protoc_insertion_point(field_get:protos.MailData.title)
  return title_.GetNoArena();
}
inline void MailData::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.MailData.title)
}
#if LANG_CXX11
inline void MailData::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.MailData.title)
}
#endif
inline void MailData::set_title(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.MailData.title)
}
inline void MailData::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.MailData.title)
}
inline ::std::string* MailData::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:protos.MailData.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MailData::release_title() {
  // @@protoc_insertion_point(field_release:protos.MailData.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailData::set_allocated_title(::std::string* title) {
  if (title != nullptr) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:protos.MailData.title)
}

// string content = 3;
inline void MailData::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MailData::content() const {
  // @@protoc_insertion_point(field_get:protos.MailData.content)
  return content_.GetNoArena();
}
inline void MailData::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.MailData.content)
}
#if LANG_CXX11
inline void MailData::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.MailData.content)
}
#endif
inline void MailData::set_content(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.MailData.content)
}
inline void MailData::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.MailData.content)
}
inline ::std::string* MailData::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:protos.MailData.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MailData::release_content() {
  // @@protoc_insertion_point(field_release:protos.MailData.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailData::set_allocated_content(::std::string* content) {
  if (content != nullptr) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:protos.MailData.content)
}

// bool isread = 4;
inline void MailData::clear_isread() {
  isread_ = false;
}
inline bool MailData::isread() const {
  // @@protoc_insertion_point(field_get:protos.MailData.isread)
  return isread_;
}
inline void MailData::set_isread(bool value) {
  
  isread_ = value;
  // @@protoc_insertion_point(field_set:protos.MailData.isread)
}

// bool isfetch = 5;
inline void MailData::clear_isfetch() {
  isfetch_ = false;
}
inline bool MailData::isfetch() const {
  // @@protoc_insertion_point(field_get:protos.MailData.isfetch)
  return isfetch_;
}
inline void MailData::set_isfetch(bool value) {
  
  isfetch_ = value;
  // @@protoc_insertion_point(field_set:protos.MailData.isfetch)
}

// repeated .protos.MailAttachment attachments = 6;
inline int MailData::attachments_size() const {
  return attachments_.size();
}
inline void MailData::clear_attachments() {
  attachments_.Clear();
}
inline ::protos::MailAttachment* MailData::mutable_attachments(int index) {
  // @@protoc_insertion_point(field_mutable:protos.MailData.attachments)
  return attachments_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::protos::MailAttachment >*
MailData::mutable_attachments() {
  // @@protoc_insertion_point(field_mutable_list:protos.MailData.attachments)
  return &attachments_;
}
inline const ::protos::MailAttachment& MailData::attachments(int index) const {
  // @@protoc_insertion_point(field_get:protos.MailData.attachments)
  return attachments_.Get(index);
}
inline ::protos::MailAttachment* MailData::add_attachments() {
  // @@protoc_insertion_point(field_add:protos.MailData.attachments)
  return attachments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::MailAttachment >&
MailData::attachments() const {
  // @@protoc_insertion_point(field_list:protos.MailData.attachments)
  return attachments_;
}

// -------------------------------------------------------------------

// MailAttachment

// .protos.MailAttachment.Type type = 1;
inline void MailAttachment::clear_type() {
  type_ = 0;
}
inline ::protos::MailAttachment_Type MailAttachment::type() const {
  // @@protoc_insertion_point(field_get:protos.MailAttachment.type)
  return static_cast< ::protos::MailAttachment_Type >(type_);
}
inline void MailAttachment::set_type(::protos::MailAttachment_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:protos.MailAttachment.type)
}

// int32 id = 2;
inline void MailAttachment::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 MailAttachment::id() const {
  // @@protoc_insertion_point(field_get:protos.MailAttachment.id)
  return id_;
}
inline void MailAttachment::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:protos.MailAttachment.id)
}

// int32 num = 3;
inline void MailAttachment::clear_num() {
  num_ = 0;
}
inline ::google::protobuf::int32 MailAttachment::num() const {
  // @@protoc_insertion_point(field_get:protos.MailAttachment.num)
  return num_;
}
inline void MailAttachment::set_num(::google::protobuf::int32 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:protos.MailAttachment.num)
}

// -------------------------------------------------------------------

// CGMailList

// int64 guid = 1;
inline void CGMailList::clear_guid() {
  guid_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 CGMailList::guid() const {
  // @@protoc_insertion_point(field_get:protos.CGMailList.guid)
  return guid_;
}
inline void CGMailList::set_guid(::google::protobuf::int64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protos.CGMailList.guid)
}

// -------------------------------------------------------------------

// GCMailList

// int32 error = 1;
inline void GCMailList::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 GCMailList::error() const {
  // @@protoc_insertion_point(field_get:protos.GCMailList.error)
  return error_;
}
inline void GCMailList::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:protos.GCMailList.error)
}

// int64 guid = 2;
inline void GCMailList::clear_guid() {
  guid_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 GCMailList::guid() const {
  // @@protoc_insertion_point(field_get:protos.GCMailList.guid)
  return guid_;
}
inline void GCMailList::set_guid(::google::protobuf::int64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protos.GCMailList.guid)
}

// repeated .protos.MailData mailDatas = 3;
inline int GCMailList::maildatas_size() const {
  return maildatas_.size();
}
inline void GCMailList::clear_maildatas() {
  maildatas_.Clear();
}
inline ::protos::MailData* GCMailList::mutable_maildatas(int index) {
  // @@protoc_insertion_point(field_mutable:protos.GCMailList.mailDatas)
  return maildatas_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::protos::MailData >*
GCMailList::mutable_maildatas() {
  // @@protoc_insertion_point(field_mutable_list:protos.GCMailList.mailDatas)
  return &maildatas_;
}
inline const ::protos::MailData& GCMailList::maildatas(int index) const {
  // @@protoc_insertion_point(field_get:protos.GCMailList.mailDatas)
  return maildatas_.Get(index);
}
inline ::protos::MailData* GCMailList::add_maildatas() {
  // @@protoc_insertion_point(field_add:protos.GCMailList.mailDatas)
  return maildatas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::MailData >&
GCMailList::maildatas() const {
  // @@protoc_insertion_point(field_list:protos.GCMailList.mailDatas)
  return maildatas_;
}

// -------------------------------------------------------------------

// CGMailDel

// int64 guid = 1;
inline void CGMailDel::clear_guid() {
  guid_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 CGMailDel::guid() const {
  // @@protoc_insertion_point(field_get:protos.CGMailDel.guid)
  return guid_;
}
inline void CGMailDel::set_guid(::google::protobuf::int64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protos.CGMailDel.guid)
}

// string oid = 2;
inline void CGMailDel::clear_oid() {
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CGMailDel::oid() const {
  // @@protoc_insertion_point(field_get:protos.CGMailDel.oid)
  return oid_.GetNoArena();
}
inline void CGMailDel::set_oid(const ::std::string& value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.CGMailDel.oid)
}
#if LANG_CXX11
inline void CGMailDel::set_oid(::std::string&& value) {
  
  oid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.CGMailDel.oid)
}
#endif
inline void CGMailDel::set_oid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.CGMailDel.oid)
}
inline void CGMailDel::set_oid(const char* value, size_t size) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.CGMailDel.oid)
}
inline ::std::string* CGMailDel::mutable_oid() {
  
  // @@protoc_insertion_point(field_mutable:protos.CGMailDel.oid)
  return oid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CGMailDel::release_oid() {
  // @@protoc_insertion_point(field_release:protos.CGMailDel.oid)
  
  return oid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CGMailDel::set_allocated_oid(::std::string* oid) {
  if (oid != nullptr) {
    
  } else {
    
  }
  oid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oid);
  // @@protoc_insertion_point(field_set_allocated:protos.CGMailDel.oid)
}

// -------------------------------------------------------------------

// GCMailDel

// int32 error = 1;
inline void GCMailDel::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 GCMailDel::error() const {
  // @@protoc_insertion_point(field_get:protos.GCMailDel.error)
  return error_;
}
inline void GCMailDel::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:protos.GCMailDel.error)
}

// int64 guid = 2;
inline void GCMailDel::clear_guid() {
  guid_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 GCMailDel::guid() const {
  // @@protoc_insertion_point(field_get:protos.GCMailDel.guid)
  return guid_;
}
inline void GCMailDel::set_guid(::google::protobuf::int64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protos.GCMailDel.guid)
}

// string oid = 3;
inline void GCMailDel::clear_oid() {
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GCMailDel::oid() const {
  // @@protoc_insertion_point(field_get:protos.GCMailDel.oid)
  return oid_.GetNoArena();
}
inline void GCMailDel::set_oid(const ::std::string& value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.GCMailDel.oid)
}
#if LANG_CXX11
inline void GCMailDel::set_oid(::std::string&& value) {
  
  oid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.GCMailDel.oid)
}
#endif
inline void GCMailDel::set_oid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.GCMailDel.oid)
}
inline void GCMailDel::set_oid(const char* value, size_t size) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.GCMailDel.oid)
}
inline ::std::string* GCMailDel::mutable_oid() {
  
  // @@protoc_insertion_point(field_mutable:protos.GCMailDel.oid)
  return oid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GCMailDel::release_oid() {
  // @@protoc_insertion_point(field_release:protos.GCMailDel.oid)
  
  return oid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GCMailDel::set_allocated_oid(::std::string* oid) {
  if (oid != nullptr) {
    
  } else {
    
  }
  oid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oid);
  // @@protoc_insertion_point(field_set_allocated:protos.GCMailDel.oid)
}

// -------------------------------------------------------------------

// CGMailModifyFlag

// int64 guid = 1;
inline void CGMailModifyFlag::clear_guid() {
  guid_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 CGMailModifyFlag::guid() const {
  // @@protoc_insertion_point(field_get:protos.CGMailModifyFlag.guid)
  return guid_;
}
inline void CGMailModifyFlag::set_guid(::google::protobuf::int64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protos.CGMailModifyFlag.guid)
}

// string oid = 2;
inline void CGMailModifyFlag::clear_oid() {
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CGMailModifyFlag::oid() const {
  // @@protoc_insertion_point(field_get:protos.CGMailModifyFlag.oid)
  return oid_.GetNoArena();
}
inline void CGMailModifyFlag::set_oid(const ::std::string& value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.CGMailModifyFlag.oid)
}
#if LANG_CXX11
inline void CGMailModifyFlag::set_oid(::std::string&& value) {
  
  oid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.CGMailModifyFlag.oid)
}
#endif
inline void CGMailModifyFlag::set_oid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.CGMailModifyFlag.oid)
}
inline void CGMailModifyFlag::set_oid(const char* value, size_t size) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.CGMailModifyFlag.oid)
}
inline ::std::string* CGMailModifyFlag::mutable_oid() {
  
  // @@protoc_insertion_point(field_mutable:protos.CGMailModifyFlag.oid)
  return oid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CGMailModifyFlag::release_oid() {
  // @@protoc_insertion_point(field_release:protos.CGMailModifyFlag.oid)
  
  return oid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CGMailModifyFlag::set_allocated_oid(::std::string* oid) {
  if (oid != nullptr) {
    
  } else {
    
  }
  oid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oid);
  // @@protoc_insertion_point(field_set_allocated:protos.CGMailModifyFlag.oid)
}

// bool isread = 3;
inline void CGMailModifyFlag::clear_isread() {
  isread_ = false;
}
inline bool CGMailModifyFlag::isread() const {
  // @@protoc_insertion_point(field_get:protos.CGMailModifyFlag.isread)
  return isread_;
}
inline void CGMailModifyFlag::set_isread(bool value) {
  
  isread_ = value;
  // @@protoc_insertion_point(field_set:protos.CGMailModifyFlag.isread)
}

// bool isfetch = 4;
inline void CGMailModifyFlag::clear_isfetch() {
  isfetch_ = false;
}
inline bool CGMailModifyFlag::isfetch() const {
  // @@protoc_insertion_point(field_get:protos.CGMailModifyFlag.isfetch)
  return isfetch_;
}
inline void CGMailModifyFlag::set_isfetch(bool value) {
  
  isfetch_ = value;
  // @@protoc_insertion_point(field_set:protos.CGMailModifyFlag.isfetch)
}

// -------------------------------------------------------------------

// GCMailModifyFlag

// int32 error = 1;
inline void GCMailModifyFlag::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 GCMailModifyFlag::error() const {
  // @@protoc_insertion_point(field_get:protos.GCMailModifyFlag.error)
  return error_;
}
inline void GCMailModifyFlag::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:protos.GCMailModifyFlag.error)
}

// int64 guid = 2;
inline void GCMailModifyFlag::clear_guid() {
  guid_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 GCMailModifyFlag::guid() const {
  // @@protoc_insertion_point(field_get:protos.GCMailModifyFlag.guid)
  return guid_;
}
inline void GCMailModifyFlag::set_guid(::google::protobuf::int64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protos.GCMailModifyFlag.guid)
}

// string oid = 3;
inline void GCMailModifyFlag::clear_oid() {
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GCMailModifyFlag::oid() const {
  // @@protoc_insertion_point(field_get:protos.GCMailModifyFlag.oid)
  return oid_.GetNoArena();
}
inline void GCMailModifyFlag::set_oid(const ::std::string& value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.GCMailModifyFlag.oid)
}
#if LANG_CXX11
inline void GCMailModifyFlag::set_oid(::std::string&& value) {
  
  oid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.GCMailModifyFlag.oid)
}
#endif
inline void GCMailModifyFlag::set_oid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.GCMailModifyFlag.oid)
}
inline void GCMailModifyFlag::set_oid(const char* value, size_t size) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.GCMailModifyFlag.oid)
}
inline ::std::string* GCMailModifyFlag::mutable_oid() {
  
  // @@protoc_insertion_point(field_mutable:protos.GCMailModifyFlag.oid)
  return oid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GCMailModifyFlag::release_oid() {
  // @@protoc_insertion_point(field_release:protos.GCMailModifyFlag.oid)
  
  return oid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GCMailModifyFlag::set_allocated_oid(::std::string* oid) {
  if (oid != nullptr) {
    
  } else {
    
  }
  oid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oid);
  // @@protoc_insertion_point(field_set_allocated:protos.GCMailModifyFlag.oid)
}

// bool isread = 4;
inline void GCMailModifyFlag::clear_isread() {
  isread_ = false;
}
inline bool GCMailModifyFlag::isread() const {
  // @@protoc_insertion_point(field_get:protos.GCMailModifyFlag.isread)
  return isread_;
}
inline void GCMailModifyFlag::set_isread(bool value) {
  
  isread_ = value;
  // @@protoc_insertion_point(field_set:protos.GCMailModifyFlag.isread)
}

// bool isfetch = 5;
inline void GCMailModifyFlag::clear_isfetch() {
  isfetch_ = false;
}
inline bool GCMailModifyFlag::isfetch() const {
  // @@protoc_insertion_point(field_get:protos.GCMailModifyFlag.isfetch)
  return isfetch_;
}
inline void GCMailModifyFlag::set_isfetch(bool value) {
  
  isfetch_ = value;
  // @@protoc_insertion_point(field_set:protos.GCMailModifyFlag.isfetch)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protos

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::protos::MailAttachment_Type> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protos::MailAttachment_Type>() {
  return ::protos::MailAttachment_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_mail_2eproto
