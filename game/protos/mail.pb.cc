// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mail.proto

#include "mail.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_mail_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MailAttachment_mail_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_mail_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MailData_mail_2eproto;
namespace protos {
class MailDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MailData> _instance;
} _MailData_default_instance_;
class MailAttachmentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MailAttachment> _instance;
} _MailAttachment_default_instance_;
class CGMailListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CGMailList> _instance;
} _CGMailList_default_instance_;
class GCMailListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GCMailList> _instance;
} _GCMailList_default_instance_;
class CGMailDelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CGMailDel> _instance;
} _CGMailDel_default_instance_;
class GCMailDelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GCMailDel> _instance;
} _GCMailDel_default_instance_;
class CGMailModifyFlagDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CGMailModifyFlag> _instance;
} _CGMailModifyFlag_default_instance_;
class GCMailModifyFlagDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GCMailModifyFlag> _instance;
} _GCMailModifyFlag_default_instance_;
}  // namespace protos
static void InitDefaultsMailData_mail_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_MailData_default_instance_;
    new (ptr) ::protos::MailData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::MailData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MailData_mail_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMailData_mail_2eproto}, {
      &scc_info_MailAttachment_mail_2eproto.base,}};

static void InitDefaultsMailAttachment_mail_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_MailAttachment_default_instance_;
    new (ptr) ::protos::MailAttachment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::MailAttachment::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MailAttachment_mail_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMailAttachment_mail_2eproto}, {}};

static void InitDefaultsCGMailList_mail_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_CGMailList_default_instance_;
    new (ptr) ::protos::CGMailList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::CGMailList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CGMailList_mail_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCGMailList_mail_2eproto}, {}};

static void InitDefaultsGCMailList_mail_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_GCMailList_default_instance_;
    new (ptr) ::protos::GCMailList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::GCMailList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GCMailList_mail_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGCMailList_mail_2eproto}, {
      &scc_info_MailData_mail_2eproto.base,}};

static void InitDefaultsCGMailDel_mail_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_CGMailDel_default_instance_;
    new (ptr) ::protos::CGMailDel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::CGMailDel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CGMailDel_mail_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCGMailDel_mail_2eproto}, {}};

static void InitDefaultsGCMailDel_mail_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_GCMailDel_default_instance_;
    new (ptr) ::protos::GCMailDel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::GCMailDel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GCMailDel_mail_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGCMailDel_mail_2eproto}, {}};

static void InitDefaultsCGMailModifyFlag_mail_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_CGMailModifyFlag_default_instance_;
    new (ptr) ::protos::CGMailModifyFlag();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::CGMailModifyFlag::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CGMailModifyFlag_mail_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCGMailModifyFlag_mail_2eproto}, {}};

static void InitDefaultsGCMailModifyFlag_mail_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_GCMailModifyFlag_default_instance_;
    new (ptr) ::protos::GCMailModifyFlag();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::GCMailModifyFlag::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GCMailModifyFlag_mail_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGCMailModifyFlag_mail_2eproto}, {}};

void InitDefaults_mail_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_MailData_mail_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MailAttachment_mail_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CGMailList_mail_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GCMailList_mail_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CGMailDel_mail_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GCMailDel_mail_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CGMailModifyFlag_mail_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GCMailModifyFlag_mail_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_mail_2eproto[8];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_mail_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_mail_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_mail_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::MailData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::MailData, oid_),
  PROTOBUF_FIELD_OFFSET(::protos::MailData, title_),
  PROTOBUF_FIELD_OFFSET(::protos::MailData, content_),
  PROTOBUF_FIELD_OFFSET(::protos::MailData, isread_),
  PROTOBUF_FIELD_OFFSET(::protos::MailData, isfetch_),
  PROTOBUF_FIELD_OFFSET(::protos::MailData, attachments_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::MailAttachment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::MailAttachment, type_),
  PROTOBUF_FIELD_OFFSET(::protos::MailAttachment, id_),
  PROTOBUF_FIELD_OFFSET(::protos::MailAttachment, num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::CGMailList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::CGMailList, guid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::GCMailList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::GCMailList, error_),
  PROTOBUF_FIELD_OFFSET(::protos::GCMailList, guid_),
  PROTOBUF_FIELD_OFFSET(::protos::GCMailList, maildatas_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::CGMailDel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::CGMailDel, guid_),
  PROTOBUF_FIELD_OFFSET(::protos::CGMailDel, oid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::GCMailDel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::GCMailDel, error_),
  PROTOBUF_FIELD_OFFSET(::protos::GCMailDel, guid_),
  PROTOBUF_FIELD_OFFSET(::protos::GCMailDel, oid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::CGMailModifyFlag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::CGMailModifyFlag, guid_),
  PROTOBUF_FIELD_OFFSET(::protos::CGMailModifyFlag, oid_),
  PROTOBUF_FIELD_OFFSET(::protos::CGMailModifyFlag, isread_),
  PROTOBUF_FIELD_OFFSET(::protos::CGMailModifyFlag, isfetch_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::GCMailModifyFlag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::GCMailModifyFlag, error_),
  PROTOBUF_FIELD_OFFSET(::protos::GCMailModifyFlag, guid_),
  PROTOBUF_FIELD_OFFSET(::protos::GCMailModifyFlag, oid_),
  PROTOBUF_FIELD_OFFSET(::protos::GCMailModifyFlag, isread_),
  PROTOBUF_FIELD_OFFSET(::protos::GCMailModifyFlag, isfetch_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::protos::MailData)},
  { 11, -1, sizeof(::protos::MailAttachment)},
  { 19, -1, sizeof(::protos::CGMailList)},
  { 25, -1, sizeof(::protos::GCMailList)},
  { 33, -1, sizeof(::protos::CGMailDel)},
  { 40, -1, sizeof(::protos::GCMailDel)},
  { 48, -1, sizeof(::protos::CGMailModifyFlag)},
  { 57, -1, sizeof(::protos::GCMailModifyFlag)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_MailData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_MailAttachment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_CGMailList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_GCMailList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_CGMailDel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_GCMailDel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_CGMailModifyFlag_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_GCMailModifyFlag_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_mail_2eproto = {
  {}, AddDescriptors_mail_2eproto, "mail.proto", schemas,
  file_default_instances, TableStruct_mail_2eproto::offsets,
  file_level_metadata_mail_2eproto, 8, file_level_enum_descriptors_mail_2eproto, file_level_service_descriptors_mail_2eproto,
};

const char descriptor_table_protodef_mail_2eproto[] =
  "\n\nmail.proto\022\006protos\"\205\001\n\010MailData\022\013\n\003oid"
  "\030\001 \001(\t\022\r\n\005title\030\002 \001(\t\022\017\n\007content\030\003 \001(\t\022\016"
  "\n\006isread\030\004 \001(\010\022\017\n\007isfetch\030\005 \001(\010\022+\n\013attac"
  "hments\030\006 \003(\0132\026.protos.MailAttachment\"{\n\016"
  "MailAttachment\022)\n\004type\030\001 \001(\0162\033.protos.Ma"
  "ilAttachment.Type\022\n\n\002id\030\002 \001(\005\022\013\n\003num\030\003 \001"
  "(\005\"%\n\004Type\022\r\n\tTYPE_ITEM\020\000\022\016\n\nTYPE_POWER\020"
  "\001\"\032\n\nCGMailList\022\014\n\004guid\030\001 \001(\003\"N\n\nGCMailL"
  "ist\022\r\n\005error\030\001 \001(\005\022\014\n\004guid\030\002 \001(\003\022#\n\tmail"
  "Datas\030\003 \003(\0132\020.protos.MailData\"&\n\tCGMailD"
  "el\022\014\n\004guid\030\001 \001(\003\022\013\n\003oid\030\002 \001(\t\"5\n\tGCMailD"
  "el\022\r\n\005error\030\001 \001(\005\022\014\n\004guid\030\002 \001(\003\022\013\n\003oid\030\003"
  " \001(\t\"N\n\020CGMailModifyFlag\022\014\n\004guid\030\001 \001(\003\022\013"
  "\n\003oid\030\002 \001(\t\022\016\n\006isread\030\003 \001(\010\022\017\n\007isfetch\030\004"
  " \001(\010\"]\n\020GCMailModifyFlag\022\r\n\005error\030\001 \001(\005\022"
  "\014\n\004guid\030\002 \001(\003\022\013\n\003oid\030\003 \001(\t\022\016\n\006isread\030\004 \001"
  "(\010\022\017\n\007isfetch\030\005 \001(\010b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_mail_2eproto = {
  false, InitDefaults_mail_2eproto, 
  descriptor_table_protodef_mail_2eproto,
  "mail.proto", &assign_descriptors_table_mail_2eproto, 667,
};

void AddDescriptors_mail_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_mail_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_mail_2eproto = []() { AddDescriptors_mail_2eproto(); return true; }();
namespace protos {
const ::google::protobuf::EnumDescriptor* MailAttachment_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_mail_2eproto);
  return file_level_enum_descriptors_mail_2eproto[0];
}
bool MailAttachment_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MailAttachment_Type MailAttachment::TYPE_ITEM;
const MailAttachment_Type MailAttachment::TYPE_POWER;
const MailAttachment_Type MailAttachment::Type_MIN;
const MailAttachment_Type MailAttachment::Type_MAX;
const int MailAttachment::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void MailData::InitAsDefaultInstance() {
}
class MailData::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MailData::kOidFieldNumber;
const int MailData::kTitleFieldNumber;
const int MailData::kContentFieldNumber;
const int MailData::kIsreadFieldNumber;
const int MailData::kIsfetchFieldNumber;
const int MailData::kAttachmentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MailData::MailData()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.MailData)
}
MailData::MailData(const MailData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      attachments_(from.attachments_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.oid().size() > 0) {
    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  ::memcpy(&isread_, &from.isread_,
    static_cast<size_t>(reinterpret_cast<char*>(&isfetch_) -
    reinterpret_cast<char*>(&isread_)) + sizeof(isfetch_));
  // @@protoc_insertion_point(copy_constructor:protos.MailData)
}

void MailData::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MailData_mail_2eproto.base);
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&isread_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isfetch_) -
      reinterpret_cast<char*>(&isread_)) + sizeof(isfetch_));
}

MailData::~MailData() {
  // @@protoc_insertion_point(destructor:protos.MailData)
  SharedDtor();
}

void MailData::SharedDtor() {
  oid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MailData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MailData& MailData::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MailData_mail_2eproto.base);
  return *internal_default_instance();
}


void MailData::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.MailData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attachments_.Clear();
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&isread_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isfetch_) -
      reinterpret_cast<char*>(&isread_)) + sizeof(isfetch_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MailData::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MailData*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string oid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.MailData.oid");
        object = msg->mutable_oid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string title = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.MailData.title");
        object = msg->mutable_title();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string content = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.MailData.content");
        object = msg->mutable_content();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool isread = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_isread(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool isfetch = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_isfetch(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .protos.MailAttachment attachments = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::protos::MailAttachment::_InternalParse;
          object = msg->add_attachments();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 50 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MailData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.MailData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string oid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oid().data(), static_cast<int>(this->oid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.MailData.oid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.MailData.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string content = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.MailData.content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isread = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isread_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isfetch = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isfetch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protos.MailAttachment attachments = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_attachments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.MailData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.MailData)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MailData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.MailData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string oid = 1;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), static_cast<int>(this->oid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.MailData.oid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->oid(), output);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.MailData.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // string content = 3;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.MailData.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->content(), output);
  }

  // bool isread = 4;
  if (this->isread() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->isread(), output);
  }

  // bool isfetch = 5;
  if (this->isfetch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->isfetch(), output);
  }

  // repeated .protos.MailAttachment attachments = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attachments_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->attachments(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.MailData)
}

::google::protobuf::uint8* MailData::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.MailData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string oid = 1;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), static_cast<int>(this->oid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.MailData.oid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->oid(), target);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.MailData.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // string content = 3;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.MailData.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->content(), target);
  }

  // bool isread = 4;
  if (this->isread() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->isread(), target);
  }

  // bool isfetch = 5;
  if (this->isfetch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->isfetch(), target);
  }

  // repeated .protos.MailAttachment attachments = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attachments_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->attachments(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.MailData)
  return target;
}

size_t MailData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.MailData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protos.MailAttachment attachments = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->attachments_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->attachments(static_cast<int>(i)));
    }
  }

  // string oid = 1;
  if (this->oid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oid());
  }

  // string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string content = 3;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  // bool isread = 4;
  if (this->isread() != 0) {
    total_size += 1 + 1;
  }

  // bool isfetch = 5;
  if (this->isfetch() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MailData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.MailData)
  GOOGLE_DCHECK_NE(&from, this);
  const MailData* source =
      ::google::protobuf::DynamicCastToGenerated<MailData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.MailData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.MailData)
    MergeFrom(*source);
  }
}

void MailData::MergeFrom(const MailData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.MailData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attachments_.MergeFrom(from.attachments_);
  if (from.oid().size() > 0) {

    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.isread() != 0) {
    set_isread(from.isread());
  }
  if (from.isfetch() != 0) {
    set_isfetch(from.isfetch());
  }
}

void MailData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.MailData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailData::CopyFrom(const MailData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.MailData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailData::IsInitialized() const {
  return true;
}

void MailData::Swap(MailData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MailData::InternalSwap(MailData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&attachments_)->InternalSwap(CastToBase(&other->attachments_));
  oid_.Swap(&other->oid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  content_.Swap(&other->content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(isread_, other->isread_);
  swap(isfetch_, other->isfetch_);
}

::google::protobuf::Metadata MailData::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_mail_2eproto);
  return ::file_level_metadata_mail_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MailAttachment::InitAsDefaultInstance() {
}
class MailAttachment::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MailAttachment::kTypeFieldNumber;
const int MailAttachment::kIdFieldNumber;
const int MailAttachment::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MailAttachment::MailAttachment()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.MailAttachment)
}
MailAttachment::MailAttachment(const MailAttachment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&type_)) + sizeof(num_));
  // @@protoc_insertion_point(copy_constructor:protos.MailAttachment)
}

void MailAttachment::SharedCtor() {
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&type_)) + sizeof(num_));
}

MailAttachment::~MailAttachment() {
  // @@protoc_insertion_point(destructor:protos.MailAttachment)
  SharedDtor();
}

void MailAttachment::SharedDtor() {
}

void MailAttachment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MailAttachment& MailAttachment::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MailAttachment_mail_2eproto.base);
  return *internal_default_instance();
}


void MailAttachment::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.MailAttachment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&type_)) + sizeof(num_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MailAttachment::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MailAttachment*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .protos.MailAttachment.Type type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_type(static_cast<::protos::MailAttachment_Type>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 num = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_num(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MailAttachment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.MailAttachment)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .protos.MailAttachment.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::protos::MailAttachment_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.MailAttachment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.MailAttachment)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MailAttachment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.MailAttachment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protos.MailAttachment.Type type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // int32 num = 3;
  if (this->num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.MailAttachment)
}

::google::protobuf::uint8* MailAttachment::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.MailAttachment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protos.MailAttachment.Type type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // int32 num = 3;
  if (this->num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.MailAttachment)
  return target;
}

size_t MailAttachment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.MailAttachment)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protos.MailAttachment.Type type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // int32 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 num = 3;
  if (this->num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MailAttachment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.MailAttachment)
  GOOGLE_DCHECK_NE(&from, this);
  const MailAttachment* source =
      ::google::protobuf::DynamicCastToGenerated<MailAttachment>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.MailAttachment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.MailAttachment)
    MergeFrom(*source);
  }
}

void MailAttachment::MergeFrom(const MailAttachment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.MailAttachment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.num() != 0) {
    set_num(from.num());
  }
}

void MailAttachment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.MailAttachment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailAttachment::CopyFrom(const MailAttachment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.MailAttachment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailAttachment::IsInitialized() const {
  return true;
}

void MailAttachment::Swap(MailAttachment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MailAttachment::InternalSwap(MailAttachment* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(type_, other->type_);
  swap(id_, other->id_);
  swap(num_, other->num_);
}

::google::protobuf::Metadata MailAttachment::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_mail_2eproto);
  return ::file_level_metadata_mail_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CGMailList::InitAsDefaultInstance() {
}
class CGMailList::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGMailList::kGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGMailList::CGMailList()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.CGMailList)
}
CGMailList::CGMailList(const CGMailList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guid_ = from.guid_;
  // @@protoc_insertion_point(copy_constructor:protos.CGMailList)
}

void CGMailList::SharedCtor() {
  guid_ = PROTOBUF_LONGLONG(0);
}

CGMailList::~CGMailList() {
  // @@protoc_insertion_point(destructor:protos.CGMailList)
  SharedDtor();
}

void CGMailList::SharedDtor() {
}

void CGMailList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CGMailList& CGMailList::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CGMailList_mail_2eproto.base);
  return *internal_default_instance();
}


void CGMailList::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.CGMailList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guid_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CGMailList::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CGMailList*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 guid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_guid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CGMailList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.CGMailList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.CGMailList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.CGMailList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CGMailList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.CGMailList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.CGMailList)
}

::google::protobuf::uint8* CGMailList::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.CGMailList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.CGMailList)
  return target;
}

size_t CGMailList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.CGMailList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CGMailList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.CGMailList)
  GOOGLE_DCHECK_NE(&from, this);
  const CGMailList* source =
      ::google::protobuf::DynamicCastToGenerated<CGMailList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.CGMailList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.CGMailList)
    MergeFrom(*source);
  }
}

void CGMailList::MergeFrom(const CGMailList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.CGMailList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guid() != 0) {
    set_guid(from.guid());
  }
}

void CGMailList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.CGMailList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGMailList::CopyFrom(const CGMailList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.CGMailList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGMailList::IsInitialized() const {
  return true;
}

void CGMailList::Swap(CGMailList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGMailList::InternalSwap(CGMailList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(guid_, other->guid_);
}

::google::protobuf::Metadata CGMailList::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_mail_2eproto);
  return ::file_level_metadata_mail_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GCMailList::InitAsDefaultInstance() {
}
class GCMailList::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GCMailList::kErrorFieldNumber;
const int GCMailList::kGuidFieldNumber;
const int GCMailList::kMailDatasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GCMailList::GCMailList()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.GCMailList)
}
GCMailList::GCMailList(const GCMailList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      maildatas_(from.maildatas_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&error_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(error_));
  // @@protoc_insertion_point(copy_constructor:protos.GCMailList)
}

void GCMailList::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GCMailList_mail_2eproto.base);
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(error_));
}

GCMailList::~GCMailList() {
  // @@protoc_insertion_point(destructor:protos.GCMailList)
  SharedDtor();
}

void GCMailList::SharedDtor() {
}

void GCMailList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GCMailList& GCMailList::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GCMailList_mail_2eproto.base);
  return *internal_default_instance();
}


void GCMailList::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.GCMailList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  maildatas_.Clear();
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(error_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GCMailList::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GCMailList*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 error = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_error(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 guid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_guid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .protos.MailData mailDatas = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::protos::MailData::_InternalParse;
          object = msg->add_maildatas();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GCMailList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.GCMailList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protos.MailData mailDatas = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_maildatas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.GCMailList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.GCMailList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GCMailList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.GCMailList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // int64 guid = 2;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->guid(), output);
  }

  // repeated .protos.MailData mailDatas = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->maildatas_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->maildatas(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.GCMailList)
}

::google::protobuf::uint8* GCMailList::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.GCMailList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // int64 guid = 2;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->guid(), target);
  }

  // repeated .protos.MailData mailDatas = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->maildatas_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->maildatas(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.GCMailList)
  return target;
}

size_t GCMailList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.GCMailList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protos.MailData mailDatas = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->maildatas_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->maildatas(static_cast<int>(i)));
    }
  }

  // int64 guid = 2;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->guid());
  }

  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GCMailList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.GCMailList)
  GOOGLE_DCHECK_NE(&from, this);
  const GCMailList* source =
      ::google::protobuf::DynamicCastToGenerated<GCMailList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.GCMailList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.GCMailList)
    MergeFrom(*source);
  }
}

void GCMailList::MergeFrom(const GCMailList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.GCMailList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  maildatas_.MergeFrom(from.maildatas_);
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void GCMailList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.GCMailList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GCMailList::CopyFrom(const GCMailList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.GCMailList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GCMailList::IsInitialized() const {
  return true;
}

void GCMailList::Swap(GCMailList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GCMailList::InternalSwap(GCMailList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&maildatas_)->InternalSwap(CastToBase(&other->maildatas_));
  swap(guid_, other->guid_);
  swap(error_, other->error_);
}

::google::protobuf::Metadata GCMailList::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_mail_2eproto);
  return ::file_level_metadata_mail_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CGMailDel::InitAsDefaultInstance() {
}
class CGMailDel::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGMailDel::kGuidFieldNumber;
const int CGMailDel::kOidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGMailDel::CGMailDel()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.CGMailDel)
}
CGMailDel::CGMailDel(const CGMailDel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.oid().size() > 0) {
    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
  guid_ = from.guid_;
  // @@protoc_insertion_point(copy_constructor:protos.CGMailDel)
}

void CGMailDel::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CGMailDel_mail_2eproto.base);
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_ = PROTOBUF_LONGLONG(0);
}

CGMailDel::~CGMailDel() {
  // @@protoc_insertion_point(destructor:protos.CGMailDel)
  SharedDtor();
}

void CGMailDel::SharedDtor() {
  oid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CGMailDel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CGMailDel& CGMailDel::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CGMailDel_mail_2eproto.base);
  return *internal_default_instance();
}


void CGMailDel::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.CGMailDel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CGMailDel::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CGMailDel*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 guid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_guid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string oid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.CGMailDel.oid");
        object = msg->mutable_oid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CGMailDel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.CGMailDel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string oid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oid().data(), static_cast<int>(this->oid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.CGMailDel.oid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.CGMailDel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.CGMailDel)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CGMailDel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.CGMailDel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->guid(), output);
  }

  // string oid = 2;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), static_cast<int>(this->oid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.CGMailDel.oid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->oid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.CGMailDel)
}

::google::protobuf::uint8* CGMailDel::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.CGMailDel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->guid(), target);
  }

  // string oid = 2;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), static_cast<int>(this->oid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.CGMailDel.oid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->oid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.CGMailDel)
  return target;
}

size_t CGMailDel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.CGMailDel)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string oid = 2;
  if (this->oid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oid());
  }

  // int64 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CGMailDel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.CGMailDel)
  GOOGLE_DCHECK_NE(&from, this);
  const CGMailDel* source =
      ::google::protobuf::DynamicCastToGenerated<CGMailDel>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.CGMailDel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.CGMailDel)
    MergeFrom(*source);
  }
}

void CGMailDel::MergeFrom(const CGMailDel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.CGMailDel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.oid().size() > 0) {

    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
}

void CGMailDel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.CGMailDel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGMailDel::CopyFrom(const CGMailDel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.CGMailDel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGMailDel::IsInitialized() const {
  return true;
}

void CGMailDel::Swap(CGMailDel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGMailDel::InternalSwap(CGMailDel* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  oid_.Swap(&other->oid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(guid_, other->guid_);
}

::google::protobuf::Metadata CGMailDel::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_mail_2eproto);
  return ::file_level_metadata_mail_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GCMailDel::InitAsDefaultInstance() {
}
class GCMailDel::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GCMailDel::kErrorFieldNumber;
const int GCMailDel::kGuidFieldNumber;
const int GCMailDel::kOidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GCMailDel::GCMailDel()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.GCMailDel)
}
GCMailDel::GCMailDel(const GCMailDel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.oid().size() > 0) {
    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&error_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(error_));
  // @@protoc_insertion_point(copy_constructor:protos.GCMailDel)
}

void GCMailDel::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GCMailDel_mail_2eproto.base);
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(error_));
}

GCMailDel::~GCMailDel() {
  // @@protoc_insertion_point(destructor:protos.GCMailDel)
  SharedDtor();
}

void GCMailDel::SharedDtor() {
  oid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GCMailDel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GCMailDel& GCMailDel::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GCMailDel_mail_2eproto.base);
  return *internal_default_instance();
}


void GCMailDel::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.GCMailDel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(error_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GCMailDel::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GCMailDel*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 error = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_error(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 guid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_guid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string oid = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.GCMailDel.oid");
        object = msg->mutable_oid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GCMailDel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.GCMailDel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string oid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oid().data(), static_cast<int>(this->oid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.GCMailDel.oid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.GCMailDel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.GCMailDel)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GCMailDel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.GCMailDel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // int64 guid = 2;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->guid(), output);
  }

  // string oid = 3;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), static_cast<int>(this->oid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.GCMailDel.oid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->oid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.GCMailDel)
}

::google::protobuf::uint8* GCMailDel::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.GCMailDel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // int64 guid = 2;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->guid(), target);
  }

  // string oid = 3;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), static_cast<int>(this->oid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.GCMailDel.oid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->oid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.GCMailDel)
  return target;
}

size_t GCMailDel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.GCMailDel)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string oid = 3;
  if (this->oid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oid());
  }

  // int64 guid = 2;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->guid());
  }

  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GCMailDel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.GCMailDel)
  GOOGLE_DCHECK_NE(&from, this);
  const GCMailDel* source =
      ::google::protobuf::DynamicCastToGenerated<GCMailDel>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.GCMailDel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.GCMailDel)
    MergeFrom(*source);
  }
}

void GCMailDel::MergeFrom(const GCMailDel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.GCMailDel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.oid().size() > 0) {

    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void GCMailDel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.GCMailDel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GCMailDel::CopyFrom(const GCMailDel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.GCMailDel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GCMailDel::IsInitialized() const {
  return true;
}

void GCMailDel::Swap(GCMailDel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GCMailDel::InternalSwap(GCMailDel* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  oid_.Swap(&other->oid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(guid_, other->guid_);
  swap(error_, other->error_);
}

::google::protobuf::Metadata GCMailDel::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_mail_2eproto);
  return ::file_level_metadata_mail_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CGMailModifyFlag::InitAsDefaultInstance() {
}
class CGMailModifyFlag::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGMailModifyFlag::kGuidFieldNumber;
const int CGMailModifyFlag::kOidFieldNumber;
const int CGMailModifyFlag::kIsreadFieldNumber;
const int CGMailModifyFlag::kIsfetchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGMailModifyFlag::CGMailModifyFlag()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.CGMailModifyFlag)
}
CGMailModifyFlag::CGMailModifyFlag(const CGMailModifyFlag& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.oid().size() > 0) {
    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&isfetch_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(isfetch_));
  // @@protoc_insertion_point(copy_constructor:protos.CGMailModifyFlag)
}

void CGMailModifyFlag::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CGMailModifyFlag_mail_2eproto.base);
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isfetch_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(isfetch_));
}

CGMailModifyFlag::~CGMailModifyFlag() {
  // @@protoc_insertion_point(destructor:protos.CGMailModifyFlag)
  SharedDtor();
}

void CGMailModifyFlag::SharedDtor() {
  oid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CGMailModifyFlag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CGMailModifyFlag& CGMailModifyFlag::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CGMailModifyFlag_mail_2eproto.base);
  return *internal_default_instance();
}


void CGMailModifyFlag::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.CGMailModifyFlag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isfetch_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(isfetch_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CGMailModifyFlag::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CGMailModifyFlag*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 guid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_guid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string oid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.CGMailModifyFlag.oid");
        object = msg->mutable_oid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool isread = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_isread(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool isfetch = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_isfetch(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CGMailModifyFlag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.CGMailModifyFlag)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string oid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oid().data(), static_cast<int>(this->oid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.CGMailModifyFlag.oid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isread = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isread_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isfetch = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isfetch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.CGMailModifyFlag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.CGMailModifyFlag)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CGMailModifyFlag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.CGMailModifyFlag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->guid(), output);
  }

  // string oid = 2;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), static_cast<int>(this->oid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.CGMailModifyFlag.oid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->oid(), output);
  }

  // bool isread = 3;
  if (this->isread() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->isread(), output);
  }

  // bool isfetch = 4;
  if (this->isfetch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->isfetch(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.CGMailModifyFlag)
}

::google::protobuf::uint8* CGMailModifyFlag::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.CGMailModifyFlag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->guid(), target);
  }

  // string oid = 2;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), static_cast<int>(this->oid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.CGMailModifyFlag.oid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->oid(), target);
  }

  // bool isread = 3;
  if (this->isread() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->isread(), target);
  }

  // bool isfetch = 4;
  if (this->isfetch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->isfetch(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.CGMailModifyFlag)
  return target;
}

size_t CGMailModifyFlag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.CGMailModifyFlag)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string oid = 2;
  if (this->oid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oid());
  }

  // int64 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->guid());
  }

  // bool isread = 3;
  if (this->isread() != 0) {
    total_size += 1 + 1;
  }

  // bool isfetch = 4;
  if (this->isfetch() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CGMailModifyFlag::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.CGMailModifyFlag)
  GOOGLE_DCHECK_NE(&from, this);
  const CGMailModifyFlag* source =
      ::google::protobuf::DynamicCastToGenerated<CGMailModifyFlag>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.CGMailModifyFlag)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.CGMailModifyFlag)
    MergeFrom(*source);
  }
}

void CGMailModifyFlag::MergeFrom(const CGMailModifyFlag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.CGMailModifyFlag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.oid().size() > 0) {

    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.isread() != 0) {
    set_isread(from.isread());
  }
  if (from.isfetch() != 0) {
    set_isfetch(from.isfetch());
  }
}

void CGMailModifyFlag::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.CGMailModifyFlag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGMailModifyFlag::CopyFrom(const CGMailModifyFlag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.CGMailModifyFlag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGMailModifyFlag::IsInitialized() const {
  return true;
}

void CGMailModifyFlag::Swap(CGMailModifyFlag* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGMailModifyFlag::InternalSwap(CGMailModifyFlag* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  oid_.Swap(&other->oid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(guid_, other->guid_);
  swap(isread_, other->isread_);
  swap(isfetch_, other->isfetch_);
}

::google::protobuf::Metadata CGMailModifyFlag::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_mail_2eproto);
  return ::file_level_metadata_mail_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GCMailModifyFlag::InitAsDefaultInstance() {
}
class GCMailModifyFlag::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GCMailModifyFlag::kErrorFieldNumber;
const int GCMailModifyFlag::kGuidFieldNumber;
const int GCMailModifyFlag::kOidFieldNumber;
const int GCMailModifyFlag::kIsreadFieldNumber;
const int GCMailModifyFlag::kIsfetchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GCMailModifyFlag::GCMailModifyFlag()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.GCMailModifyFlag)
}
GCMailModifyFlag::GCMailModifyFlag(const GCMailModifyFlag& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.oid().size() > 0) {
    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&isfetch_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(isfetch_));
  // @@protoc_insertion_point(copy_constructor:protos.GCMailModifyFlag)
}

void GCMailModifyFlag::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GCMailModifyFlag_mail_2eproto.base);
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isfetch_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(isfetch_));
}

GCMailModifyFlag::~GCMailModifyFlag() {
  // @@protoc_insertion_point(destructor:protos.GCMailModifyFlag)
  SharedDtor();
}

void GCMailModifyFlag::SharedDtor() {
  oid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GCMailModifyFlag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GCMailModifyFlag& GCMailModifyFlag::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GCMailModifyFlag_mail_2eproto.base);
  return *internal_default_instance();
}


void GCMailModifyFlag::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.GCMailModifyFlag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isfetch_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(isfetch_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GCMailModifyFlag::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GCMailModifyFlag*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 error = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_error(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 guid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_guid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string oid = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.GCMailModifyFlag.oid");
        object = msg->mutable_oid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool isread = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_isread(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool isfetch = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_isfetch(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GCMailModifyFlag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.GCMailModifyFlag)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string oid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oid().data(), static_cast<int>(this->oid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.GCMailModifyFlag.oid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isread = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isread_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isfetch = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isfetch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.GCMailModifyFlag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.GCMailModifyFlag)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GCMailModifyFlag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.GCMailModifyFlag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // int64 guid = 2;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->guid(), output);
  }

  // string oid = 3;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), static_cast<int>(this->oid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.GCMailModifyFlag.oid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->oid(), output);
  }

  // bool isread = 4;
  if (this->isread() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->isread(), output);
  }

  // bool isfetch = 5;
  if (this->isfetch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->isfetch(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.GCMailModifyFlag)
}

::google::protobuf::uint8* GCMailModifyFlag::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.GCMailModifyFlag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // int64 guid = 2;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->guid(), target);
  }

  // string oid = 3;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), static_cast<int>(this->oid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.GCMailModifyFlag.oid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->oid(), target);
  }

  // bool isread = 4;
  if (this->isread() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->isread(), target);
  }

  // bool isfetch = 5;
  if (this->isfetch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->isfetch(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.GCMailModifyFlag)
  return target;
}

size_t GCMailModifyFlag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.GCMailModifyFlag)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string oid = 3;
  if (this->oid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oid());
  }

  // int64 guid = 2;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->guid());
  }

  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  // bool isread = 4;
  if (this->isread() != 0) {
    total_size += 1 + 1;
  }

  // bool isfetch = 5;
  if (this->isfetch() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GCMailModifyFlag::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.GCMailModifyFlag)
  GOOGLE_DCHECK_NE(&from, this);
  const GCMailModifyFlag* source =
      ::google::protobuf::DynamicCastToGenerated<GCMailModifyFlag>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.GCMailModifyFlag)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.GCMailModifyFlag)
    MergeFrom(*source);
  }
}

void GCMailModifyFlag::MergeFrom(const GCMailModifyFlag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.GCMailModifyFlag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.oid().size() > 0) {

    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
  if (from.isread() != 0) {
    set_isread(from.isread());
  }
  if (from.isfetch() != 0) {
    set_isfetch(from.isfetch());
  }
}

void GCMailModifyFlag::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.GCMailModifyFlag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GCMailModifyFlag::CopyFrom(const GCMailModifyFlag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.GCMailModifyFlag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GCMailModifyFlag::IsInitialized() const {
  return true;
}

void GCMailModifyFlag::Swap(GCMailModifyFlag* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GCMailModifyFlag::InternalSwap(GCMailModifyFlag* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  oid_.Swap(&other->oid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(guid_, other->guid_);
  swap(error_, other->error_);
  swap(isread_, other->isread_);
  swap(isfetch_, other->isfetch_);
}

::google::protobuf::Metadata GCMailModifyFlag::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_mail_2eproto);
  return ::file_level_metadata_mail_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::protos::MailData* Arena::CreateMaybeMessage< ::protos::MailData >(Arena* arena) {
  return Arena::CreateInternal< ::protos::MailData >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::MailAttachment* Arena::CreateMaybeMessage< ::protos::MailAttachment >(Arena* arena) {
  return Arena::CreateInternal< ::protos::MailAttachment >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::CGMailList* Arena::CreateMaybeMessage< ::protos::CGMailList >(Arena* arena) {
  return Arena::CreateInternal< ::protos::CGMailList >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::GCMailList* Arena::CreateMaybeMessage< ::protos::GCMailList >(Arena* arena) {
  return Arena::CreateInternal< ::protos::GCMailList >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::CGMailDel* Arena::CreateMaybeMessage< ::protos::CGMailDel >(Arena* arena) {
  return Arena::CreateInternal< ::protos::CGMailDel >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::GCMailDel* Arena::CreateMaybeMessage< ::protos::GCMailDel >(Arena* arena) {
  return Arena::CreateInternal< ::protos::GCMailDel >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::CGMailModifyFlag* Arena::CreateMaybeMessage< ::protos::CGMailModifyFlag >(Arena* arena) {
  return Arena::CreateInternal< ::protos::CGMailModifyFlag >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::GCMailModifyFlag* Arena::CreateMaybeMessage< ::protos::GCMailModifyFlag >(Arena* arena) {
  return Arena::CreateInternal< ::protos::GCMailModifyFlag >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
