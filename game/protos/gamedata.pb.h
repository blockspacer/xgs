// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gamedata.proto

#ifndef PROTOBUF_INCLUDED_gamedata_2eproto
#define PROTOBUF_INCLUDED_gamedata_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_gamedata_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_gamedata_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_gamedata_2eproto();
namespace protos {
class CGChangeName;
class CGChangeNameDefaultTypeInternal;
extern CGChangeNameDefaultTypeInternal _CGChangeName_default_instance_;
class CGSaveLevelData;
class CGSaveLevelDataDefaultTypeInternal;
extern CGSaveLevelDataDefaultTypeInternal _CGSaveLevelData_default_instance_;
class GCChangeName;
class GCChangeNameDefaultTypeInternal;
extern GCChangeNameDefaultTypeInternal _GCChangeName_default_instance_;
class GCSaveLevelData;
class GCSaveLevelDataDefaultTypeInternal;
extern GCSaveLevelDataDefaultTypeInternal _GCSaveLevelData_default_instance_;
}  // namespace protos
namespace google {
namespace protobuf {
template<> ::protos::CGChangeName* Arena::CreateMaybeMessage<::protos::CGChangeName>(Arena*);
template<> ::protos::CGSaveLevelData* Arena::CreateMaybeMessage<::protos::CGSaveLevelData>(Arena*);
template<> ::protos::GCChangeName* Arena::CreateMaybeMessage<::protos::GCChangeName>(Arena*);
template<> ::protos::GCSaveLevelData* Arena::CreateMaybeMessage<::protos::GCSaveLevelData>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace protos {

// ===================================================================

class CGChangeName :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.CGChangeName) */ {
 public:
  CGChangeName();
  virtual ~CGChangeName();

  CGChangeName(const CGChangeName& from);

  inline CGChangeName& operator=(const CGChangeName& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGChangeName(CGChangeName&& from) noexcept
    : CGChangeName() {
    *this = ::std::move(from);
  }

  inline CGChangeName& operator=(CGChangeName&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CGChangeName& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGChangeName* internal_default_instance() {
    return reinterpret_cast<const CGChangeName*>(
               &_CGChangeName_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CGChangeName* other);
  friend void swap(CGChangeName& a, CGChangeName& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGChangeName* New() const final {
    return CreateMaybeMessage<CGChangeName>(nullptr);
  }

  CGChangeName* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CGChangeName>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CGChangeName& from);
  void MergeFrom(const CGChangeName& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGChangeName* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int64 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int64 guid() const;
  void set_guid(::google::protobuf::int64 value);

  // int32 portraitID = 3;
  void clear_portraitid();
  static const int kPortraitIDFieldNumber = 3;
  ::google::protobuf::int32 portraitid() const;
  void set_portraitid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.CGChangeName)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int64 guid_;
  ::google::protobuf::int32 portraitid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gamedata_2eproto;
};
// -------------------------------------------------------------------

class GCChangeName :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.GCChangeName) */ {
 public:
  GCChangeName();
  virtual ~GCChangeName();

  GCChangeName(const GCChangeName& from);

  inline GCChangeName& operator=(const GCChangeName& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GCChangeName(GCChangeName&& from) noexcept
    : GCChangeName() {
    *this = ::std::move(from);
  }

  inline GCChangeName& operator=(GCChangeName&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GCChangeName& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GCChangeName* internal_default_instance() {
    return reinterpret_cast<const GCChangeName*>(
               &_GCChangeName_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(GCChangeName* other);
  friend void swap(GCChangeName& a, GCChangeName& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GCChangeName* New() const final {
    return CreateMaybeMessage<GCChangeName>(nullptr);
  }

  GCChangeName* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GCChangeName>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GCChangeName& from);
  void MergeFrom(const GCChangeName& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GCChangeName* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int64 guid = 2;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::int64 guid() const;
  void set_guid(::google::protobuf::int64 value);

  // int32 error = 1;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // int32 portraitID = 4;
  void clear_portraitid();
  static const int kPortraitIDFieldNumber = 4;
  ::google::protobuf::int32 portraitid() const;
  void set_portraitid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.GCChangeName)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int64 guid_;
  ::google::protobuf::int32 error_;
  ::google::protobuf::int32 portraitid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gamedata_2eproto;
};
// -------------------------------------------------------------------

class CGSaveLevelData :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.CGSaveLevelData) */ {
 public:
  CGSaveLevelData();
  virtual ~CGSaveLevelData();

  CGSaveLevelData(const CGSaveLevelData& from);

  inline CGSaveLevelData& operator=(const CGSaveLevelData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGSaveLevelData(CGSaveLevelData&& from) noexcept
    : CGSaveLevelData() {
    *this = ::std::move(from);
  }

  inline CGSaveLevelData& operator=(CGSaveLevelData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CGSaveLevelData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGSaveLevelData* internal_default_instance() {
    return reinterpret_cast<const CGSaveLevelData*>(
               &_CGSaveLevelData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CGSaveLevelData* other);
  friend void swap(CGSaveLevelData& a, CGSaveLevelData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGSaveLevelData* New() const final {
    return CreateMaybeMessage<CGSaveLevelData>(nullptr);
  }

  CGSaveLevelData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CGSaveLevelData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CGSaveLevelData& from);
  void MergeFrom(const CGSaveLevelData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGSaveLevelData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string finishedLevels = 3;
  void clear_finishedlevels();
  static const int kFinishedLevelsFieldNumber = 3;
  const ::std::string& finishedlevels() const;
  void set_finishedlevels(const ::std::string& value);
  #if LANG_CXX11
  void set_finishedlevels(::std::string&& value);
  #endif
  void set_finishedlevels(const char* value);
  void set_finishedlevels(const char* value, size_t size);
  ::std::string* mutable_finishedlevels();
  ::std::string* release_finishedlevels();
  void set_allocated_finishedlevels(::std::string* finishedlevels);

  // int64 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int64 guid() const;
  void set_guid(::google::protobuf::int64 value);

  // int32 finishedNum = 2;
  void clear_finishednum();
  static const int kFinishedNumFieldNumber = 2;
  ::google::protobuf::int32 finishednum() const;
  void set_finishednum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.CGSaveLevelData)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr finishedlevels_;
  ::google::protobuf::int64 guid_;
  ::google::protobuf::int32 finishednum_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gamedata_2eproto;
};
// -------------------------------------------------------------------

class GCSaveLevelData :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.GCSaveLevelData) */ {
 public:
  GCSaveLevelData();
  virtual ~GCSaveLevelData();

  GCSaveLevelData(const GCSaveLevelData& from);

  inline GCSaveLevelData& operator=(const GCSaveLevelData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GCSaveLevelData(GCSaveLevelData&& from) noexcept
    : GCSaveLevelData() {
    *this = ::std::move(from);
  }

  inline GCSaveLevelData& operator=(GCSaveLevelData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GCSaveLevelData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GCSaveLevelData* internal_default_instance() {
    return reinterpret_cast<const GCSaveLevelData*>(
               &_GCSaveLevelData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(GCSaveLevelData* other);
  friend void swap(GCSaveLevelData& a, GCSaveLevelData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GCSaveLevelData* New() const final {
    return CreateMaybeMessage<GCSaveLevelData>(nullptr);
  }

  GCSaveLevelData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GCSaveLevelData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GCSaveLevelData& from);
  void MergeFrom(const GCSaveLevelData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GCSaveLevelData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 guid = 2;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::int64 guid() const;
  void set_guid(::google::protobuf::int64 value);

  // int32 error = 1;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.GCSaveLevelData)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 guid_;
  ::google::protobuf::int32 error_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gamedata_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CGChangeName

// int64 guid = 1;
inline void CGChangeName::clear_guid() {
  guid_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 CGChangeName::guid() const {
  // @@protoc_insertion_point(field_get:protos.CGChangeName.guid)
  return guid_;
}
inline void CGChangeName::set_guid(::google::protobuf::int64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protos.CGChangeName.guid)
}

// string name = 2;
inline void CGChangeName::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CGChangeName::name() const {
  // @@protoc_insertion_point(field_get:protos.CGChangeName.name)
  return name_.GetNoArena();
}
inline void CGChangeName::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.CGChangeName.name)
}
#if LANG_CXX11
inline void CGChangeName::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.CGChangeName.name)
}
#endif
inline void CGChangeName::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.CGChangeName.name)
}
inline void CGChangeName::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.CGChangeName.name)
}
inline ::std::string* CGChangeName::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:protos.CGChangeName.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CGChangeName::release_name() {
  // @@protoc_insertion_point(field_release:protos.CGChangeName.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CGChangeName::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:protos.CGChangeName.name)
}

// int32 portraitID = 3;
inline void CGChangeName::clear_portraitid() {
  portraitid_ = 0;
}
inline ::google::protobuf::int32 CGChangeName::portraitid() const {
  // @@protoc_insertion_point(field_get:protos.CGChangeName.portraitID)
  return portraitid_;
}
inline void CGChangeName::set_portraitid(::google::protobuf::int32 value) {
  
  portraitid_ = value;
  // @@protoc_insertion_point(field_set:protos.CGChangeName.portraitID)
}

// -------------------------------------------------------------------

// GCChangeName

// int32 error = 1;
inline void GCChangeName::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 GCChangeName::error() const {
  // @@protoc_insertion_point(field_get:protos.GCChangeName.error)
  return error_;
}
inline void GCChangeName::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:protos.GCChangeName.error)
}

// int64 guid = 2;
inline void GCChangeName::clear_guid() {
  guid_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 GCChangeName::guid() const {
  // @@protoc_insertion_point(field_get:protos.GCChangeName.guid)
  return guid_;
}
inline void GCChangeName::set_guid(::google::protobuf::int64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protos.GCChangeName.guid)
}

// string name = 3;
inline void GCChangeName::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GCChangeName::name() const {
  // @@protoc_insertion_point(field_get:protos.GCChangeName.name)
  return name_.GetNoArena();
}
inline void GCChangeName::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.GCChangeName.name)
}
#if LANG_CXX11
inline void GCChangeName::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.GCChangeName.name)
}
#endif
inline void GCChangeName::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.GCChangeName.name)
}
inline void GCChangeName::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.GCChangeName.name)
}
inline ::std::string* GCChangeName::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:protos.GCChangeName.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GCChangeName::release_name() {
  // @@protoc_insertion_point(field_release:protos.GCChangeName.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GCChangeName::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:protos.GCChangeName.name)
}

// int32 portraitID = 4;
inline void GCChangeName::clear_portraitid() {
  portraitid_ = 0;
}
inline ::google::protobuf::int32 GCChangeName::portraitid() const {
  // @@protoc_insertion_point(field_get:protos.GCChangeName.portraitID)
  return portraitid_;
}
inline void GCChangeName::set_portraitid(::google::protobuf::int32 value) {
  
  portraitid_ = value;
  // @@protoc_insertion_point(field_set:protos.GCChangeName.portraitID)
}

// -------------------------------------------------------------------

// CGSaveLevelData

// int64 guid = 1;
inline void CGSaveLevelData::clear_guid() {
  guid_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 CGSaveLevelData::guid() const {
  // @@protoc_insertion_point(field_get:protos.CGSaveLevelData.guid)
  return guid_;
}
inline void CGSaveLevelData::set_guid(::google::protobuf::int64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protos.CGSaveLevelData.guid)
}

// int32 finishedNum = 2;
inline void CGSaveLevelData::clear_finishednum() {
  finishednum_ = 0;
}
inline ::google::protobuf::int32 CGSaveLevelData::finishednum() const {
  // @@protoc_insertion_point(field_get:protos.CGSaveLevelData.finishedNum)
  return finishednum_;
}
inline void CGSaveLevelData::set_finishednum(::google::protobuf::int32 value) {
  
  finishednum_ = value;
  // @@protoc_insertion_point(field_set:protos.CGSaveLevelData.finishedNum)
}

// string finishedLevels = 3;
inline void CGSaveLevelData::clear_finishedlevels() {
  finishedlevels_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CGSaveLevelData::finishedlevels() const {
  // @@protoc_insertion_point(field_get:protos.CGSaveLevelData.finishedLevels)
  return finishedlevels_.GetNoArena();
}
inline void CGSaveLevelData::set_finishedlevels(const ::std::string& value) {
  
  finishedlevels_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.CGSaveLevelData.finishedLevels)
}
#if LANG_CXX11
inline void CGSaveLevelData::set_finishedlevels(::std::string&& value) {
  
  finishedlevels_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.CGSaveLevelData.finishedLevels)
}
#endif
inline void CGSaveLevelData::set_finishedlevels(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  finishedlevels_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.CGSaveLevelData.finishedLevels)
}
inline void CGSaveLevelData::set_finishedlevels(const char* value, size_t size) {
  
  finishedlevels_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.CGSaveLevelData.finishedLevels)
}
inline ::std::string* CGSaveLevelData::mutable_finishedlevels() {
  
  // @@protoc_insertion_point(field_mutable:protos.CGSaveLevelData.finishedLevels)
  return finishedlevels_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CGSaveLevelData::release_finishedlevels() {
  // @@protoc_insertion_point(field_release:protos.CGSaveLevelData.finishedLevels)
  
  return finishedlevels_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CGSaveLevelData::set_allocated_finishedlevels(::std::string* finishedlevels) {
  if (finishedlevels != nullptr) {
    
  } else {
    
  }
  finishedlevels_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), finishedlevels);
  // @@protoc_insertion_point(field_set_allocated:protos.CGSaveLevelData.finishedLevels)
}

// -------------------------------------------------------------------

// GCSaveLevelData

// int32 error = 1;
inline void GCSaveLevelData::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 GCSaveLevelData::error() const {
  // @@protoc_insertion_point(field_get:protos.GCSaveLevelData.error)
  return error_;
}
inline void GCSaveLevelData::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:protos.GCSaveLevelData.error)
}

// int64 guid = 2;
inline void GCSaveLevelData::clear_guid() {
  guid_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 GCSaveLevelData::guid() const {
  // @@protoc_insertion_point(field_get:protos.GCSaveLevelData.guid)
  return guid_;
}
inline void GCSaveLevelData::set_guid(::google::protobuf::int64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protos.GCSaveLevelData.guid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protos

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_gamedata_2eproto
