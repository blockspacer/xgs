// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: world.conf.proto

#ifndef PROTOBUF_INCLUDED_world_2econf_2eproto
#define PROTOBUF_INCLUDED_world_2econf_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_world_2econf_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_world_2econf_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_world_2econf_2eproto();
namespace pbconfig {
class WorldConfig;
class WorldConfigDefaultTypeInternal;
extern WorldConfigDefaultTypeInternal _WorldConfig_default_instance_;
class WorldConfig_DatabaseModule;
class WorldConfig_DatabaseModuleDefaultTypeInternal;
extern WorldConfig_DatabaseModuleDefaultTypeInternal _WorldConfig_DatabaseModule_default_instance_;
class WorldConfig_LogicModule;
class WorldConfig_LogicModuleDefaultTypeInternal;
extern WorldConfig_LogicModuleDefaultTypeInternal _WorldConfig_LogicModule_default_instance_;
class WorldConfig_NetworkModule;
class WorldConfig_NetworkModuleDefaultTypeInternal;
extern WorldConfig_NetworkModuleDefaultTypeInternal _WorldConfig_NetworkModule_default_instance_;
class WorldConfig_ResourceModule;
class WorldConfig_ResourceModuleDefaultTypeInternal;
extern WorldConfig_ResourceModuleDefaultTypeInternal _WorldConfig_ResourceModule_default_instance_;
}  // namespace pbconfig
namespace google {
namespace protobuf {
template<> ::pbconfig::WorldConfig* Arena::CreateMaybeMessage<::pbconfig::WorldConfig>(Arena*);
template<> ::pbconfig::WorldConfig_DatabaseModule* Arena::CreateMaybeMessage<::pbconfig::WorldConfig_DatabaseModule>(Arena*);
template<> ::pbconfig::WorldConfig_LogicModule* Arena::CreateMaybeMessage<::pbconfig::WorldConfig_LogicModule>(Arena*);
template<> ::pbconfig::WorldConfig_NetworkModule* Arena::CreateMaybeMessage<::pbconfig::WorldConfig_NetworkModule>(Arena*);
template<> ::pbconfig::WorldConfig_ResourceModule* Arena::CreateMaybeMessage<::pbconfig::WorldConfig_ResourceModule>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace pbconfig {

// ===================================================================

class WorldConfig_ResourceModule :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbconfig.WorldConfig.ResourceModule) */ {
 public:
  WorldConfig_ResourceModule();
  virtual ~WorldConfig_ResourceModule();

  WorldConfig_ResourceModule(const WorldConfig_ResourceModule& from);

  inline WorldConfig_ResourceModule& operator=(const WorldConfig_ResourceModule& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorldConfig_ResourceModule(WorldConfig_ResourceModule&& from) noexcept
    : WorldConfig_ResourceModule() {
    *this = ::std::move(from);
  }

  inline WorldConfig_ResourceModule& operator=(WorldConfig_ResourceModule&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WorldConfig_ResourceModule& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WorldConfig_ResourceModule* internal_default_instance() {
    return reinterpret_cast<const WorldConfig_ResourceModule*>(
               &_WorldConfig_ResourceModule_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(WorldConfig_ResourceModule* other);
  friend void swap(WorldConfig_ResourceModule& a, WorldConfig_ResourceModule& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorldConfig_ResourceModule* New() const final {
    return CreateMaybeMessage<WorldConfig_ResourceModule>(nullptr);
  }

  WorldConfig_ResourceModule* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WorldConfig_ResourceModule>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WorldConfig_ResourceModule& from);
  void MergeFrom(const WorldConfig_ResourceModule& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WorldConfig_ResourceModule* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pbconfig.WorldConfig.ResourceModule)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_world_2econf_2eproto;
};
// -------------------------------------------------------------------

class WorldConfig_LogicModule :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbconfig.WorldConfig.LogicModule) */ {
 public:
  WorldConfig_LogicModule();
  virtual ~WorldConfig_LogicModule();

  WorldConfig_LogicModule(const WorldConfig_LogicModule& from);

  inline WorldConfig_LogicModule& operator=(const WorldConfig_LogicModule& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorldConfig_LogicModule(WorldConfig_LogicModule&& from) noexcept
    : WorldConfig_LogicModule() {
    *this = ::std::move(from);
  }

  inline WorldConfig_LogicModule& operator=(WorldConfig_LogicModule&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WorldConfig_LogicModule& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WorldConfig_LogicModule* internal_default_instance() {
    return reinterpret_cast<const WorldConfig_LogicModule*>(
               &_WorldConfig_LogicModule_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(WorldConfig_LogicModule* other);
  friend void swap(WorldConfig_LogicModule& a, WorldConfig_LogicModule& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorldConfig_LogicModule* New() const final {
    return CreateMaybeMessage<WorldConfig_LogicModule>(nullptr);
  }

  WorldConfig_LogicModule* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WorldConfig_LogicModule>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WorldConfig_LogicModule& from);
  void MergeFrom(const WorldConfig_LogicModule& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WorldConfig_LogicModule* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 work_thread_num = 1;
  void clear_work_thread_num();
  static const int kWorkThreadNumFieldNumber = 1;
  ::google::protobuf::uint32 work_thread_num() const;
  void set_work_thread_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pbconfig.WorldConfig.LogicModule)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 work_thread_num_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_world_2econf_2eproto;
};
// -------------------------------------------------------------------

class WorldConfig_DatabaseModule :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbconfig.WorldConfig.DatabaseModule) */ {
 public:
  WorldConfig_DatabaseModule();
  virtual ~WorldConfig_DatabaseModule();

  WorldConfig_DatabaseModule(const WorldConfig_DatabaseModule& from);

  inline WorldConfig_DatabaseModule& operator=(const WorldConfig_DatabaseModule& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorldConfig_DatabaseModule(WorldConfig_DatabaseModule&& from) noexcept
    : WorldConfig_DatabaseModule() {
    *this = ::std::move(from);
  }

  inline WorldConfig_DatabaseModule& operator=(WorldConfig_DatabaseModule&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WorldConfig_DatabaseModule& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WorldConfig_DatabaseModule* internal_default_instance() {
    return reinterpret_cast<const WorldConfig_DatabaseModule*>(
               &_WorldConfig_DatabaseModule_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(WorldConfig_DatabaseModule* other);
  friend void swap(WorldConfig_DatabaseModule& a, WorldConfig_DatabaseModule& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorldConfig_DatabaseModule* New() const final {
    return CreateMaybeMessage<WorldConfig_DatabaseModule>(nullptr);
  }

  WorldConfig_DatabaseModule* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WorldConfig_DatabaseModule>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WorldConfig_DatabaseModule& from);
  void MergeFrom(const WorldConfig_DatabaseModule& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WorldConfig_DatabaseModule* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string host = 1;
  void clear_host();
  static const int kHostFieldNumber = 1;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  #if LANG_CXX11
  void set_host(::std::string&& value);
  #endif
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);

  // string username = 2;
  void clear_username();
  static const int kUsernameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // string password = 3;
  void clear_password();
  static const int kPasswordFieldNumber = 3;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // string dbname = 4;
  void clear_dbname();
  static const int kDbnameFieldNumber = 4;
  const ::std::string& dbname() const;
  void set_dbname(const ::std::string& value);
  #if LANG_CXX11
  void set_dbname(::std::string&& value);
  #endif
  void set_dbname(const char* value);
  void set_dbname(const char* value, size_t size);
  ::std::string* mutable_dbname();
  ::std::string* release_dbname();
  void set_allocated_dbname(::std::string* dbname);

  // string redis_host = 5;
  void clear_redis_host();
  static const int kRedisHostFieldNumber = 5;
  const ::std::string& redis_host() const;
  void set_redis_host(const ::std::string& value);
  #if LANG_CXX11
  void set_redis_host(::std::string&& value);
  #endif
  void set_redis_host(const char* value);
  void set_redis_host(const char* value, size_t size);
  ::std::string* mutable_redis_host();
  ::std::string* release_redis_host();
  void set_allocated_redis_host(::std::string* redis_host);

  // string redis_username = 6;
  void clear_redis_username();
  static const int kRedisUsernameFieldNumber = 6;
  const ::std::string& redis_username() const;
  void set_redis_username(const ::std::string& value);
  #if LANG_CXX11
  void set_redis_username(::std::string&& value);
  #endif
  void set_redis_username(const char* value);
  void set_redis_username(const char* value, size_t size);
  ::std::string* mutable_redis_username();
  ::std::string* release_redis_username();
  void set_allocated_redis_username(::std::string* redis_username);

  // string redis_password = 7;
  void clear_redis_password();
  static const int kRedisPasswordFieldNumber = 7;
  const ::std::string& redis_password() const;
  void set_redis_password(const ::std::string& value);
  #if LANG_CXX11
  void set_redis_password(::std::string&& value);
  #endif
  void set_redis_password(const char* value);
  void set_redis_password(const char* value, size_t size);
  ::std::string* mutable_redis_password();
  ::std::string* release_redis_password();
  void set_allocated_redis_password(::std::string* redis_password);

  // string redis_dbname = 8;
  void clear_redis_dbname();
  static const int kRedisDbnameFieldNumber = 8;
  const ::std::string& redis_dbname() const;
  void set_redis_dbname(const ::std::string& value);
  #if LANG_CXX11
  void set_redis_dbname(::std::string&& value);
  #endif
  void set_redis_dbname(const char* value);
  void set_redis_dbname(const char* value, size_t size);
  ::std::string* mutable_redis_dbname();
  ::std::string* release_redis_dbname();
  void set_allocated_redis_dbname(::std::string* redis_dbname);

  // @@protoc_insertion_point(class_scope:pbconfig.WorldConfig.DatabaseModule)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr dbname_;
  ::google::protobuf::internal::ArenaStringPtr redis_host_;
  ::google::protobuf::internal::ArenaStringPtr redis_username_;
  ::google::protobuf::internal::ArenaStringPtr redis_password_;
  ::google::protobuf::internal::ArenaStringPtr redis_dbname_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_world_2econf_2eproto;
};
// -------------------------------------------------------------------

class WorldConfig_NetworkModule :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbconfig.WorldConfig.NetworkModule) */ {
 public:
  WorldConfig_NetworkModule();
  virtual ~WorldConfig_NetworkModule();

  WorldConfig_NetworkModule(const WorldConfig_NetworkModule& from);

  inline WorldConfig_NetworkModule& operator=(const WorldConfig_NetworkModule& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorldConfig_NetworkModule(WorldConfig_NetworkModule&& from) noexcept
    : WorldConfig_NetworkModule() {
    *this = ::std::move(from);
  }

  inline WorldConfig_NetworkModule& operator=(WorldConfig_NetworkModule&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WorldConfig_NetworkModule& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WorldConfig_NetworkModule* internal_default_instance() {
    return reinterpret_cast<const WorldConfig_NetworkModule*>(
               &_WorldConfig_NetworkModule_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(WorldConfig_NetworkModule* other);
  friend void swap(WorldConfig_NetworkModule& a, WorldConfig_NetworkModule& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorldConfig_NetworkModule* New() const final {
    return CreateMaybeMessage<WorldConfig_NetworkModule>(nullptr);
  }

  WorldConfig_NetworkModule* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WorldConfig_NetworkModule>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WorldConfig_NetworkModule& from);
  void MergeFrom(const WorldConfig_NetworkModule& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WorldConfig_NetworkModule* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string from_gws_listen_addr = 1;
  void clear_from_gws_listen_addr();
  static const int kFromGwsListenAddrFieldNumber = 1;
  const ::std::string& from_gws_listen_addr() const;
  void set_from_gws_listen_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_from_gws_listen_addr(::std::string&& value);
  #endif
  void set_from_gws_listen_addr(const char* value);
  void set_from_gws_listen_addr(const char* value, size_t size);
  ::std::string* mutable_from_gws_listen_addr();
  ::std::string* release_from_gws_listen_addr();
  void set_allocated_from_gws_listen_addr(::std::string* from_gws_listen_addr);

  // string from_gs_listen_addr = 4;
  void clear_from_gs_listen_addr();
  static const int kFromGsListenAddrFieldNumber = 4;
  const ::std::string& from_gs_listen_addr() const;
  void set_from_gs_listen_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_from_gs_listen_addr(::std::string&& value);
  #endif
  void set_from_gs_listen_addr(const char* value);
  void set_from_gs_listen_addr(const char* value, size_t size);
  ::std::string* mutable_from_gs_listen_addr();
  ::std::string* release_from_gs_listen_addr();
  void set_allocated_from_gs_listen_addr(::std::string* from_gs_listen_addr);

  // string to_sdk_remote_addr = 7;
  void clear_to_sdk_remote_addr();
  static const int kToSdkRemoteAddrFieldNumber = 7;
  const ::std::string& to_sdk_remote_addr() const;
  void set_to_sdk_remote_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_to_sdk_remote_addr(::std::string&& value);
  #endif
  void set_to_sdk_remote_addr(const char* value);
  void set_to_sdk_remote_addr(const char* value, size_t size);
  ::std::string* mutable_to_sdk_remote_addr();
  ::std::string* release_to_sdk_remote_addr();
  void set_allocated_to_sdk_remote_addr(::std::string* to_sdk_remote_addr);

  // uint32 from_gws_thread_num = 2;
  void clear_from_gws_thread_num();
  static const int kFromGwsThreadNumFieldNumber = 2;
  ::google::protobuf::uint32 from_gws_thread_num() const;
  void set_from_gws_thread_num(::google::protobuf::uint32 value);

  // uint32 from_gws_session_num = 3;
  void clear_from_gws_session_num();
  static const int kFromGwsSessionNumFieldNumber = 3;
  ::google::protobuf::uint32 from_gws_session_num() const;
  void set_from_gws_session_num(::google::protobuf::uint32 value);

  // uint32 from_gs_thread_num = 5;
  void clear_from_gs_thread_num();
  static const int kFromGsThreadNumFieldNumber = 5;
  ::google::protobuf::uint32 from_gs_thread_num() const;
  void set_from_gs_thread_num(::google::protobuf::uint32 value);

  // uint32 from_gs_session_num = 6;
  void clear_from_gs_session_num();
  static const int kFromGsSessionNumFieldNumber = 6;
  ::google::protobuf::uint32 from_gs_session_num() const;
  void set_from_gs_session_num(::google::protobuf::uint32 value);

  // uint32 to_sdk_thread_num = 8;
  void clear_to_sdk_thread_num();
  static const int kToSdkThreadNumFieldNumber = 8;
  ::google::protobuf::uint32 to_sdk_thread_num() const;
  void set_to_sdk_thread_num(::google::protobuf::uint32 value);

  // uint32 to_sdk_session_num = 9;
  void clear_to_sdk_session_num();
  static const int kToSdkSessionNumFieldNumber = 9;
  ::google::protobuf::uint32 to_sdk_session_num() const;
  void set_to_sdk_session_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pbconfig.WorldConfig.NetworkModule)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr from_gws_listen_addr_;
  ::google::protobuf::internal::ArenaStringPtr from_gs_listen_addr_;
  ::google::protobuf::internal::ArenaStringPtr to_sdk_remote_addr_;
  ::google::protobuf::uint32 from_gws_thread_num_;
  ::google::protobuf::uint32 from_gws_session_num_;
  ::google::protobuf::uint32 from_gs_thread_num_;
  ::google::protobuf::uint32 from_gs_session_num_;
  ::google::protobuf::uint32 to_sdk_thread_num_;
  ::google::protobuf::uint32 to_sdk_session_num_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_world_2econf_2eproto;
};
// -------------------------------------------------------------------

class WorldConfig :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbconfig.WorldConfig) */ {
 public:
  WorldConfig();
  virtual ~WorldConfig();

  WorldConfig(const WorldConfig& from);

  inline WorldConfig& operator=(const WorldConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorldConfig(WorldConfig&& from) noexcept
    : WorldConfig() {
    *this = ::std::move(from);
  }

  inline WorldConfig& operator=(WorldConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WorldConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WorldConfig* internal_default_instance() {
    return reinterpret_cast<const WorldConfig*>(
               &_WorldConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(WorldConfig* other);
  friend void swap(WorldConfig& a, WorldConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorldConfig* New() const final {
    return CreateMaybeMessage<WorldConfig>(nullptr);
  }

  WorldConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WorldConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WorldConfig& from);
  void MergeFrom(const WorldConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WorldConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef WorldConfig_ResourceModule ResourceModule;
  typedef WorldConfig_LogicModule LogicModule;
  typedef WorldConfig_DatabaseModule DatabaseModule;
  typedef WorldConfig_NetworkModule NetworkModule;

  // accessors -------------------------------------------------------

  // .pbconfig.WorldConfig.LogicModule logicModule = 1;
  bool has_logicmodule() const;
  void clear_logicmodule();
  static const int kLogicModuleFieldNumber = 1;
  const ::pbconfig::WorldConfig_LogicModule& logicmodule() const;
  ::pbconfig::WorldConfig_LogicModule* release_logicmodule();
  ::pbconfig::WorldConfig_LogicModule* mutable_logicmodule();
  void set_allocated_logicmodule(::pbconfig::WorldConfig_LogicModule* logicmodule);

  // .pbconfig.WorldConfig.DatabaseModule databaseModule = 2;
  bool has_databasemodule() const;
  void clear_databasemodule();
  static const int kDatabaseModuleFieldNumber = 2;
  const ::pbconfig::WorldConfig_DatabaseModule& databasemodule() const;
  ::pbconfig::WorldConfig_DatabaseModule* release_databasemodule();
  ::pbconfig::WorldConfig_DatabaseModule* mutable_databasemodule();
  void set_allocated_databasemodule(::pbconfig::WorldConfig_DatabaseModule* databasemodule);

  // .pbconfig.WorldConfig.NetworkModule networkModule = 3;
  bool has_networkmodule() const;
  void clear_networkmodule();
  static const int kNetworkModuleFieldNumber = 3;
  const ::pbconfig::WorldConfig_NetworkModule& networkmodule() const;
  ::pbconfig::WorldConfig_NetworkModule* release_networkmodule();
  ::pbconfig::WorldConfig_NetworkModule* mutable_networkmodule();
  void set_allocated_networkmodule(::pbconfig::WorldConfig_NetworkModule* networkmodule);

  // @@protoc_insertion_point(class_scope:pbconfig.WorldConfig)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::pbconfig::WorldConfig_LogicModule* logicmodule_;
  ::pbconfig::WorldConfig_DatabaseModule* databasemodule_;
  ::pbconfig::WorldConfig_NetworkModule* networkmodule_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_world_2econf_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// WorldConfig_ResourceModule

// -------------------------------------------------------------------

// WorldConfig_LogicModule

// uint32 work_thread_num = 1;
inline void WorldConfig_LogicModule::clear_work_thread_num() {
  work_thread_num_ = 0u;
}
inline ::google::protobuf::uint32 WorldConfig_LogicModule::work_thread_num() const {
  // @@protoc_insertion_point(field_get:pbconfig.WorldConfig.LogicModule.work_thread_num)
  return work_thread_num_;
}
inline void WorldConfig_LogicModule::set_work_thread_num(::google::protobuf::uint32 value) {
  
  work_thread_num_ = value;
  // @@protoc_insertion_point(field_set:pbconfig.WorldConfig.LogicModule.work_thread_num)
}

// -------------------------------------------------------------------

// WorldConfig_DatabaseModule

// string host = 1;
inline void WorldConfig_DatabaseModule::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WorldConfig_DatabaseModule::host() const {
  // @@protoc_insertion_point(field_get:pbconfig.WorldConfig.DatabaseModule.host)
  return host_.GetNoArena();
}
inline void WorldConfig_DatabaseModule::set_host(const ::std::string& value) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbconfig.WorldConfig.DatabaseModule.host)
}
#if LANG_CXX11
inline void WorldConfig_DatabaseModule::set_host(::std::string&& value) {
  
  host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbconfig.WorldConfig.DatabaseModule.host)
}
#endif
inline void WorldConfig_DatabaseModule::set_host(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbconfig.WorldConfig.DatabaseModule.host)
}
inline void WorldConfig_DatabaseModule::set_host(const char* value, size_t size) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbconfig.WorldConfig.DatabaseModule.host)
}
inline ::std::string* WorldConfig_DatabaseModule::mutable_host() {
  
  // @@protoc_insertion_point(field_mutable:pbconfig.WorldConfig.DatabaseModule.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorldConfig_DatabaseModule::release_host() {
  // @@protoc_insertion_point(field_release:pbconfig.WorldConfig.DatabaseModule.host)
  
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorldConfig_DatabaseModule::set_allocated_host(::std::string* host) {
  if (host != nullptr) {
    
  } else {
    
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:pbconfig.WorldConfig.DatabaseModule.host)
}

// string username = 2;
inline void WorldConfig_DatabaseModule::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WorldConfig_DatabaseModule::username() const {
  // @@protoc_insertion_point(field_get:pbconfig.WorldConfig.DatabaseModule.username)
  return username_.GetNoArena();
}
inline void WorldConfig_DatabaseModule::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbconfig.WorldConfig.DatabaseModule.username)
}
#if LANG_CXX11
inline void WorldConfig_DatabaseModule::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbconfig.WorldConfig.DatabaseModule.username)
}
#endif
inline void WorldConfig_DatabaseModule::set_username(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbconfig.WorldConfig.DatabaseModule.username)
}
inline void WorldConfig_DatabaseModule::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbconfig.WorldConfig.DatabaseModule.username)
}
inline ::std::string* WorldConfig_DatabaseModule::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:pbconfig.WorldConfig.DatabaseModule.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorldConfig_DatabaseModule::release_username() {
  // @@protoc_insertion_point(field_release:pbconfig.WorldConfig.DatabaseModule.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorldConfig_DatabaseModule::set_allocated_username(::std::string* username) {
  if (username != nullptr) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:pbconfig.WorldConfig.DatabaseModule.username)
}

// string password = 3;
inline void WorldConfig_DatabaseModule::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WorldConfig_DatabaseModule::password() const {
  // @@protoc_insertion_point(field_get:pbconfig.WorldConfig.DatabaseModule.password)
  return password_.GetNoArena();
}
inline void WorldConfig_DatabaseModule::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbconfig.WorldConfig.DatabaseModule.password)
}
#if LANG_CXX11
inline void WorldConfig_DatabaseModule::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbconfig.WorldConfig.DatabaseModule.password)
}
#endif
inline void WorldConfig_DatabaseModule::set_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbconfig.WorldConfig.DatabaseModule.password)
}
inline void WorldConfig_DatabaseModule::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbconfig.WorldConfig.DatabaseModule.password)
}
inline ::std::string* WorldConfig_DatabaseModule::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:pbconfig.WorldConfig.DatabaseModule.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorldConfig_DatabaseModule::release_password() {
  // @@protoc_insertion_point(field_release:pbconfig.WorldConfig.DatabaseModule.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorldConfig_DatabaseModule::set_allocated_password(::std::string* password) {
  if (password != nullptr) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:pbconfig.WorldConfig.DatabaseModule.password)
}

// string dbname = 4;
inline void WorldConfig_DatabaseModule::clear_dbname() {
  dbname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WorldConfig_DatabaseModule::dbname() const {
  // @@protoc_insertion_point(field_get:pbconfig.WorldConfig.DatabaseModule.dbname)
  return dbname_.GetNoArena();
}
inline void WorldConfig_DatabaseModule::set_dbname(const ::std::string& value) {
  
  dbname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbconfig.WorldConfig.DatabaseModule.dbname)
}
#if LANG_CXX11
inline void WorldConfig_DatabaseModule::set_dbname(::std::string&& value) {
  
  dbname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbconfig.WorldConfig.DatabaseModule.dbname)
}
#endif
inline void WorldConfig_DatabaseModule::set_dbname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  dbname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbconfig.WorldConfig.DatabaseModule.dbname)
}
inline void WorldConfig_DatabaseModule::set_dbname(const char* value, size_t size) {
  
  dbname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbconfig.WorldConfig.DatabaseModule.dbname)
}
inline ::std::string* WorldConfig_DatabaseModule::mutable_dbname() {
  
  // @@protoc_insertion_point(field_mutable:pbconfig.WorldConfig.DatabaseModule.dbname)
  return dbname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorldConfig_DatabaseModule::release_dbname() {
  // @@protoc_insertion_point(field_release:pbconfig.WorldConfig.DatabaseModule.dbname)
  
  return dbname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorldConfig_DatabaseModule::set_allocated_dbname(::std::string* dbname) {
  if (dbname != nullptr) {
    
  } else {
    
  }
  dbname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dbname);
  // @@protoc_insertion_point(field_set_allocated:pbconfig.WorldConfig.DatabaseModule.dbname)
}

// string redis_host = 5;
inline void WorldConfig_DatabaseModule::clear_redis_host() {
  redis_host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WorldConfig_DatabaseModule::redis_host() const {
  // @@protoc_insertion_point(field_get:pbconfig.WorldConfig.DatabaseModule.redis_host)
  return redis_host_.GetNoArena();
}
inline void WorldConfig_DatabaseModule::set_redis_host(const ::std::string& value) {
  
  redis_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbconfig.WorldConfig.DatabaseModule.redis_host)
}
#if LANG_CXX11
inline void WorldConfig_DatabaseModule::set_redis_host(::std::string&& value) {
  
  redis_host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbconfig.WorldConfig.DatabaseModule.redis_host)
}
#endif
inline void WorldConfig_DatabaseModule::set_redis_host(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  redis_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbconfig.WorldConfig.DatabaseModule.redis_host)
}
inline void WorldConfig_DatabaseModule::set_redis_host(const char* value, size_t size) {
  
  redis_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbconfig.WorldConfig.DatabaseModule.redis_host)
}
inline ::std::string* WorldConfig_DatabaseModule::mutable_redis_host() {
  
  // @@protoc_insertion_point(field_mutable:pbconfig.WorldConfig.DatabaseModule.redis_host)
  return redis_host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorldConfig_DatabaseModule::release_redis_host() {
  // @@protoc_insertion_point(field_release:pbconfig.WorldConfig.DatabaseModule.redis_host)
  
  return redis_host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorldConfig_DatabaseModule::set_allocated_redis_host(::std::string* redis_host) {
  if (redis_host != nullptr) {
    
  } else {
    
  }
  redis_host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), redis_host);
  // @@protoc_insertion_point(field_set_allocated:pbconfig.WorldConfig.DatabaseModule.redis_host)
}

// string redis_username = 6;
inline void WorldConfig_DatabaseModule::clear_redis_username() {
  redis_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WorldConfig_DatabaseModule::redis_username() const {
  // @@protoc_insertion_point(field_get:pbconfig.WorldConfig.DatabaseModule.redis_username)
  return redis_username_.GetNoArena();
}
inline void WorldConfig_DatabaseModule::set_redis_username(const ::std::string& value) {
  
  redis_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbconfig.WorldConfig.DatabaseModule.redis_username)
}
#if LANG_CXX11
inline void WorldConfig_DatabaseModule::set_redis_username(::std::string&& value) {
  
  redis_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbconfig.WorldConfig.DatabaseModule.redis_username)
}
#endif
inline void WorldConfig_DatabaseModule::set_redis_username(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  redis_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbconfig.WorldConfig.DatabaseModule.redis_username)
}
inline void WorldConfig_DatabaseModule::set_redis_username(const char* value, size_t size) {
  
  redis_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbconfig.WorldConfig.DatabaseModule.redis_username)
}
inline ::std::string* WorldConfig_DatabaseModule::mutable_redis_username() {
  
  // @@protoc_insertion_point(field_mutable:pbconfig.WorldConfig.DatabaseModule.redis_username)
  return redis_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorldConfig_DatabaseModule::release_redis_username() {
  // @@protoc_insertion_point(field_release:pbconfig.WorldConfig.DatabaseModule.redis_username)
  
  return redis_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorldConfig_DatabaseModule::set_allocated_redis_username(::std::string* redis_username) {
  if (redis_username != nullptr) {
    
  } else {
    
  }
  redis_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), redis_username);
  // @@protoc_insertion_point(field_set_allocated:pbconfig.WorldConfig.DatabaseModule.redis_username)
}

// string redis_password = 7;
inline void WorldConfig_DatabaseModule::clear_redis_password() {
  redis_password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WorldConfig_DatabaseModule::redis_password() const {
  // @@protoc_insertion_point(field_get:pbconfig.WorldConfig.DatabaseModule.redis_password)
  return redis_password_.GetNoArena();
}
inline void WorldConfig_DatabaseModule::set_redis_password(const ::std::string& value) {
  
  redis_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbconfig.WorldConfig.DatabaseModule.redis_password)
}
#if LANG_CXX11
inline void WorldConfig_DatabaseModule::set_redis_password(::std::string&& value) {
  
  redis_password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbconfig.WorldConfig.DatabaseModule.redis_password)
}
#endif
inline void WorldConfig_DatabaseModule::set_redis_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  redis_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbconfig.WorldConfig.DatabaseModule.redis_password)
}
inline void WorldConfig_DatabaseModule::set_redis_password(const char* value, size_t size) {
  
  redis_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbconfig.WorldConfig.DatabaseModule.redis_password)
}
inline ::std::string* WorldConfig_DatabaseModule::mutable_redis_password() {
  
  // @@protoc_insertion_point(field_mutable:pbconfig.WorldConfig.DatabaseModule.redis_password)
  return redis_password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorldConfig_DatabaseModule::release_redis_password() {
  // @@protoc_insertion_point(field_release:pbconfig.WorldConfig.DatabaseModule.redis_password)
  
  return redis_password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorldConfig_DatabaseModule::set_allocated_redis_password(::std::string* redis_password) {
  if (redis_password != nullptr) {
    
  } else {
    
  }
  redis_password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), redis_password);
  // @@protoc_insertion_point(field_set_allocated:pbconfig.WorldConfig.DatabaseModule.redis_password)
}

// string redis_dbname = 8;
inline void WorldConfig_DatabaseModule::clear_redis_dbname() {
  redis_dbname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WorldConfig_DatabaseModule::redis_dbname() const {
  // @@protoc_insertion_point(field_get:pbconfig.WorldConfig.DatabaseModule.redis_dbname)
  return redis_dbname_.GetNoArena();
}
inline void WorldConfig_DatabaseModule::set_redis_dbname(const ::std::string& value) {
  
  redis_dbname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbconfig.WorldConfig.DatabaseModule.redis_dbname)
}
#if LANG_CXX11
inline void WorldConfig_DatabaseModule::set_redis_dbname(::std::string&& value) {
  
  redis_dbname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbconfig.WorldConfig.DatabaseModule.redis_dbname)
}
#endif
inline void WorldConfig_DatabaseModule::set_redis_dbname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  redis_dbname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbconfig.WorldConfig.DatabaseModule.redis_dbname)
}
inline void WorldConfig_DatabaseModule::set_redis_dbname(const char* value, size_t size) {
  
  redis_dbname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbconfig.WorldConfig.DatabaseModule.redis_dbname)
}
inline ::std::string* WorldConfig_DatabaseModule::mutable_redis_dbname() {
  
  // @@protoc_insertion_point(field_mutable:pbconfig.WorldConfig.DatabaseModule.redis_dbname)
  return redis_dbname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorldConfig_DatabaseModule::release_redis_dbname() {
  // @@protoc_insertion_point(field_release:pbconfig.WorldConfig.DatabaseModule.redis_dbname)
  
  return redis_dbname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorldConfig_DatabaseModule::set_allocated_redis_dbname(::std::string* redis_dbname) {
  if (redis_dbname != nullptr) {
    
  } else {
    
  }
  redis_dbname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), redis_dbname);
  // @@protoc_insertion_point(field_set_allocated:pbconfig.WorldConfig.DatabaseModule.redis_dbname)
}

// -------------------------------------------------------------------

// WorldConfig_NetworkModule

// string from_gws_listen_addr = 1;
inline void WorldConfig_NetworkModule::clear_from_gws_listen_addr() {
  from_gws_listen_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WorldConfig_NetworkModule::from_gws_listen_addr() const {
  // @@protoc_insertion_point(field_get:pbconfig.WorldConfig.NetworkModule.from_gws_listen_addr)
  return from_gws_listen_addr_.GetNoArena();
}
inline void WorldConfig_NetworkModule::set_from_gws_listen_addr(const ::std::string& value) {
  
  from_gws_listen_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbconfig.WorldConfig.NetworkModule.from_gws_listen_addr)
}
#if LANG_CXX11
inline void WorldConfig_NetworkModule::set_from_gws_listen_addr(::std::string&& value) {
  
  from_gws_listen_addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbconfig.WorldConfig.NetworkModule.from_gws_listen_addr)
}
#endif
inline void WorldConfig_NetworkModule::set_from_gws_listen_addr(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  from_gws_listen_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbconfig.WorldConfig.NetworkModule.from_gws_listen_addr)
}
inline void WorldConfig_NetworkModule::set_from_gws_listen_addr(const char* value, size_t size) {
  
  from_gws_listen_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbconfig.WorldConfig.NetworkModule.from_gws_listen_addr)
}
inline ::std::string* WorldConfig_NetworkModule::mutable_from_gws_listen_addr() {
  
  // @@protoc_insertion_point(field_mutable:pbconfig.WorldConfig.NetworkModule.from_gws_listen_addr)
  return from_gws_listen_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorldConfig_NetworkModule::release_from_gws_listen_addr() {
  // @@protoc_insertion_point(field_release:pbconfig.WorldConfig.NetworkModule.from_gws_listen_addr)
  
  return from_gws_listen_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorldConfig_NetworkModule::set_allocated_from_gws_listen_addr(::std::string* from_gws_listen_addr) {
  if (from_gws_listen_addr != nullptr) {
    
  } else {
    
  }
  from_gws_listen_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_gws_listen_addr);
  // @@protoc_insertion_point(field_set_allocated:pbconfig.WorldConfig.NetworkModule.from_gws_listen_addr)
}

// uint32 from_gws_thread_num = 2;
inline void WorldConfig_NetworkModule::clear_from_gws_thread_num() {
  from_gws_thread_num_ = 0u;
}
inline ::google::protobuf::uint32 WorldConfig_NetworkModule::from_gws_thread_num() const {
  // @@protoc_insertion_point(field_get:pbconfig.WorldConfig.NetworkModule.from_gws_thread_num)
  return from_gws_thread_num_;
}
inline void WorldConfig_NetworkModule::set_from_gws_thread_num(::google::protobuf::uint32 value) {
  
  from_gws_thread_num_ = value;
  // @@protoc_insertion_point(field_set:pbconfig.WorldConfig.NetworkModule.from_gws_thread_num)
}

// uint32 from_gws_session_num = 3;
inline void WorldConfig_NetworkModule::clear_from_gws_session_num() {
  from_gws_session_num_ = 0u;
}
inline ::google::protobuf::uint32 WorldConfig_NetworkModule::from_gws_session_num() const {
  // @@protoc_insertion_point(field_get:pbconfig.WorldConfig.NetworkModule.from_gws_session_num)
  return from_gws_session_num_;
}
inline void WorldConfig_NetworkModule::set_from_gws_session_num(::google::protobuf::uint32 value) {
  
  from_gws_session_num_ = value;
  // @@protoc_insertion_point(field_set:pbconfig.WorldConfig.NetworkModule.from_gws_session_num)
}

// string from_gs_listen_addr = 4;
inline void WorldConfig_NetworkModule::clear_from_gs_listen_addr() {
  from_gs_listen_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WorldConfig_NetworkModule::from_gs_listen_addr() const {
  // @@protoc_insertion_point(field_get:pbconfig.WorldConfig.NetworkModule.from_gs_listen_addr)
  return from_gs_listen_addr_.GetNoArena();
}
inline void WorldConfig_NetworkModule::set_from_gs_listen_addr(const ::std::string& value) {
  
  from_gs_listen_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbconfig.WorldConfig.NetworkModule.from_gs_listen_addr)
}
#if LANG_CXX11
inline void WorldConfig_NetworkModule::set_from_gs_listen_addr(::std::string&& value) {
  
  from_gs_listen_addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbconfig.WorldConfig.NetworkModule.from_gs_listen_addr)
}
#endif
inline void WorldConfig_NetworkModule::set_from_gs_listen_addr(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  from_gs_listen_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbconfig.WorldConfig.NetworkModule.from_gs_listen_addr)
}
inline void WorldConfig_NetworkModule::set_from_gs_listen_addr(const char* value, size_t size) {
  
  from_gs_listen_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbconfig.WorldConfig.NetworkModule.from_gs_listen_addr)
}
inline ::std::string* WorldConfig_NetworkModule::mutable_from_gs_listen_addr() {
  
  // @@protoc_insertion_point(field_mutable:pbconfig.WorldConfig.NetworkModule.from_gs_listen_addr)
  return from_gs_listen_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorldConfig_NetworkModule::release_from_gs_listen_addr() {
  // @@protoc_insertion_point(field_release:pbconfig.WorldConfig.NetworkModule.from_gs_listen_addr)
  
  return from_gs_listen_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorldConfig_NetworkModule::set_allocated_from_gs_listen_addr(::std::string* from_gs_listen_addr) {
  if (from_gs_listen_addr != nullptr) {
    
  } else {
    
  }
  from_gs_listen_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_gs_listen_addr);
  // @@protoc_insertion_point(field_set_allocated:pbconfig.WorldConfig.NetworkModule.from_gs_listen_addr)
}

// uint32 from_gs_thread_num = 5;
inline void WorldConfig_NetworkModule::clear_from_gs_thread_num() {
  from_gs_thread_num_ = 0u;
}
inline ::google::protobuf::uint32 WorldConfig_NetworkModule::from_gs_thread_num() const {
  // @@protoc_insertion_point(field_get:pbconfig.WorldConfig.NetworkModule.from_gs_thread_num)
  return from_gs_thread_num_;
}
inline void WorldConfig_NetworkModule::set_from_gs_thread_num(::google::protobuf::uint32 value) {
  
  from_gs_thread_num_ = value;
  // @@protoc_insertion_point(field_set:pbconfig.WorldConfig.NetworkModule.from_gs_thread_num)
}

// uint32 from_gs_session_num = 6;
inline void WorldConfig_NetworkModule::clear_from_gs_session_num() {
  from_gs_session_num_ = 0u;
}
inline ::google::protobuf::uint32 WorldConfig_NetworkModule::from_gs_session_num() const {
  // @@protoc_insertion_point(field_get:pbconfig.WorldConfig.NetworkModule.from_gs_session_num)
  return from_gs_session_num_;
}
inline void WorldConfig_NetworkModule::set_from_gs_session_num(::google::protobuf::uint32 value) {
  
  from_gs_session_num_ = value;
  // @@protoc_insertion_point(field_set:pbconfig.WorldConfig.NetworkModule.from_gs_session_num)
}

// string to_sdk_remote_addr = 7;
inline void WorldConfig_NetworkModule::clear_to_sdk_remote_addr() {
  to_sdk_remote_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WorldConfig_NetworkModule::to_sdk_remote_addr() const {
  // @@protoc_insertion_point(field_get:pbconfig.WorldConfig.NetworkModule.to_sdk_remote_addr)
  return to_sdk_remote_addr_.GetNoArena();
}
inline void WorldConfig_NetworkModule::set_to_sdk_remote_addr(const ::std::string& value) {
  
  to_sdk_remote_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbconfig.WorldConfig.NetworkModule.to_sdk_remote_addr)
}
#if LANG_CXX11
inline void WorldConfig_NetworkModule::set_to_sdk_remote_addr(::std::string&& value) {
  
  to_sdk_remote_addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbconfig.WorldConfig.NetworkModule.to_sdk_remote_addr)
}
#endif
inline void WorldConfig_NetworkModule::set_to_sdk_remote_addr(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  to_sdk_remote_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbconfig.WorldConfig.NetworkModule.to_sdk_remote_addr)
}
inline void WorldConfig_NetworkModule::set_to_sdk_remote_addr(const char* value, size_t size) {
  
  to_sdk_remote_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbconfig.WorldConfig.NetworkModule.to_sdk_remote_addr)
}
inline ::std::string* WorldConfig_NetworkModule::mutable_to_sdk_remote_addr() {
  
  // @@protoc_insertion_point(field_mutable:pbconfig.WorldConfig.NetworkModule.to_sdk_remote_addr)
  return to_sdk_remote_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorldConfig_NetworkModule::release_to_sdk_remote_addr() {
  // @@protoc_insertion_point(field_release:pbconfig.WorldConfig.NetworkModule.to_sdk_remote_addr)
  
  return to_sdk_remote_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorldConfig_NetworkModule::set_allocated_to_sdk_remote_addr(::std::string* to_sdk_remote_addr) {
  if (to_sdk_remote_addr != nullptr) {
    
  } else {
    
  }
  to_sdk_remote_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_sdk_remote_addr);
  // @@protoc_insertion_point(field_set_allocated:pbconfig.WorldConfig.NetworkModule.to_sdk_remote_addr)
}

// uint32 to_sdk_thread_num = 8;
inline void WorldConfig_NetworkModule::clear_to_sdk_thread_num() {
  to_sdk_thread_num_ = 0u;
}
inline ::google::protobuf::uint32 WorldConfig_NetworkModule::to_sdk_thread_num() const {
  // @@protoc_insertion_point(field_get:pbconfig.WorldConfig.NetworkModule.to_sdk_thread_num)
  return to_sdk_thread_num_;
}
inline void WorldConfig_NetworkModule::set_to_sdk_thread_num(::google::protobuf::uint32 value) {
  
  to_sdk_thread_num_ = value;
  // @@protoc_insertion_point(field_set:pbconfig.WorldConfig.NetworkModule.to_sdk_thread_num)
}

// uint32 to_sdk_session_num = 9;
inline void WorldConfig_NetworkModule::clear_to_sdk_session_num() {
  to_sdk_session_num_ = 0u;
}
inline ::google::protobuf::uint32 WorldConfig_NetworkModule::to_sdk_session_num() const {
  // @@protoc_insertion_point(field_get:pbconfig.WorldConfig.NetworkModule.to_sdk_session_num)
  return to_sdk_session_num_;
}
inline void WorldConfig_NetworkModule::set_to_sdk_session_num(::google::protobuf::uint32 value) {
  
  to_sdk_session_num_ = value;
  // @@protoc_insertion_point(field_set:pbconfig.WorldConfig.NetworkModule.to_sdk_session_num)
}

// -------------------------------------------------------------------

// WorldConfig

// .pbconfig.WorldConfig.LogicModule logicModule = 1;
inline bool WorldConfig::has_logicmodule() const {
  return this != internal_default_instance() && logicmodule_ != nullptr;
}
inline void WorldConfig::clear_logicmodule() {
  if (GetArenaNoVirtual() == nullptr && logicmodule_ != nullptr) {
    delete logicmodule_;
  }
  logicmodule_ = nullptr;
}
inline const ::pbconfig::WorldConfig_LogicModule& WorldConfig::logicmodule() const {
  const ::pbconfig::WorldConfig_LogicModule* p = logicmodule_;
  // @@protoc_insertion_point(field_get:pbconfig.WorldConfig.logicModule)
  return p != nullptr ? *p : *reinterpret_cast<const ::pbconfig::WorldConfig_LogicModule*>(
      &::pbconfig::_WorldConfig_LogicModule_default_instance_);
}
inline ::pbconfig::WorldConfig_LogicModule* WorldConfig::release_logicmodule() {
  // @@protoc_insertion_point(field_release:pbconfig.WorldConfig.logicModule)
  
  ::pbconfig::WorldConfig_LogicModule* temp = logicmodule_;
  logicmodule_ = nullptr;
  return temp;
}
inline ::pbconfig::WorldConfig_LogicModule* WorldConfig::mutable_logicmodule() {
  
  if (logicmodule_ == nullptr) {
    auto* p = CreateMaybeMessage<::pbconfig::WorldConfig_LogicModule>(GetArenaNoVirtual());
    logicmodule_ = p;
  }
  // @@protoc_insertion_point(field_mutable:pbconfig.WorldConfig.logicModule)
  return logicmodule_;
}
inline void WorldConfig::set_allocated_logicmodule(::pbconfig::WorldConfig_LogicModule* logicmodule) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete logicmodule_;
  }
  if (logicmodule) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      logicmodule = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, logicmodule, submessage_arena);
    }
    
  } else {
    
  }
  logicmodule_ = logicmodule;
  // @@protoc_insertion_point(field_set_allocated:pbconfig.WorldConfig.logicModule)
}

// .pbconfig.WorldConfig.DatabaseModule databaseModule = 2;
inline bool WorldConfig::has_databasemodule() const {
  return this != internal_default_instance() && databasemodule_ != nullptr;
}
inline void WorldConfig::clear_databasemodule() {
  if (GetArenaNoVirtual() == nullptr && databasemodule_ != nullptr) {
    delete databasemodule_;
  }
  databasemodule_ = nullptr;
}
inline const ::pbconfig::WorldConfig_DatabaseModule& WorldConfig::databasemodule() const {
  const ::pbconfig::WorldConfig_DatabaseModule* p = databasemodule_;
  // @@protoc_insertion_point(field_get:pbconfig.WorldConfig.databaseModule)
  return p != nullptr ? *p : *reinterpret_cast<const ::pbconfig::WorldConfig_DatabaseModule*>(
      &::pbconfig::_WorldConfig_DatabaseModule_default_instance_);
}
inline ::pbconfig::WorldConfig_DatabaseModule* WorldConfig::release_databasemodule() {
  // @@protoc_insertion_point(field_release:pbconfig.WorldConfig.databaseModule)
  
  ::pbconfig::WorldConfig_DatabaseModule* temp = databasemodule_;
  databasemodule_ = nullptr;
  return temp;
}
inline ::pbconfig::WorldConfig_DatabaseModule* WorldConfig::mutable_databasemodule() {
  
  if (databasemodule_ == nullptr) {
    auto* p = CreateMaybeMessage<::pbconfig::WorldConfig_DatabaseModule>(GetArenaNoVirtual());
    databasemodule_ = p;
  }
  // @@protoc_insertion_point(field_mutable:pbconfig.WorldConfig.databaseModule)
  return databasemodule_;
}
inline void WorldConfig::set_allocated_databasemodule(::pbconfig::WorldConfig_DatabaseModule* databasemodule) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete databasemodule_;
  }
  if (databasemodule) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      databasemodule = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, databasemodule, submessage_arena);
    }
    
  } else {
    
  }
  databasemodule_ = databasemodule;
  // @@protoc_insertion_point(field_set_allocated:pbconfig.WorldConfig.databaseModule)
}

// .pbconfig.WorldConfig.NetworkModule networkModule = 3;
inline bool WorldConfig::has_networkmodule() const {
  return this != internal_default_instance() && networkmodule_ != nullptr;
}
inline void WorldConfig::clear_networkmodule() {
  if (GetArenaNoVirtual() == nullptr && networkmodule_ != nullptr) {
    delete networkmodule_;
  }
  networkmodule_ = nullptr;
}
inline const ::pbconfig::WorldConfig_NetworkModule& WorldConfig::networkmodule() const {
  const ::pbconfig::WorldConfig_NetworkModule* p = networkmodule_;
  // @@protoc_insertion_point(field_get:pbconfig.WorldConfig.networkModule)
  return p != nullptr ? *p : *reinterpret_cast<const ::pbconfig::WorldConfig_NetworkModule*>(
      &::pbconfig::_WorldConfig_NetworkModule_default_instance_);
}
inline ::pbconfig::WorldConfig_NetworkModule* WorldConfig::release_networkmodule() {
  // @@protoc_insertion_point(field_release:pbconfig.WorldConfig.networkModule)
  
  ::pbconfig::WorldConfig_NetworkModule* temp = networkmodule_;
  networkmodule_ = nullptr;
  return temp;
}
inline ::pbconfig::WorldConfig_NetworkModule* WorldConfig::mutable_networkmodule() {
  
  if (networkmodule_ == nullptr) {
    auto* p = CreateMaybeMessage<::pbconfig::WorldConfig_NetworkModule>(GetArenaNoVirtual());
    networkmodule_ = p;
  }
  // @@protoc_insertion_point(field_mutable:pbconfig.WorldConfig.networkModule)
  return networkmodule_;
}
inline void WorldConfig::set_allocated_networkmodule(::pbconfig::WorldConfig_NetworkModule* networkmodule) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete networkmodule_;
  }
  if (networkmodule) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      networkmodule = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, networkmodule, submessage_arena);
    }
    
  } else {
    
  }
  networkmodule_ = networkmodule;
  // @@protoc_insertion_point(field_set_allocated:pbconfig.WorldConfig.networkModule)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pbconfig

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_world_2econf_2eproto
