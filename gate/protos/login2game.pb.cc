// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: login2game.proto

#include "login2game.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_login2game_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GameLoginParam_login2game_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_login2game_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GameLoginRoute_login2game_2eproto;
namespace protos {
class GameLoginParamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameLoginParam> _instance;
} _GameLoginParam_default_instance_;
class GameLoginRouteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameLoginRoute> _instance;
} _GameLoginRoute_default_instance_;
class CGLoginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CGLogin> _instance;
} _CGLogin_default_instance_;
class GCLoginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GCLogin> _instance;
} _GCLogin_default_instance_;
class GWLoginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GWLogin> _instance;
} _GWLogin_default_instance_;
class WGLoginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WGLogin> _instance;
} _WGLogin_default_instance_;
class CGReconnLoginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CGReconnLogin> _instance;
} _CGReconnLogin_default_instance_;
class GCReconnLoginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GCReconnLogin> _instance;
} _GCReconnLogin_default_instance_;
class GWS2WReconnLoginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GWS2WReconnLogin> _instance;
} _GWS2WReconnLogin_default_instance_;
class W2GWSReconnLoginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<W2GWSReconnLogin> _instance;
} _W2GWSReconnLogin_default_instance_;
class GWS2GDisconnectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GWS2GDisconnect> _instance;
} _GWS2GDisconnect_default_instance_;
class G2GWSDisconnectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<G2GWSDisconnect> _instance;
} _G2GWSDisconnect_default_instance_;
class GWS2WDisconnectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GWS2WDisconnect> _instance;
} _GWS2WDisconnect_default_instance_;
class W2GWSDisconnectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<W2GWSDisconnect> _instance;
} _W2GWSDisconnect_default_instance_;
class G2GWSKickPlayerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<G2GWSKickPlayer> _instance;
} _G2GWSKickPlayer_default_instance_;
class W2GWSKickPlayerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<W2GWSKickPlayer> _instance;
} _W2GWSKickPlayer_default_instance_;
}  // namespace protos
static void InitDefaultsGameLoginParam_login2game_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_GameLoginParam_default_instance_;
    new (ptr) ::protos::GameLoginParam();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::GameLoginParam::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GameLoginParam_login2game_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGameLoginParam_login2game_2eproto}, {}};

static void InitDefaultsGameLoginRoute_login2game_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_GameLoginRoute_default_instance_;
    new (ptr) ::protos::GameLoginRoute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::GameLoginRoute::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GameLoginRoute_login2game_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGameLoginRoute_login2game_2eproto}, {}};

static void InitDefaultsCGLogin_login2game_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_CGLogin_default_instance_;
    new (ptr) ::protos::CGLogin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::CGLogin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CGLogin_login2game_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCGLogin_login2game_2eproto}, {
      &scc_info_GameLoginRoute_login2game_2eproto.base,
      &scc_info_GameLoginParam_login2game_2eproto.base,}};

static void InitDefaultsGCLogin_login2game_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_GCLogin_default_instance_;
    new (ptr) ::protos::GCLogin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::GCLogin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GCLogin_login2game_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGCLogin_login2game_2eproto}, {
      &scc_info_GameLoginRoute_login2game_2eproto.base,}};

static void InitDefaultsGWLogin_login2game_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_GWLogin_default_instance_;
    new (ptr) ::protos::GWLogin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::GWLogin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_GWLogin_login2game_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsGWLogin_login2game_2eproto}, {
      &scc_info_GameLoginRoute_login2game_2eproto.base,
      &scc_info_GameLoginParam_login2game_2eproto.base,}};

static void InitDefaultsWGLogin_login2game_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_WGLogin_default_instance_;
    new (ptr) ::protos::WGLogin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::WGLogin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_WGLogin_login2game_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsWGLogin_login2game_2eproto}, {
      &scc_info_GameLoginRoute_login2game_2eproto.base,
      &scc_info_GameLoginParam_login2game_2eproto.base,}};

static void InitDefaultsCGReconnLogin_login2game_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_CGReconnLogin_default_instance_;
    new (ptr) ::protos::CGReconnLogin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::CGReconnLogin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CGReconnLogin_login2game_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCGReconnLogin_login2game_2eproto}, {
      &scc_info_GameLoginRoute_login2game_2eproto.base,}};

static void InitDefaultsGCReconnLogin_login2game_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_GCReconnLogin_default_instance_;
    new (ptr) ::protos::GCReconnLogin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::GCReconnLogin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GCReconnLogin_login2game_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGCReconnLogin_login2game_2eproto}, {
      &scc_info_GameLoginRoute_login2game_2eproto.base,}};

static void InitDefaultsGWS2WReconnLogin_login2game_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_GWS2WReconnLogin_default_instance_;
    new (ptr) ::protos::GWS2WReconnLogin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::GWS2WReconnLogin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GWS2WReconnLogin_login2game_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGWS2WReconnLogin_login2game_2eproto}, {}};

static void InitDefaultsW2GWSReconnLogin_login2game_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_W2GWSReconnLogin_default_instance_;
    new (ptr) ::protos::W2GWSReconnLogin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::W2GWSReconnLogin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_W2GWSReconnLogin_login2game_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsW2GWSReconnLogin_login2game_2eproto}, {}};

static void InitDefaultsGWS2GDisconnect_login2game_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_GWS2GDisconnect_default_instance_;
    new (ptr) ::protos::GWS2GDisconnect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::GWS2GDisconnect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GWS2GDisconnect_login2game_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGWS2GDisconnect_login2game_2eproto}, {}};

static void InitDefaultsG2GWSDisconnect_login2game_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_G2GWSDisconnect_default_instance_;
    new (ptr) ::protos::G2GWSDisconnect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::G2GWSDisconnect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_G2GWSDisconnect_login2game_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsG2GWSDisconnect_login2game_2eproto}, {}};

static void InitDefaultsGWS2WDisconnect_login2game_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_GWS2WDisconnect_default_instance_;
    new (ptr) ::protos::GWS2WDisconnect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::GWS2WDisconnect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GWS2WDisconnect_login2game_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGWS2WDisconnect_login2game_2eproto}, {}};

static void InitDefaultsW2GWSDisconnect_login2game_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_W2GWSDisconnect_default_instance_;
    new (ptr) ::protos::W2GWSDisconnect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::W2GWSDisconnect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_W2GWSDisconnect_login2game_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsW2GWSDisconnect_login2game_2eproto}, {}};

static void InitDefaultsG2GWSKickPlayer_login2game_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_G2GWSKickPlayer_default_instance_;
    new (ptr) ::protos::G2GWSKickPlayer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::G2GWSKickPlayer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_G2GWSKickPlayer_login2game_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsG2GWSKickPlayer_login2game_2eproto}, {}};

static void InitDefaultsW2GWSKickPlayer_login2game_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_W2GWSKickPlayer_default_instance_;
    new (ptr) ::protos::W2GWSKickPlayer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::W2GWSKickPlayer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_W2GWSKickPlayer_login2game_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsW2GWSKickPlayer_login2game_2eproto}, {}};

void InitDefaults_login2game_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_GameLoginParam_login2game_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GameLoginRoute_login2game_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CGLogin_login2game_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GCLogin_login2game_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GWLogin_login2game_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WGLogin_login2game_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CGReconnLogin_login2game_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GCReconnLogin_login2game_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GWS2WReconnLogin_login2game_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_W2GWSReconnLogin_login2game_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GWS2GDisconnect_login2game_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_G2GWSDisconnect_login2game_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GWS2WDisconnect_login2game_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_W2GWSDisconnect_login2game_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_G2GWSKickPlayer_login2game_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_W2GWSKickPlayer_login2game_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_login2game_2eproto[16];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_login2game_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_login2game_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_login2game_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::GameLoginParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::GameLoginParam, deviceid_),
  PROTOBUF_FIELD_OFFSET(::protos::GameLoginParam, ip_),
  PROTOBUF_FIELD_OFFSET(::protos::GameLoginParam, userid_),
  PROTOBUF_FIELD_OFFSET(::protos::GameLoginParam, sign_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::GameLoginRoute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::GameLoginRoute, client_sessionid_),
  PROTOBUF_FIELD_OFFSET(::protos::GameLoginRoute, gws_id_),
  PROTOBUF_FIELD_OFFSET(::protos::GameLoginRoute, gs_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::CGLogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::CGLogin, route_),
  PROTOBUF_FIELD_OFFSET(::protos::CGLogin, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::GCLogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::GCLogin, error_),
  PROTOBUF_FIELD_OFFSET(::protos::GCLogin, errmsg_),
  PROTOBUF_FIELD_OFFSET(::protos::GCLogin, route_),
  PROTOBUF_FIELD_OFFSET(::protos::GCLogin, login_key_),
  PROTOBUF_FIELD_OFFSET(::protos::GCLogin, guid_),
  PROTOBUF_FIELD_OFFSET(::protos::GCLogin, name_),
  PROTOBUF_FIELD_OFFSET(::protos::GCLogin, portraitid_),
  PROTOBUF_FIELD_OFFSET(::protos::GCLogin, level_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::GWLogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::GWLogin, route_),
  PROTOBUF_FIELD_OFFSET(::protos::GWLogin, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::WGLogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::WGLogin, error_),
  PROTOBUF_FIELD_OFFSET(::protos::WGLogin, errmsg_),
  PROTOBUF_FIELD_OFFSET(::protos::WGLogin, route_),
  PROTOBUF_FIELD_OFFSET(::protos::WGLogin, param_),
  PROTOBUF_FIELD_OFFSET(::protos::WGLogin, guid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::CGReconnLogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::CGReconnLogin, route_),
  PROTOBUF_FIELD_OFFSET(::protos::CGReconnLogin, login_key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::GCReconnLogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::GCReconnLogin, error_),
  PROTOBUF_FIELD_OFFSET(::protos::GCReconnLogin, errmsg_),
  PROTOBUF_FIELD_OFFSET(::protos::GCReconnLogin, route_),
  PROTOBUF_FIELD_OFFSET(::protos::GCReconnLogin, guid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::GWS2WReconnLogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::GWS2WReconnLogin, guid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::W2GWSReconnLogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::W2GWSReconnLogin, error_),
  PROTOBUF_FIELD_OFFSET(::protos::W2GWSReconnLogin, errmsg_),
  PROTOBUF_FIELD_OFFSET(::protos::W2GWSReconnLogin, guid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::GWS2GDisconnect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::GWS2GDisconnect, guid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::G2GWSDisconnect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::G2GWSDisconnect, error_),
  PROTOBUF_FIELD_OFFSET(::protos::G2GWSDisconnect, errmsg_),
  PROTOBUF_FIELD_OFFSET(::protos::G2GWSDisconnect, guid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::GWS2WDisconnect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::GWS2WDisconnect, guid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::W2GWSDisconnect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::W2GWSDisconnect, error_),
  PROTOBUF_FIELD_OFFSET(::protos::W2GWSDisconnect, errmsg_),
  PROTOBUF_FIELD_OFFSET(::protos::W2GWSDisconnect, guid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::G2GWSKickPlayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::G2GWSKickPlayer, error_),
  PROTOBUF_FIELD_OFFSET(::protos::G2GWSKickPlayer, errmsg_),
  PROTOBUF_FIELD_OFFSET(::protos::G2GWSKickPlayer, guid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::W2GWSKickPlayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::W2GWSKickPlayer, error_),
  PROTOBUF_FIELD_OFFSET(::protos::W2GWSKickPlayer, errmsg_),
  PROTOBUF_FIELD_OFFSET(::protos::W2GWSKickPlayer, guid_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::protos::GameLoginParam)},
  { 9, -1, sizeof(::protos::GameLoginRoute)},
  { 17, -1, sizeof(::protos::CGLogin)},
  { 24, -1, sizeof(::protos::GCLogin)},
  { 37, -1, sizeof(::protos::GWLogin)},
  { 44, -1, sizeof(::protos::WGLogin)},
  { 54, -1, sizeof(::protos::CGReconnLogin)},
  { 61, -1, sizeof(::protos::GCReconnLogin)},
  { 70, -1, sizeof(::protos::GWS2WReconnLogin)},
  { 76, -1, sizeof(::protos::W2GWSReconnLogin)},
  { 84, -1, sizeof(::protos::GWS2GDisconnect)},
  { 90, -1, sizeof(::protos::G2GWSDisconnect)},
  { 98, -1, sizeof(::protos::GWS2WDisconnect)},
  { 104, -1, sizeof(::protos::W2GWSDisconnect)},
  { 112, -1, sizeof(::protos::G2GWSKickPlayer)},
  { 120, -1, sizeof(::protos::W2GWSKickPlayer)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_GameLoginParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_GameLoginRoute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_CGLogin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_GCLogin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_GWLogin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_WGLogin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_CGReconnLogin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_GCReconnLogin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_GWS2WReconnLogin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_W2GWSReconnLogin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_GWS2GDisconnect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_G2GWSDisconnect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_GWS2WDisconnect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_W2GWSDisconnect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_G2GWSKickPlayer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_W2GWSKickPlayer_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_login2game_2eproto = {
  {}, AddDescriptors_login2game_2eproto, "login2game.proto", schemas,
  file_default_instances, TableStruct_login2game_2eproto::offsets,
  file_level_metadata_login2game_2eproto, 16, file_level_enum_descriptors_login2game_2eproto, file_level_service_descriptors_login2game_2eproto,
};

const char descriptor_table_protodef_login2game_2eproto[] =
  "\n\020login2game.proto\022\006protos\"L\n\016GameLoginP"
  "aram\022\020\n\010deviceid\030\001 \001(\t\022\n\n\002ip\030\002 \001(\t\022\016\n\006us"
  "erid\030\003 \001(\003\022\014\n\004sign\030\004 \001(\t\"I\n\016GameLoginRou"
  "te\022\030\n\020client_sessionid\030\001 \001(\003\022\016\n\006gws_id\030\002"
  " \001(\005\022\r\n\005gs_id\030\003 \001(\005\"W\n\007CGLogin\022%\n\005route\030"
  "\001 \001(\0132\026.protos.GameLoginRoute\022%\n\005param\030\002"
  " \001(\0132\026.protos.GameLoginParam\"\241\001\n\007GCLogin"
  "\022\r\n\005error\030\001 \001(\005\022\016\n\006errmsg\030\002 \001(\t\022%\n\005route"
  "\030\003 \001(\0132\026.protos.GameLoginRoute\022\021\n\tlogin_"
  "key\030\004 \001(\t\022\014\n\004guid\030\005 \001(\003\022\014\n\004name\030\006 \001(\t\022\022\n"
  "\nportraitid\030\007 \001(\005\022\r\n\005level\030\010 \001(\005\"W\n\007GWLo"
  "gin\022%\n\005route\030\001 \001(\0132\026.protos.GameLoginRou"
  "te\022%\n\005param\030\002 \001(\0132\026.protos.GameLoginPara"
  "m\"\204\001\n\007WGLogin\022\r\n\005error\030\001 \001(\005\022\016\n\006errmsg\030\002"
  " \001(\t\022%\n\005route\030\003 \001(\0132\026.protos.GameLoginRo"
  "ute\022%\n\005param\030\004 \001(\0132\026.protos.GameLoginPar"
  "am\022\014\n\004guid\030\005 \001(\003\"I\n\rCGReconnLogin\022%\n\005rou"
  "te\030\001 \001(\0132\026.protos.GameLoginRoute\022\021\n\tlogi"
  "n_key\030\002 \001(\t\"c\n\rGCReconnLogin\022\r\n\005error\030\001 "
  "\001(\005\022\016\n\006errmsg\030\002 \001(\t\022%\n\005route\030\003 \001(\0132\026.pro"
  "tos.GameLoginRoute\022\014\n\004guid\030\004 \001(\003\" \n\020GWS2"
  "WReconnLogin\022\014\n\004guid\030\001 \001(\003\"\?\n\020W2GWSRecon"
  "nLogin\022\r\n\005error\030\001 \001(\005\022\016\n\006errmsg\030\002 \001(\t\022\014\n"
  "\004guid\030\003 \001(\003\"\037\n\017GWS2GDisconnect\022\014\n\004guid\030\001"
  " \001(\003\">\n\017G2GWSDisconnect\022\r\n\005error\030\001 \001(\005\022\016"
  "\n\006errmsg\030\002 \001(\t\022\014\n\004guid\030\003 \001(\003\"\037\n\017GWS2WDis"
  "connect\022\014\n\004guid\030\001 \001(\003\">\n\017W2GWSDisconnect"
  "\022\r\n\005error\030\001 \001(\005\022\016\n\006errmsg\030\002 \001(\t\022\014\n\004guid\030"
  "\003 \001(\003\">\n\017G2GWSKickPlayer\022\r\n\005error\030\001 \001(\005\022"
  "\016\n\006errmsg\030\002 \001(\t\022\014\n\004guid\030\003 \001(\003\">\n\017W2GWSKi"
  "ckPlayer\022\r\n\005error\030\001 \001(\005\022\016\n\006errmsg\030\002 \001(\t\022"
  "\014\n\004guid\030\003 \001(\003b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_login2game_2eproto = {
  false, InitDefaults_login2game_2eproto, 
  descriptor_table_protodef_login2game_2eproto,
  "login2game.proto", &assign_descriptors_table_login2game_2eproto, 1261,
};

void AddDescriptors_login2game_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_login2game_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_login2game_2eproto = []() { AddDescriptors_login2game_2eproto(); return true; }();
namespace protos {

// ===================================================================

void GameLoginParam::InitAsDefaultInstance() {
}
class GameLoginParam::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameLoginParam::kDeviceidFieldNumber;
const int GameLoginParam::kIpFieldNumber;
const int GameLoginParam::kUseridFieldNumber;
const int GameLoginParam::kSignFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameLoginParam::GameLoginParam()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.GameLoginParam)
}
GameLoginParam::GameLoginParam(const GameLoginParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deviceid().size() > 0) {
    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sign().size() > 0) {
    sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
  }
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:protos.GameLoginParam)
}

void GameLoginParam::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GameLoginParam_login2game_2eproto.base);
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_ = PROTOBUF_LONGLONG(0);
}

GameLoginParam::~GameLoginParam() {
  // @@protoc_insertion_point(destructor:protos.GameLoginParam)
  SharedDtor();
}

void GameLoginParam::SharedDtor() {
  deviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GameLoginParam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GameLoginParam& GameLoginParam::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GameLoginParam_login2game_2eproto.base);
  return *internal_default_instance();
}


void GameLoginParam::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.GameLoginParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GameLoginParam::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GameLoginParam*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string deviceid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.GameLoginParam.deviceid");
        object = msg->mutable_deviceid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string ip = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.GameLoginParam.ip");
        object = msg->mutable_ip();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int64 userid = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_userid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string sign = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.GameLoginParam.sign");
        object = msg->mutable_sign();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GameLoginParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.GameLoginParam)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string deviceid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deviceid().data(), static_cast<int>(this->deviceid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.GameLoginParam.deviceid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip().data(), static_cast<int>(this->ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.GameLoginParam.ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 userid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sign = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sign()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sign().data(), static_cast<int>(this->sign().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.GameLoginParam.sign"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.GameLoginParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.GameLoginParam)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GameLoginParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.GameLoginParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string deviceid = 1;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.GameLoginParam.deviceid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->deviceid(), output);
  }

  // string ip = 2;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.GameLoginParam.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ip(), output);
  }

  // int64 userid = 3;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->userid(), output);
  }

  // string sign = 4;
  if (this->sign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sign().data(), static_cast<int>(this->sign().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.GameLoginParam.sign");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sign(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.GameLoginParam)
}

::google::protobuf::uint8* GameLoginParam::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.GameLoginParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string deviceid = 1;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.GameLoginParam.deviceid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->deviceid(), target);
  }

  // string ip = 2;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.GameLoginParam.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ip(), target);
  }

  // int64 userid = 3;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->userid(), target);
  }

  // string sign = 4;
  if (this->sign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sign().data(), static_cast<int>(this->sign().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.GameLoginParam.sign");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sign(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.GameLoginParam)
  return target;
}

size_t GameLoginParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.GameLoginParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string deviceid = 1;
  if (this->deviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deviceid());
  }

  // string ip = 2;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip());
  }

  // string sign = 4;
  if (this->sign().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sign());
  }

  // int64 userid = 3;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameLoginParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.GameLoginParam)
  GOOGLE_DCHECK_NE(&from, this);
  const GameLoginParam* source =
      ::google::protobuf::DynamicCastToGenerated<GameLoginParam>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.GameLoginParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.GameLoginParam)
    MergeFrom(*source);
  }
}

void GameLoginParam::MergeFrom(const GameLoginParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.GameLoginParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.deviceid().size() > 0) {

    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.sign().size() > 0) {

    sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void GameLoginParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.GameLoginParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameLoginParam::CopyFrom(const GameLoginParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.GameLoginParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameLoginParam::IsInitialized() const {
  return true;
}

void GameLoginParam::Swap(GameLoginParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameLoginParam::InternalSwap(GameLoginParam* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  deviceid_.Swap(&other->deviceid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sign_.Swap(&other->sign_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(userid_, other->userid_);
}

::google::protobuf::Metadata GameLoginParam::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login2game_2eproto);
  return ::file_level_metadata_login2game_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GameLoginRoute::InitAsDefaultInstance() {
}
class GameLoginRoute::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameLoginRoute::kClientSessionidFieldNumber;
const int GameLoginRoute::kGwsIdFieldNumber;
const int GameLoginRoute::kGsIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameLoginRoute::GameLoginRoute()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.GameLoginRoute)
}
GameLoginRoute::GameLoginRoute(const GameLoginRoute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&client_sessionid_, &from.client_sessionid_,
    static_cast<size_t>(reinterpret_cast<char*>(&gs_id_) -
    reinterpret_cast<char*>(&client_sessionid_)) + sizeof(gs_id_));
  // @@protoc_insertion_point(copy_constructor:protos.GameLoginRoute)
}

void GameLoginRoute::SharedCtor() {
  ::memset(&client_sessionid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gs_id_) -
      reinterpret_cast<char*>(&client_sessionid_)) + sizeof(gs_id_));
}

GameLoginRoute::~GameLoginRoute() {
  // @@protoc_insertion_point(destructor:protos.GameLoginRoute)
  SharedDtor();
}

void GameLoginRoute::SharedDtor() {
}

void GameLoginRoute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GameLoginRoute& GameLoginRoute::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GameLoginRoute_login2game_2eproto.base);
  return *internal_default_instance();
}


void GameLoginRoute::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.GameLoginRoute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&client_sessionid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gs_id_) -
      reinterpret_cast<char*>(&client_sessionid_)) + sizeof(gs_id_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GameLoginRoute::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GameLoginRoute*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 client_sessionid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_client_sessionid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 gws_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_gws_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 gs_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_gs_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GameLoginRoute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.GameLoginRoute)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 client_sessionid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &client_sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 gws_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gws_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 gs_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gs_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.GameLoginRoute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.GameLoginRoute)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GameLoginRoute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.GameLoginRoute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 client_sessionid = 1;
  if (this->client_sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->client_sessionid(), output);
  }

  // int32 gws_id = 2;
  if (this->gws_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->gws_id(), output);
  }

  // int32 gs_id = 3;
  if (this->gs_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->gs_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.GameLoginRoute)
}

::google::protobuf::uint8* GameLoginRoute::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.GameLoginRoute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 client_sessionid = 1;
  if (this->client_sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->client_sessionid(), target);
  }

  // int32 gws_id = 2;
  if (this->gws_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->gws_id(), target);
  }

  // int32 gs_id = 3;
  if (this->gs_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->gs_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.GameLoginRoute)
  return target;
}

size_t GameLoginRoute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.GameLoginRoute)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 client_sessionid = 1;
  if (this->client_sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->client_sessionid());
  }

  // int32 gws_id = 2;
  if (this->gws_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gws_id());
  }

  // int32 gs_id = 3;
  if (this->gs_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gs_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameLoginRoute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.GameLoginRoute)
  GOOGLE_DCHECK_NE(&from, this);
  const GameLoginRoute* source =
      ::google::protobuf::DynamicCastToGenerated<GameLoginRoute>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.GameLoginRoute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.GameLoginRoute)
    MergeFrom(*source);
  }
}

void GameLoginRoute::MergeFrom(const GameLoginRoute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.GameLoginRoute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.client_sessionid() != 0) {
    set_client_sessionid(from.client_sessionid());
  }
  if (from.gws_id() != 0) {
    set_gws_id(from.gws_id());
  }
  if (from.gs_id() != 0) {
    set_gs_id(from.gs_id());
  }
}

void GameLoginRoute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.GameLoginRoute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameLoginRoute::CopyFrom(const GameLoginRoute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.GameLoginRoute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameLoginRoute::IsInitialized() const {
  return true;
}

void GameLoginRoute::Swap(GameLoginRoute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameLoginRoute::InternalSwap(GameLoginRoute* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(client_sessionid_, other->client_sessionid_);
  swap(gws_id_, other->gws_id_);
  swap(gs_id_, other->gs_id_);
}

::google::protobuf::Metadata GameLoginRoute::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login2game_2eproto);
  return ::file_level_metadata_login2game_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CGLogin::InitAsDefaultInstance() {
  ::protos::_CGLogin_default_instance_._instance.get_mutable()->route_ = const_cast< ::protos::GameLoginRoute*>(
      ::protos::GameLoginRoute::internal_default_instance());
  ::protos::_CGLogin_default_instance_._instance.get_mutable()->param_ = const_cast< ::protos::GameLoginParam*>(
      ::protos::GameLoginParam::internal_default_instance());
}
class CGLogin::HasBitSetters {
 public:
  static const ::protos::GameLoginRoute& route(const CGLogin* msg);
  static const ::protos::GameLoginParam& param(const CGLogin* msg);
};

const ::protos::GameLoginRoute&
CGLogin::HasBitSetters::route(const CGLogin* msg) {
  return *msg->route_;
}
const ::protos::GameLoginParam&
CGLogin::HasBitSetters::param(const CGLogin* msg) {
  return *msg->param_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGLogin::kRouteFieldNumber;
const int CGLogin::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGLogin::CGLogin()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.CGLogin)
}
CGLogin::CGLogin(const CGLogin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_route()) {
    route_ = new ::protos::GameLoginRoute(*from.route_);
  } else {
    route_ = nullptr;
  }
  if (from.has_param()) {
    param_ = new ::protos::GameLoginParam(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protos.CGLogin)
}

void CGLogin::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CGLogin_login2game_2eproto.base);
  ::memset(&route_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param_) -
      reinterpret_cast<char*>(&route_)) + sizeof(param_));
}

CGLogin::~CGLogin() {
  // @@protoc_insertion_point(destructor:protos.CGLogin)
  SharedDtor();
}

void CGLogin::SharedDtor() {
  if (this != internal_default_instance()) delete route_;
  if (this != internal_default_instance()) delete param_;
}

void CGLogin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CGLogin& CGLogin::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CGLogin_login2game_2eproto.base);
  return *internal_default_instance();
}


void CGLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.CGLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && route_ != nullptr) {
    delete route_;
  }
  route_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CGLogin::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CGLogin*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .protos.GameLoginRoute route = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::protos::GameLoginRoute::_InternalParse;
        object = msg->mutable_route();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .protos.GameLoginParam param = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::protos::GameLoginParam::_InternalParse;
        object = msg->mutable_param();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CGLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.CGLogin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .protos.GameLoginRoute route = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_route()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protos.GameLoginParam param = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.CGLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.CGLogin)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CGLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.CGLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protos.GameLoginRoute route = 1;
  if (this->has_route()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::route(this), output);
  }

  // .protos.GameLoginParam param = 2;
  if (this->has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::param(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.CGLogin)
}

::google::protobuf::uint8* CGLogin::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.CGLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protos.GameLoginRoute route = 1;
  if (this->has_route()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::route(this), target);
  }

  // .protos.GameLoginParam param = 2;
  if (this->has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::param(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.CGLogin)
  return target;
}

size_t CGLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.CGLogin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protos.GameLoginRoute route = 1;
  if (this->has_route()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *route_);
  }

  // .protos.GameLoginParam param = 2;
  if (this->has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *param_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CGLogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.CGLogin)
  GOOGLE_DCHECK_NE(&from, this);
  const CGLogin* source =
      ::google::protobuf::DynamicCastToGenerated<CGLogin>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.CGLogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.CGLogin)
    MergeFrom(*source);
  }
}

void CGLogin::MergeFrom(const CGLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.CGLogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_route()) {
    mutable_route()->::protos::GameLoginRoute::MergeFrom(from.route());
  }
  if (from.has_param()) {
    mutable_param()->::protos::GameLoginParam::MergeFrom(from.param());
  }
}

void CGLogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.CGLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGLogin::CopyFrom(const CGLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.CGLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGLogin::IsInitialized() const {
  return true;
}

void CGLogin::Swap(CGLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGLogin::InternalSwap(CGLogin* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(route_, other->route_);
  swap(param_, other->param_);
}

::google::protobuf::Metadata CGLogin::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login2game_2eproto);
  return ::file_level_metadata_login2game_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GCLogin::InitAsDefaultInstance() {
  ::protos::_GCLogin_default_instance_._instance.get_mutable()->route_ = const_cast< ::protos::GameLoginRoute*>(
      ::protos::GameLoginRoute::internal_default_instance());
}
class GCLogin::HasBitSetters {
 public:
  static const ::protos::GameLoginRoute& route(const GCLogin* msg);
};

const ::protos::GameLoginRoute&
GCLogin::HasBitSetters::route(const GCLogin* msg) {
  return *msg->route_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GCLogin::kErrorFieldNumber;
const int GCLogin::kErrmsgFieldNumber;
const int GCLogin::kRouteFieldNumber;
const int GCLogin::kLoginKeyFieldNumber;
const int GCLogin::kGuidFieldNumber;
const int GCLogin::kNameFieldNumber;
const int GCLogin::kPortraitidFieldNumber;
const int GCLogin::kLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GCLogin::GCLogin()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.GCLogin)
}
GCLogin::GCLogin(const GCLogin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errmsg().size() > 0) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  login_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.login_key().size() > 0) {
    login_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_key_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_route()) {
    route_ = new ::protos::GameLoginRoute(*from.route_);
  } else {
    route_ = nullptr;
  }
  ::memcpy(&error_, &from.error_,
    static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&error_)) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:protos.GCLogin)
}

void GCLogin::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GCLogin_login2game_2eproto.base);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&route_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&route_)) + sizeof(level_));
}

GCLogin::~GCLogin() {
  // @@protoc_insertion_point(destructor:protos.GCLogin)
  SharedDtor();
}

void GCLogin::SharedDtor() {
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete route_;
}

void GCLogin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GCLogin& GCLogin::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GCLogin_login2game_2eproto.base);
  return *internal_default_instance();
}


void GCLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.GCLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && route_ != nullptr) {
    delete route_;
  }
  route_ = nullptr;
  ::memset(&error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&error_)) + sizeof(level_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GCLogin::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GCLogin*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 error = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_error(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string errmsg = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.GCLogin.errmsg");
        object = msg->mutable_errmsg();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .protos.GameLoginRoute route = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::protos::GameLoginRoute::_InternalParse;
        object = msg->mutable_route();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string login_key = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.GCLogin.login_key");
        object = msg->mutable_login_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int64 guid = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_guid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string name = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.GCLogin.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 portraitid = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_portraitid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 level = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_level(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GCLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.GCLogin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errmsg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), static_cast<int>(this->errmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.GCLogin.errmsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protos.GameLoginRoute route = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_route()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string login_key = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_login_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->login_key().data(), static_cast<int>(this->login_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.GCLogin.login_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 guid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.GCLogin.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 portraitid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &portraitid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 level = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.GCLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.GCLogin)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GCLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.GCLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.GCLogin.errmsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errmsg(), output);
  }

  // .protos.GameLoginRoute route = 3;
  if (this->has_route()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::route(this), output);
  }

  // string login_key = 4;
  if (this->login_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login_key().data(), static_cast<int>(this->login_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.GCLogin.login_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->login_key(), output);
  }

  // int64 guid = 5;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->guid(), output);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.GCLogin.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  // int32 portraitid = 7;
  if (this->portraitid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->portraitid(), output);
  }

  // int32 level = 8;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->level(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.GCLogin)
}

::google::protobuf::uint8* GCLogin::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.GCLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.GCLogin.errmsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errmsg(), target);
  }

  // .protos.GameLoginRoute route = 3;
  if (this->has_route()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::route(this), target);
  }

  // string login_key = 4;
  if (this->login_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login_key().data(), static_cast<int>(this->login_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.GCLogin.login_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->login_key(), target);
  }

  // int64 guid = 5;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->guid(), target);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.GCLogin.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  // int32 portraitid = 7;
  if (this->portraitid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->portraitid(), target);
  }

  // int32 level = 8;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->level(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.GCLogin)
  return target;
}

size_t GCLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.GCLogin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // string login_key = 4;
  if (this->login_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->login_key());
  }

  // string name = 6;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .protos.GameLoginRoute route = 3;
  if (this->has_route()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *route_);
  }

  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  // int32 portraitid = 7;
  if (this->portraitid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->portraitid());
  }

  // int64 guid = 5;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->guid());
  }

  // int32 level = 8;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GCLogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.GCLogin)
  GOOGLE_DCHECK_NE(&from, this);
  const GCLogin* source =
      ::google::protobuf::DynamicCastToGenerated<GCLogin>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.GCLogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.GCLogin)
    MergeFrom(*source);
  }
}

void GCLogin::MergeFrom(const GCLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.GCLogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.login_key().size() > 0) {

    login_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_key_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_route()) {
    mutable_route()->::protos::GameLoginRoute::MergeFrom(from.route());
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
  if (from.portraitid() != 0) {
    set_portraitid(from.portraitid());
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
}

void GCLogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.GCLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GCLogin::CopyFrom(const GCLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.GCLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GCLogin::IsInitialized() const {
  return true;
}

void GCLogin::Swap(GCLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GCLogin::InternalSwap(GCLogin* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  errmsg_.Swap(&other->errmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  login_key_.Swap(&other->login_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(route_, other->route_);
  swap(error_, other->error_);
  swap(portraitid_, other->portraitid_);
  swap(guid_, other->guid_);
  swap(level_, other->level_);
}

::google::protobuf::Metadata GCLogin::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login2game_2eproto);
  return ::file_level_metadata_login2game_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GWLogin::InitAsDefaultInstance() {
  ::protos::_GWLogin_default_instance_._instance.get_mutable()->route_ = const_cast< ::protos::GameLoginRoute*>(
      ::protos::GameLoginRoute::internal_default_instance());
  ::protos::_GWLogin_default_instance_._instance.get_mutable()->param_ = const_cast< ::protos::GameLoginParam*>(
      ::protos::GameLoginParam::internal_default_instance());
}
class GWLogin::HasBitSetters {
 public:
  static const ::protos::GameLoginRoute& route(const GWLogin* msg);
  static const ::protos::GameLoginParam& param(const GWLogin* msg);
};

const ::protos::GameLoginRoute&
GWLogin::HasBitSetters::route(const GWLogin* msg) {
  return *msg->route_;
}
const ::protos::GameLoginParam&
GWLogin::HasBitSetters::param(const GWLogin* msg) {
  return *msg->param_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GWLogin::kRouteFieldNumber;
const int GWLogin::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GWLogin::GWLogin()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.GWLogin)
}
GWLogin::GWLogin(const GWLogin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_route()) {
    route_ = new ::protos::GameLoginRoute(*from.route_);
  } else {
    route_ = nullptr;
  }
  if (from.has_param()) {
    param_ = new ::protos::GameLoginParam(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protos.GWLogin)
}

void GWLogin::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GWLogin_login2game_2eproto.base);
  ::memset(&route_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param_) -
      reinterpret_cast<char*>(&route_)) + sizeof(param_));
}

GWLogin::~GWLogin() {
  // @@protoc_insertion_point(destructor:protos.GWLogin)
  SharedDtor();
}

void GWLogin::SharedDtor() {
  if (this != internal_default_instance()) delete route_;
  if (this != internal_default_instance()) delete param_;
}

void GWLogin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GWLogin& GWLogin::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GWLogin_login2game_2eproto.base);
  return *internal_default_instance();
}


void GWLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.GWLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && route_ != nullptr) {
    delete route_;
  }
  route_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GWLogin::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GWLogin*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .protos.GameLoginRoute route = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::protos::GameLoginRoute::_InternalParse;
        object = msg->mutable_route();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .protos.GameLoginParam param = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::protos::GameLoginParam::_InternalParse;
        object = msg->mutable_param();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GWLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.GWLogin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .protos.GameLoginRoute route = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_route()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protos.GameLoginParam param = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.GWLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.GWLogin)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GWLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.GWLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protos.GameLoginRoute route = 1;
  if (this->has_route()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::route(this), output);
  }

  // .protos.GameLoginParam param = 2;
  if (this->has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::param(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.GWLogin)
}

::google::protobuf::uint8* GWLogin::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.GWLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protos.GameLoginRoute route = 1;
  if (this->has_route()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::route(this), target);
  }

  // .protos.GameLoginParam param = 2;
  if (this->has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::param(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.GWLogin)
  return target;
}

size_t GWLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.GWLogin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protos.GameLoginRoute route = 1;
  if (this->has_route()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *route_);
  }

  // .protos.GameLoginParam param = 2;
  if (this->has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *param_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GWLogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.GWLogin)
  GOOGLE_DCHECK_NE(&from, this);
  const GWLogin* source =
      ::google::protobuf::DynamicCastToGenerated<GWLogin>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.GWLogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.GWLogin)
    MergeFrom(*source);
  }
}

void GWLogin::MergeFrom(const GWLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.GWLogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_route()) {
    mutable_route()->::protos::GameLoginRoute::MergeFrom(from.route());
  }
  if (from.has_param()) {
    mutable_param()->::protos::GameLoginParam::MergeFrom(from.param());
  }
}

void GWLogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.GWLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GWLogin::CopyFrom(const GWLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.GWLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GWLogin::IsInitialized() const {
  return true;
}

void GWLogin::Swap(GWLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GWLogin::InternalSwap(GWLogin* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(route_, other->route_);
  swap(param_, other->param_);
}

::google::protobuf::Metadata GWLogin::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login2game_2eproto);
  return ::file_level_metadata_login2game_2eproto[kIndexInFileMessages];
}


// ===================================================================

void WGLogin::InitAsDefaultInstance() {
  ::protos::_WGLogin_default_instance_._instance.get_mutable()->route_ = const_cast< ::protos::GameLoginRoute*>(
      ::protos::GameLoginRoute::internal_default_instance());
  ::protos::_WGLogin_default_instance_._instance.get_mutable()->param_ = const_cast< ::protos::GameLoginParam*>(
      ::protos::GameLoginParam::internal_default_instance());
}
class WGLogin::HasBitSetters {
 public:
  static const ::protos::GameLoginRoute& route(const WGLogin* msg);
  static const ::protos::GameLoginParam& param(const WGLogin* msg);
};

const ::protos::GameLoginRoute&
WGLogin::HasBitSetters::route(const WGLogin* msg) {
  return *msg->route_;
}
const ::protos::GameLoginParam&
WGLogin::HasBitSetters::param(const WGLogin* msg) {
  return *msg->param_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WGLogin::kErrorFieldNumber;
const int WGLogin::kErrmsgFieldNumber;
const int WGLogin::kRouteFieldNumber;
const int WGLogin::kParamFieldNumber;
const int WGLogin::kGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WGLogin::WGLogin()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.WGLogin)
}
WGLogin::WGLogin(const WGLogin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errmsg().size() > 0) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.has_route()) {
    route_ = new ::protos::GameLoginRoute(*from.route_);
  } else {
    route_ = nullptr;
  }
  if (from.has_param()) {
    param_ = new ::protos::GameLoginParam(*from.param_);
  } else {
    param_ = nullptr;
  }
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&error_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(error_));
  // @@protoc_insertion_point(copy_constructor:protos.WGLogin)
}

void WGLogin::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_WGLogin_login2game_2eproto.base);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&route_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&route_)) + sizeof(error_));
}

WGLogin::~WGLogin() {
  // @@protoc_insertion_point(destructor:protos.WGLogin)
  SharedDtor();
}

void WGLogin::SharedDtor() {
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete route_;
  if (this != internal_default_instance()) delete param_;
}

void WGLogin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WGLogin& WGLogin::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_WGLogin_login2game_2eproto.base);
  return *internal_default_instance();
}


void WGLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.WGLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && route_ != nullptr) {
    delete route_;
  }
  route_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(error_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WGLogin::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<WGLogin*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 error = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_error(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string errmsg = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.WGLogin.errmsg");
        object = msg->mutable_errmsg();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .protos.GameLoginRoute route = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::protos::GameLoginRoute::_InternalParse;
        object = msg->mutable_route();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .protos.GameLoginParam param = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::protos::GameLoginParam::_InternalParse;
        object = msg->mutable_param();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // int64 guid = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_guid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WGLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.WGLogin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errmsg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), static_cast<int>(this->errmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.WGLogin.errmsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protos.GameLoginRoute route = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_route()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protos.GameLoginParam param = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 guid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.WGLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.WGLogin)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WGLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.WGLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.WGLogin.errmsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errmsg(), output);
  }

  // .protos.GameLoginRoute route = 3;
  if (this->has_route()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::route(this), output);
  }

  // .protos.GameLoginParam param = 4;
  if (this->has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::param(this), output);
  }

  // int64 guid = 5;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.WGLogin)
}

::google::protobuf::uint8* WGLogin::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.WGLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.WGLogin.errmsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errmsg(), target);
  }

  // .protos.GameLoginRoute route = 3;
  if (this->has_route()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::route(this), target);
  }

  // .protos.GameLoginParam param = 4;
  if (this->has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::param(this), target);
  }

  // int64 guid = 5;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.WGLogin)
  return target;
}

size_t WGLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.WGLogin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // .protos.GameLoginRoute route = 3;
  if (this->has_route()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *route_);
  }

  // .protos.GameLoginParam param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *param_);
  }

  // int64 guid = 5;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->guid());
  }

  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WGLogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.WGLogin)
  GOOGLE_DCHECK_NE(&from, this);
  const WGLogin* source =
      ::google::protobuf::DynamicCastToGenerated<WGLogin>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.WGLogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.WGLogin)
    MergeFrom(*source);
  }
}

void WGLogin::MergeFrom(const WGLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.WGLogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.has_route()) {
    mutable_route()->::protos::GameLoginRoute::MergeFrom(from.route());
  }
  if (from.has_param()) {
    mutable_param()->::protos::GameLoginParam::MergeFrom(from.param());
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void WGLogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.WGLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WGLogin::CopyFrom(const WGLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.WGLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WGLogin::IsInitialized() const {
  return true;
}

void WGLogin::Swap(WGLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WGLogin::InternalSwap(WGLogin* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  errmsg_.Swap(&other->errmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(route_, other->route_);
  swap(param_, other->param_);
  swap(guid_, other->guid_);
  swap(error_, other->error_);
}

::google::protobuf::Metadata WGLogin::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login2game_2eproto);
  return ::file_level_metadata_login2game_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CGReconnLogin::InitAsDefaultInstance() {
  ::protos::_CGReconnLogin_default_instance_._instance.get_mutable()->route_ = const_cast< ::protos::GameLoginRoute*>(
      ::protos::GameLoginRoute::internal_default_instance());
}
class CGReconnLogin::HasBitSetters {
 public:
  static const ::protos::GameLoginRoute& route(const CGReconnLogin* msg);
};

const ::protos::GameLoginRoute&
CGReconnLogin::HasBitSetters::route(const CGReconnLogin* msg) {
  return *msg->route_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGReconnLogin::kRouteFieldNumber;
const int CGReconnLogin::kLoginKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGReconnLogin::CGReconnLogin()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.CGReconnLogin)
}
CGReconnLogin::CGReconnLogin(const CGReconnLogin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  login_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.login_key().size() > 0) {
    login_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_key_);
  }
  if (from.has_route()) {
    route_ = new ::protos::GameLoginRoute(*from.route_);
  } else {
    route_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protos.CGReconnLogin)
}

void CGReconnLogin::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CGReconnLogin_login2game_2eproto.base);
  login_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  route_ = nullptr;
}

CGReconnLogin::~CGReconnLogin() {
  // @@protoc_insertion_point(destructor:protos.CGReconnLogin)
  SharedDtor();
}

void CGReconnLogin::SharedDtor() {
  login_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete route_;
}

void CGReconnLogin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CGReconnLogin& CGReconnLogin::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CGReconnLogin_login2game_2eproto.base);
  return *internal_default_instance();
}


void CGReconnLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.CGReconnLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  login_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && route_ != nullptr) {
    delete route_;
  }
  route_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CGReconnLogin::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CGReconnLogin*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .protos.GameLoginRoute route = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::protos::GameLoginRoute::_InternalParse;
        object = msg->mutable_route();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string login_key = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.CGReconnLogin.login_key");
        object = msg->mutable_login_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CGReconnLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.CGReconnLogin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .protos.GameLoginRoute route = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_route()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string login_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_login_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->login_key().data(), static_cast<int>(this->login_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.CGReconnLogin.login_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.CGReconnLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.CGReconnLogin)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CGReconnLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.CGReconnLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protos.GameLoginRoute route = 1;
  if (this->has_route()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::route(this), output);
  }

  // string login_key = 2;
  if (this->login_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login_key().data(), static_cast<int>(this->login_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.CGReconnLogin.login_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->login_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.CGReconnLogin)
}

::google::protobuf::uint8* CGReconnLogin::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.CGReconnLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protos.GameLoginRoute route = 1;
  if (this->has_route()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::route(this), target);
  }

  // string login_key = 2;
  if (this->login_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login_key().data(), static_cast<int>(this->login_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.CGReconnLogin.login_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->login_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.CGReconnLogin)
  return target;
}

size_t CGReconnLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.CGReconnLogin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string login_key = 2;
  if (this->login_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->login_key());
  }

  // .protos.GameLoginRoute route = 1;
  if (this->has_route()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *route_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CGReconnLogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.CGReconnLogin)
  GOOGLE_DCHECK_NE(&from, this);
  const CGReconnLogin* source =
      ::google::protobuf::DynamicCastToGenerated<CGReconnLogin>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.CGReconnLogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.CGReconnLogin)
    MergeFrom(*source);
  }
}

void CGReconnLogin::MergeFrom(const CGReconnLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.CGReconnLogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.login_key().size() > 0) {

    login_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_key_);
  }
  if (from.has_route()) {
    mutable_route()->::protos::GameLoginRoute::MergeFrom(from.route());
  }
}

void CGReconnLogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.CGReconnLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGReconnLogin::CopyFrom(const CGReconnLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.CGReconnLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGReconnLogin::IsInitialized() const {
  return true;
}

void CGReconnLogin::Swap(CGReconnLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGReconnLogin::InternalSwap(CGReconnLogin* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  login_key_.Swap(&other->login_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(route_, other->route_);
}

::google::protobuf::Metadata CGReconnLogin::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login2game_2eproto);
  return ::file_level_metadata_login2game_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GCReconnLogin::InitAsDefaultInstance() {
  ::protos::_GCReconnLogin_default_instance_._instance.get_mutable()->route_ = const_cast< ::protos::GameLoginRoute*>(
      ::protos::GameLoginRoute::internal_default_instance());
}
class GCReconnLogin::HasBitSetters {
 public:
  static const ::protos::GameLoginRoute& route(const GCReconnLogin* msg);
};

const ::protos::GameLoginRoute&
GCReconnLogin::HasBitSetters::route(const GCReconnLogin* msg) {
  return *msg->route_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GCReconnLogin::kErrorFieldNumber;
const int GCReconnLogin::kErrmsgFieldNumber;
const int GCReconnLogin::kRouteFieldNumber;
const int GCReconnLogin::kGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GCReconnLogin::GCReconnLogin()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.GCReconnLogin)
}
GCReconnLogin::GCReconnLogin(const GCReconnLogin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errmsg().size() > 0) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.has_route()) {
    route_ = new ::protos::GameLoginRoute(*from.route_);
  } else {
    route_ = nullptr;
  }
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&error_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(error_));
  // @@protoc_insertion_point(copy_constructor:protos.GCReconnLogin)
}

void GCReconnLogin::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GCReconnLogin_login2game_2eproto.base);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&route_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&route_)) + sizeof(error_));
}

GCReconnLogin::~GCReconnLogin() {
  // @@protoc_insertion_point(destructor:protos.GCReconnLogin)
  SharedDtor();
}

void GCReconnLogin::SharedDtor() {
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete route_;
}

void GCReconnLogin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GCReconnLogin& GCReconnLogin::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GCReconnLogin_login2game_2eproto.base);
  return *internal_default_instance();
}


void GCReconnLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.GCReconnLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && route_ != nullptr) {
    delete route_;
  }
  route_ = nullptr;
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(error_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GCReconnLogin::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GCReconnLogin*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 error = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_error(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string errmsg = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.GCReconnLogin.errmsg");
        object = msg->mutable_errmsg();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .protos.GameLoginRoute route = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::protos::GameLoginRoute::_InternalParse;
        object = msg->mutable_route();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // int64 guid = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_guid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GCReconnLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.GCReconnLogin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errmsg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), static_cast<int>(this->errmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.GCReconnLogin.errmsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protos.GameLoginRoute route = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_route()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 guid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.GCReconnLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.GCReconnLogin)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GCReconnLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.GCReconnLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.GCReconnLogin.errmsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errmsg(), output);
  }

  // .protos.GameLoginRoute route = 3;
  if (this->has_route()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::route(this), output);
  }

  // int64 guid = 4;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.GCReconnLogin)
}

::google::protobuf::uint8* GCReconnLogin::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.GCReconnLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.GCReconnLogin.errmsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errmsg(), target);
  }

  // .protos.GameLoginRoute route = 3;
  if (this->has_route()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::route(this), target);
  }

  // int64 guid = 4;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.GCReconnLogin)
  return target;
}

size_t GCReconnLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.GCReconnLogin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // .protos.GameLoginRoute route = 3;
  if (this->has_route()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *route_);
  }

  // int64 guid = 4;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->guid());
  }

  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GCReconnLogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.GCReconnLogin)
  GOOGLE_DCHECK_NE(&from, this);
  const GCReconnLogin* source =
      ::google::protobuf::DynamicCastToGenerated<GCReconnLogin>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.GCReconnLogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.GCReconnLogin)
    MergeFrom(*source);
  }
}

void GCReconnLogin::MergeFrom(const GCReconnLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.GCReconnLogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.has_route()) {
    mutable_route()->::protos::GameLoginRoute::MergeFrom(from.route());
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void GCReconnLogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.GCReconnLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GCReconnLogin::CopyFrom(const GCReconnLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.GCReconnLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GCReconnLogin::IsInitialized() const {
  return true;
}

void GCReconnLogin::Swap(GCReconnLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GCReconnLogin::InternalSwap(GCReconnLogin* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  errmsg_.Swap(&other->errmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(route_, other->route_);
  swap(guid_, other->guid_);
  swap(error_, other->error_);
}

::google::protobuf::Metadata GCReconnLogin::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login2game_2eproto);
  return ::file_level_metadata_login2game_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GWS2WReconnLogin::InitAsDefaultInstance() {
}
class GWS2WReconnLogin::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GWS2WReconnLogin::kGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GWS2WReconnLogin::GWS2WReconnLogin()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.GWS2WReconnLogin)
}
GWS2WReconnLogin::GWS2WReconnLogin(const GWS2WReconnLogin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guid_ = from.guid_;
  // @@protoc_insertion_point(copy_constructor:protos.GWS2WReconnLogin)
}

void GWS2WReconnLogin::SharedCtor() {
  guid_ = PROTOBUF_LONGLONG(0);
}

GWS2WReconnLogin::~GWS2WReconnLogin() {
  // @@protoc_insertion_point(destructor:protos.GWS2WReconnLogin)
  SharedDtor();
}

void GWS2WReconnLogin::SharedDtor() {
}

void GWS2WReconnLogin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GWS2WReconnLogin& GWS2WReconnLogin::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GWS2WReconnLogin_login2game_2eproto.base);
  return *internal_default_instance();
}


void GWS2WReconnLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.GWS2WReconnLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guid_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GWS2WReconnLogin::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GWS2WReconnLogin*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 guid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_guid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GWS2WReconnLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.GWS2WReconnLogin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.GWS2WReconnLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.GWS2WReconnLogin)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GWS2WReconnLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.GWS2WReconnLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.GWS2WReconnLogin)
}

::google::protobuf::uint8* GWS2WReconnLogin::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.GWS2WReconnLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.GWS2WReconnLogin)
  return target;
}

size_t GWS2WReconnLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.GWS2WReconnLogin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GWS2WReconnLogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.GWS2WReconnLogin)
  GOOGLE_DCHECK_NE(&from, this);
  const GWS2WReconnLogin* source =
      ::google::protobuf::DynamicCastToGenerated<GWS2WReconnLogin>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.GWS2WReconnLogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.GWS2WReconnLogin)
    MergeFrom(*source);
  }
}

void GWS2WReconnLogin::MergeFrom(const GWS2WReconnLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.GWS2WReconnLogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guid() != 0) {
    set_guid(from.guid());
  }
}

void GWS2WReconnLogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.GWS2WReconnLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GWS2WReconnLogin::CopyFrom(const GWS2WReconnLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.GWS2WReconnLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GWS2WReconnLogin::IsInitialized() const {
  return true;
}

void GWS2WReconnLogin::Swap(GWS2WReconnLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GWS2WReconnLogin::InternalSwap(GWS2WReconnLogin* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(guid_, other->guid_);
}

::google::protobuf::Metadata GWS2WReconnLogin::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login2game_2eproto);
  return ::file_level_metadata_login2game_2eproto[kIndexInFileMessages];
}


// ===================================================================

void W2GWSReconnLogin::InitAsDefaultInstance() {
}
class W2GWSReconnLogin::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int W2GWSReconnLogin::kErrorFieldNumber;
const int W2GWSReconnLogin::kErrmsgFieldNumber;
const int W2GWSReconnLogin::kGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

W2GWSReconnLogin::W2GWSReconnLogin()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.W2GWSReconnLogin)
}
W2GWSReconnLogin::W2GWSReconnLogin(const W2GWSReconnLogin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errmsg().size() > 0) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&error_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(error_));
  // @@protoc_insertion_point(copy_constructor:protos.W2GWSReconnLogin)
}

void W2GWSReconnLogin::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_W2GWSReconnLogin_login2game_2eproto.base);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(error_));
}

W2GWSReconnLogin::~W2GWSReconnLogin() {
  // @@protoc_insertion_point(destructor:protos.W2GWSReconnLogin)
  SharedDtor();
}

void W2GWSReconnLogin::SharedDtor() {
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void W2GWSReconnLogin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const W2GWSReconnLogin& W2GWSReconnLogin::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_W2GWSReconnLogin_login2game_2eproto.base);
  return *internal_default_instance();
}


void W2GWSReconnLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.W2GWSReconnLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(error_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* W2GWSReconnLogin::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<W2GWSReconnLogin*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 error = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_error(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string errmsg = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.W2GWSReconnLogin.errmsg");
        object = msg->mutable_errmsg();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int64 guid = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_guid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool W2GWSReconnLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.W2GWSReconnLogin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errmsg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), static_cast<int>(this->errmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.W2GWSReconnLogin.errmsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 guid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.W2GWSReconnLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.W2GWSReconnLogin)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void W2GWSReconnLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.W2GWSReconnLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.W2GWSReconnLogin.errmsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errmsg(), output);
  }

  // int64 guid = 3;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.W2GWSReconnLogin)
}

::google::protobuf::uint8* W2GWSReconnLogin::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.W2GWSReconnLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.W2GWSReconnLogin.errmsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errmsg(), target);
  }

  // int64 guid = 3;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.W2GWSReconnLogin)
  return target;
}

size_t W2GWSReconnLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.W2GWSReconnLogin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // int64 guid = 3;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->guid());
  }

  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void W2GWSReconnLogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.W2GWSReconnLogin)
  GOOGLE_DCHECK_NE(&from, this);
  const W2GWSReconnLogin* source =
      ::google::protobuf::DynamicCastToGenerated<W2GWSReconnLogin>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.W2GWSReconnLogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.W2GWSReconnLogin)
    MergeFrom(*source);
  }
}

void W2GWSReconnLogin::MergeFrom(const W2GWSReconnLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.W2GWSReconnLogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void W2GWSReconnLogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.W2GWSReconnLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void W2GWSReconnLogin::CopyFrom(const W2GWSReconnLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.W2GWSReconnLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool W2GWSReconnLogin::IsInitialized() const {
  return true;
}

void W2GWSReconnLogin::Swap(W2GWSReconnLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void W2GWSReconnLogin::InternalSwap(W2GWSReconnLogin* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  errmsg_.Swap(&other->errmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(guid_, other->guid_);
  swap(error_, other->error_);
}

::google::protobuf::Metadata W2GWSReconnLogin::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login2game_2eproto);
  return ::file_level_metadata_login2game_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GWS2GDisconnect::InitAsDefaultInstance() {
}
class GWS2GDisconnect::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GWS2GDisconnect::kGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GWS2GDisconnect::GWS2GDisconnect()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.GWS2GDisconnect)
}
GWS2GDisconnect::GWS2GDisconnect(const GWS2GDisconnect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guid_ = from.guid_;
  // @@protoc_insertion_point(copy_constructor:protos.GWS2GDisconnect)
}

void GWS2GDisconnect::SharedCtor() {
  guid_ = PROTOBUF_LONGLONG(0);
}

GWS2GDisconnect::~GWS2GDisconnect() {
  // @@protoc_insertion_point(destructor:protos.GWS2GDisconnect)
  SharedDtor();
}

void GWS2GDisconnect::SharedDtor() {
}

void GWS2GDisconnect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GWS2GDisconnect& GWS2GDisconnect::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GWS2GDisconnect_login2game_2eproto.base);
  return *internal_default_instance();
}


void GWS2GDisconnect::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.GWS2GDisconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guid_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GWS2GDisconnect::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GWS2GDisconnect*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 guid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_guid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GWS2GDisconnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.GWS2GDisconnect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.GWS2GDisconnect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.GWS2GDisconnect)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GWS2GDisconnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.GWS2GDisconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.GWS2GDisconnect)
}

::google::protobuf::uint8* GWS2GDisconnect::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.GWS2GDisconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.GWS2GDisconnect)
  return target;
}

size_t GWS2GDisconnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.GWS2GDisconnect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GWS2GDisconnect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.GWS2GDisconnect)
  GOOGLE_DCHECK_NE(&from, this);
  const GWS2GDisconnect* source =
      ::google::protobuf::DynamicCastToGenerated<GWS2GDisconnect>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.GWS2GDisconnect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.GWS2GDisconnect)
    MergeFrom(*source);
  }
}

void GWS2GDisconnect::MergeFrom(const GWS2GDisconnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.GWS2GDisconnect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guid() != 0) {
    set_guid(from.guid());
  }
}

void GWS2GDisconnect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.GWS2GDisconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GWS2GDisconnect::CopyFrom(const GWS2GDisconnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.GWS2GDisconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GWS2GDisconnect::IsInitialized() const {
  return true;
}

void GWS2GDisconnect::Swap(GWS2GDisconnect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GWS2GDisconnect::InternalSwap(GWS2GDisconnect* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(guid_, other->guid_);
}

::google::protobuf::Metadata GWS2GDisconnect::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login2game_2eproto);
  return ::file_level_metadata_login2game_2eproto[kIndexInFileMessages];
}


// ===================================================================

void G2GWSDisconnect::InitAsDefaultInstance() {
}
class G2GWSDisconnect::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int G2GWSDisconnect::kErrorFieldNumber;
const int G2GWSDisconnect::kErrmsgFieldNumber;
const int G2GWSDisconnect::kGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

G2GWSDisconnect::G2GWSDisconnect()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.G2GWSDisconnect)
}
G2GWSDisconnect::G2GWSDisconnect(const G2GWSDisconnect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errmsg().size() > 0) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&error_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(error_));
  // @@protoc_insertion_point(copy_constructor:protos.G2GWSDisconnect)
}

void G2GWSDisconnect::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_G2GWSDisconnect_login2game_2eproto.base);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(error_));
}

G2GWSDisconnect::~G2GWSDisconnect() {
  // @@protoc_insertion_point(destructor:protos.G2GWSDisconnect)
  SharedDtor();
}

void G2GWSDisconnect::SharedDtor() {
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void G2GWSDisconnect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const G2GWSDisconnect& G2GWSDisconnect::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_G2GWSDisconnect_login2game_2eproto.base);
  return *internal_default_instance();
}


void G2GWSDisconnect::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.G2GWSDisconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(error_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* G2GWSDisconnect::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<G2GWSDisconnect*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 error = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_error(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string errmsg = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.G2GWSDisconnect.errmsg");
        object = msg->mutable_errmsg();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int64 guid = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_guid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool G2GWSDisconnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.G2GWSDisconnect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errmsg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), static_cast<int>(this->errmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.G2GWSDisconnect.errmsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 guid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.G2GWSDisconnect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.G2GWSDisconnect)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void G2GWSDisconnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.G2GWSDisconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.G2GWSDisconnect.errmsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errmsg(), output);
  }

  // int64 guid = 3;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.G2GWSDisconnect)
}

::google::protobuf::uint8* G2GWSDisconnect::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.G2GWSDisconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.G2GWSDisconnect.errmsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errmsg(), target);
  }

  // int64 guid = 3;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.G2GWSDisconnect)
  return target;
}

size_t G2GWSDisconnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.G2GWSDisconnect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // int64 guid = 3;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->guid());
  }

  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void G2GWSDisconnect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.G2GWSDisconnect)
  GOOGLE_DCHECK_NE(&from, this);
  const G2GWSDisconnect* source =
      ::google::protobuf::DynamicCastToGenerated<G2GWSDisconnect>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.G2GWSDisconnect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.G2GWSDisconnect)
    MergeFrom(*source);
  }
}

void G2GWSDisconnect::MergeFrom(const G2GWSDisconnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.G2GWSDisconnect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void G2GWSDisconnect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.G2GWSDisconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void G2GWSDisconnect::CopyFrom(const G2GWSDisconnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.G2GWSDisconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool G2GWSDisconnect::IsInitialized() const {
  return true;
}

void G2GWSDisconnect::Swap(G2GWSDisconnect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void G2GWSDisconnect::InternalSwap(G2GWSDisconnect* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  errmsg_.Swap(&other->errmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(guid_, other->guid_);
  swap(error_, other->error_);
}

::google::protobuf::Metadata G2GWSDisconnect::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login2game_2eproto);
  return ::file_level_metadata_login2game_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GWS2WDisconnect::InitAsDefaultInstance() {
}
class GWS2WDisconnect::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GWS2WDisconnect::kGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GWS2WDisconnect::GWS2WDisconnect()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.GWS2WDisconnect)
}
GWS2WDisconnect::GWS2WDisconnect(const GWS2WDisconnect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guid_ = from.guid_;
  // @@protoc_insertion_point(copy_constructor:protos.GWS2WDisconnect)
}

void GWS2WDisconnect::SharedCtor() {
  guid_ = PROTOBUF_LONGLONG(0);
}

GWS2WDisconnect::~GWS2WDisconnect() {
  // @@protoc_insertion_point(destructor:protos.GWS2WDisconnect)
  SharedDtor();
}

void GWS2WDisconnect::SharedDtor() {
}

void GWS2WDisconnect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GWS2WDisconnect& GWS2WDisconnect::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GWS2WDisconnect_login2game_2eproto.base);
  return *internal_default_instance();
}


void GWS2WDisconnect::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.GWS2WDisconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guid_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GWS2WDisconnect::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GWS2WDisconnect*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 guid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_guid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GWS2WDisconnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.GWS2WDisconnect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.GWS2WDisconnect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.GWS2WDisconnect)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GWS2WDisconnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.GWS2WDisconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.GWS2WDisconnect)
}

::google::protobuf::uint8* GWS2WDisconnect::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.GWS2WDisconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.GWS2WDisconnect)
  return target;
}

size_t GWS2WDisconnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.GWS2WDisconnect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GWS2WDisconnect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.GWS2WDisconnect)
  GOOGLE_DCHECK_NE(&from, this);
  const GWS2WDisconnect* source =
      ::google::protobuf::DynamicCastToGenerated<GWS2WDisconnect>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.GWS2WDisconnect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.GWS2WDisconnect)
    MergeFrom(*source);
  }
}

void GWS2WDisconnect::MergeFrom(const GWS2WDisconnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.GWS2WDisconnect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guid() != 0) {
    set_guid(from.guid());
  }
}

void GWS2WDisconnect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.GWS2WDisconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GWS2WDisconnect::CopyFrom(const GWS2WDisconnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.GWS2WDisconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GWS2WDisconnect::IsInitialized() const {
  return true;
}

void GWS2WDisconnect::Swap(GWS2WDisconnect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GWS2WDisconnect::InternalSwap(GWS2WDisconnect* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(guid_, other->guid_);
}

::google::protobuf::Metadata GWS2WDisconnect::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login2game_2eproto);
  return ::file_level_metadata_login2game_2eproto[kIndexInFileMessages];
}


// ===================================================================

void W2GWSDisconnect::InitAsDefaultInstance() {
}
class W2GWSDisconnect::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int W2GWSDisconnect::kErrorFieldNumber;
const int W2GWSDisconnect::kErrmsgFieldNumber;
const int W2GWSDisconnect::kGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

W2GWSDisconnect::W2GWSDisconnect()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.W2GWSDisconnect)
}
W2GWSDisconnect::W2GWSDisconnect(const W2GWSDisconnect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errmsg().size() > 0) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&error_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(error_));
  // @@protoc_insertion_point(copy_constructor:protos.W2GWSDisconnect)
}

void W2GWSDisconnect::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_W2GWSDisconnect_login2game_2eproto.base);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(error_));
}

W2GWSDisconnect::~W2GWSDisconnect() {
  // @@protoc_insertion_point(destructor:protos.W2GWSDisconnect)
  SharedDtor();
}

void W2GWSDisconnect::SharedDtor() {
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void W2GWSDisconnect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const W2GWSDisconnect& W2GWSDisconnect::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_W2GWSDisconnect_login2game_2eproto.base);
  return *internal_default_instance();
}


void W2GWSDisconnect::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.W2GWSDisconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(error_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* W2GWSDisconnect::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<W2GWSDisconnect*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 error = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_error(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string errmsg = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.W2GWSDisconnect.errmsg");
        object = msg->mutable_errmsg();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int64 guid = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_guid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool W2GWSDisconnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.W2GWSDisconnect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errmsg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), static_cast<int>(this->errmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.W2GWSDisconnect.errmsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 guid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.W2GWSDisconnect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.W2GWSDisconnect)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void W2GWSDisconnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.W2GWSDisconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.W2GWSDisconnect.errmsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errmsg(), output);
  }

  // int64 guid = 3;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.W2GWSDisconnect)
}

::google::protobuf::uint8* W2GWSDisconnect::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.W2GWSDisconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.W2GWSDisconnect.errmsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errmsg(), target);
  }

  // int64 guid = 3;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.W2GWSDisconnect)
  return target;
}

size_t W2GWSDisconnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.W2GWSDisconnect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // int64 guid = 3;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->guid());
  }

  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void W2GWSDisconnect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.W2GWSDisconnect)
  GOOGLE_DCHECK_NE(&from, this);
  const W2GWSDisconnect* source =
      ::google::protobuf::DynamicCastToGenerated<W2GWSDisconnect>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.W2GWSDisconnect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.W2GWSDisconnect)
    MergeFrom(*source);
  }
}

void W2GWSDisconnect::MergeFrom(const W2GWSDisconnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.W2GWSDisconnect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void W2GWSDisconnect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.W2GWSDisconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void W2GWSDisconnect::CopyFrom(const W2GWSDisconnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.W2GWSDisconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool W2GWSDisconnect::IsInitialized() const {
  return true;
}

void W2GWSDisconnect::Swap(W2GWSDisconnect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void W2GWSDisconnect::InternalSwap(W2GWSDisconnect* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  errmsg_.Swap(&other->errmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(guid_, other->guid_);
  swap(error_, other->error_);
}

::google::protobuf::Metadata W2GWSDisconnect::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login2game_2eproto);
  return ::file_level_metadata_login2game_2eproto[kIndexInFileMessages];
}


// ===================================================================

void G2GWSKickPlayer::InitAsDefaultInstance() {
}
class G2GWSKickPlayer::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int G2GWSKickPlayer::kErrorFieldNumber;
const int G2GWSKickPlayer::kErrmsgFieldNumber;
const int G2GWSKickPlayer::kGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

G2GWSKickPlayer::G2GWSKickPlayer()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.G2GWSKickPlayer)
}
G2GWSKickPlayer::G2GWSKickPlayer(const G2GWSKickPlayer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errmsg().size() > 0) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&error_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(error_));
  // @@protoc_insertion_point(copy_constructor:protos.G2GWSKickPlayer)
}

void G2GWSKickPlayer::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_G2GWSKickPlayer_login2game_2eproto.base);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(error_));
}

G2GWSKickPlayer::~G2GWSKickPlayer() {
  // @@protoc_insertion_point(destructor:protos.G2GWSKickPlayer)
  SharedDtor();
}

void G2GWSKickPlayer::SharedDtor() {
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void G2GWSKickPlayer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const G2GWSKickPlayer& G2GWSKickPlayer::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_G2GWSKickPlayer_login2game_2eproto.base);
  return *internal_default_instance();
}


void G2GWSKickPlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.G2GWSKickPlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(error_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* G2GWSKickPlayer::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<G2GWSKickPlayer*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 error = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_error(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string errmsg = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.G2GWSKickPlayer.errmsg");
        object = msg->mutable_errmsg();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int64 guid = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_guid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool G2GWSKickPlayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.G2GWSKickPlayer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errmsg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), static_cast<int>(this->errmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.G2GWSKickPlayer.errmsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 guid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.G2GWSKickPlayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.G2GWSKickPlayer)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void G2GWSKickPlayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.G2GWSKickPlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.G2GWSKickPlayer.errmsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errmsg(), output);
  }

  // int64 guid = 3;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.G2GWSKickPlayer)
}

::google::protobuf::uint8* G2GWSKickPlayer::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.G2GWSKickPlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.G2GWSKickPlayer.errmsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errmsg(), target);
  }

  // int64 guid = 3;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.G2GWSKickPlayer)
  return target;
}

size_t G2GWSKickPlayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.G2GWSKickPlayer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // int64 guid = 3;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->guid());
  }

  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void G2GWSKickPlayer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.G2GWSKickPlayer)
  GOOGLE_DCHECK_NE(&from, this);
  const G2GWSKickPlayer* source =
      ::google::protobuf::DynamicCastToGenerated<G2GWSKickPlayer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.G2GWSKickPlayer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.G2GWSKickPlayer)
    MergeFrom(*source);
  }
}

void G2GWSKickPlayer::MergeFrom(const G2GWSKickPlayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.G2GWSKickPlayer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void G2GWSKickPlayer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.G2GWSKickPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void G2GWSKickPlayer::CopyFrom(const G2GWSKickPlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.G2GWSKickPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool G2GWSKickPlayer::IsInitialized() const {
  return true;
}

void G2GWSKickPlayer::Swap(G2GWSKickPlayer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void G2GWSKickPlayer::InternalSwap(G2GWSKickPlayer* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  errmsg_.Swap(&other->errmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(guid_, other->guid_);
  swap(error_, other->error_);
}

::google::protobuf::Metadata G2GWSKickPlayer::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login2game_2eproto);
  return ::file_level_metadata_login2game_2eproto[kIndexInFileMessages];
}


// ===================================================================

void W2GWSKickPlayer::InitAsDefaultInstance() {
}
class W2GWSKickPlayer::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int W2GWSKickPlayer::kErrorFieldNumber;
const int W2GWSKickPlayer::kErrmsgFieldNumber;
const int W2GWSKickPlayer::kGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

W2GWSKickPlayer::W2GWSKickPlayer()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.W2GWSKickPlayer)
}
W2GWSKickPlayer::W2GWSKickPlayer(const W2GWSKickPlayer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errmsg().size() > 0) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&error_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(error_));
  // @@protoc_insertion_point(copy_constructor:protos.W2GWSKickPlayer)
}

void W2GWSKickPlayer::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_W2GWSKickPlayer_login2game_2eproto.base);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(error_));
}

W2GWSKickPlayer::~W2GWSKickPlayer() {
  // @@protoc_insertion_point(destructor:protos.W2GWSKickPlayer)
  SharedDtor();
}

void W2GWSKickPlayer::SharedDtor() {
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void W2GWSKickPlayer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const W2GWSKickPlayer& W2GWSKickPlayer::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_W2GWSKickPlayer_login2game_2eproto.base);
  return *internal_default_instance();
}


void W2GWSKickPlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.W2GWSKickPlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(error_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* W2GWSKickPlayer::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<W2GWSKickPlayer*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 error = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_error(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string errmsg = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.W2GWSKickPlayer.errmsg");
        object = msg->mutable_errmsg();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int64 guid = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_guid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool W2GWSKickPlayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.W2GWSKickPlayer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errmsg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), static_cast<int>(this->errmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.W2GWSKickPlayer.errmsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 guid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.W2GWSKickPlayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.W2GWSKickPlayer)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void W2GWSKickPlayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.W2GWSKickPlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.W2GWSKickPlayer.errmsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errmsg(), output);
  }

  // int64 guid = 3;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.W2GWSKickPlayer)
}

::google::protobuf::uint8* W2GWSKickPlayer::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.W2GWSKickPlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.W2GWSKickPlayer.errmsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errmsg(), target);
  }

  // int64 guid = 3;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.W2GWSKickPlayer)
  return target;
}

size_t W2GWSKickPlayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.W2GWSKickPlayer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // int64 guid = 3;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->guid());
  }

  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void W2GWSKickPlayer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.W2GWSKickPlayer)
  GOOGLE_DCHECK_NE(&from, this);
  const W2GWSKickPlayer* source =
      ::google::protobuf::DynamicCastToGenerated<W2GWSKickPlayer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.W2GWSKickPlayer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.W2GWSKickPlayer)
    MergeFrom(*source);
  }
}

void W2GWSKickPlayer::MergeFrom(const W2GWSKickPlayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.W2GWSKickPlayer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void W2GWSKickPlayer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.W2GWSKickPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void W2GWSKickPlayer::CopyFrom(const W2GWSKickPlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.W2GWSKickPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool W2GWSKickPlayer::IsInitialized() const {
  return true;
}

void W2GWSKickPlayer::Swap(W2GWSKickPlayer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void W2GWSKickPlayer::InternalSwap(W2GWSKickPlayer* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  errmsg_.Swap(&other->errmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(guid_, other->guid_);
  swap(error_, other->error_);
}

::google::protobuf::Metadata W2GWSKickPlayer::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login2game_2eproto);
  return ::file_level_metadata_login2game_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::protos::GameLoginParam* Arena::CreateMaybeMessage< ::protos::GameLoginParam >(Arena* arena) {
  return Arena::CreateInternal< ::protos::GameLoginParam >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::GameLoginRoute* Arena::CreateMaybeMessage< ::protos::GameLoginRoute >(Arena* arena) {
  return Arena::CreateInternal< ::protos::GameLoginRoute >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::CGLogin* Arena::CreateMaybeMessage< ::protos::CGLogin >(Arena* arena) {
  return Arena::CreateInternal< ::protos::CGLogin >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::GCLogin* Arena::CreateMaybeMessage< ::protos::GCLogin >(Arena* arena) {
  return Arena::CreateInternal< ::protos::GCLogin >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::GWLogin* Arena::CreateMaybeMessage< ::protos::GWLogin >(Arena* arena) {
  return Arena::CreateInternal< ::protos::GWLogin >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::WGLogin* Arena::CreateMaybeMessage< ::protos::WGLogin >(Arena* arena) {
  return Arena::CreateInternal< ::protos::WGLogin >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::CGReconnLogin* Arena::CreateMaybeMessage< ::protos::CGReconnLogin >(Arena* arena) {
  return Arena::CreateInternal< ::protos::CGReconnLogin >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::GCReconnLogin* Arena::CreateMaybeMessage< ::protos::GCReconnLogin >(Arena* arena) {
  return Arena::CreateInternal< ::protos::GCReconnLogin >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::GWS2WReconnLogin* Arena::CreateMaybeMessage< ::protos::GWS2WReconnLogin >(Arena* arena) {
  return Arena::CreateInternal< ::protos::GWS2WReconnLogin >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::W2GWSReconnLogin* Arena::CreateMaybeMessage< ::protos::W2GWSReconnLogin >(Arena* arena) {
  return Arena::CreateInternal< ::protos::W2GWSReconnLogin >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::GWS2GDisconnect* Arena::CreateMaybeMessage< ::protos::GWS2GDisconnect >(Arena* arena) {
  return Arena::CreateInternal< ::protos::GWS2GDisconnect >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::G2GWSDisconnect* Arena::CreateMaybeMessage< ::protos::G2GWSDisconnect >(Arena* arena) {
  return Arena::CreateInternal< ::protos::G2GWSDisconnect >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::GWS2WDisconnect* Arena::CreateMaybeMessage< ::protos::GWS2WDisconnect >(Arena* arena) {
  return Arena::CreateInternal< ::protos::GWS2WDisconnect >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::W2GWSDisconnect* Arena::CreateMaybeMessage< ::protos::W2GWSDisconnect >(Arena* arena) {
  return Arena::CreateInternal< ::protos::W2GWSDisconnect >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::G2GWSKickPlayer* Arena::CreateMaybeMessage< ::protos::G2GWSKickPlayer >(Arena* arena) {
  return Arena::CreateInternal< ::protos::G2GWSKickPlayer >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::W2GWSKickPlayer* Arena::CreateMaybeMessage< ::protos::W2GWSKickPlayer >(Arena* arena) {
  return Arena::CreateInternal< ::protos::W2GWSKickPlayer >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
