// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: meta.proto

#include "meta.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_meta_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_G2GWSMeta_meta_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_meta_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GWMeta_meta_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_meta_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GWS2GMeta_meta_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_meta_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GWS2WMeta_meta_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_meta_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_W2GWSMeta_meta_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_meta_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_WGMeta_meta_2eproto;
namespace protos {
class GWS2WMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GWS2WMeta> _instance;
} _GWS2WMeta_default_instance_;
class W2GWSMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<W2GWSMeta> _instance;
} _W2GWSMeta_default_instance_;
class GWS2WRpcMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GWS2WRpcMeta> _instance;
} _GWS2WRpcMeta_default_instance_;
class GWS2GMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GWS2GMeta> _instance;
} _GWS2GMeta_default_instance_;
class G2GWSMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<G2GWSMeta> _instance;
} _G2GWSMeta_default_instance_;
class GWS2GRpcMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GWS2GRpcMeta> _instance;
} _GWS2GRpcMeta_default_instance_;
class GWMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GWMeta> _instance;
} _GWMeta_default_instance_;
class WGMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WGMeta> _instance;
} _WGMeta_default_instance_;
class GWRpcMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GWRpcMeta> _instance;
} _GWRpcMeta_default_instance_;
}  // namespace protos
static void InitDefaultsGWS2WMeta_meta_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_GWS2WMeta_default_instance_;
    new (ptr) ::protos::GWS2WMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::GWS2WMeta::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GWS2WMeta_meta_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGWS2WMeta_meta_2eproto}, {}};

static void InitDefaultsW2GWSMeta_meta_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_W2GWSMeta_default_instance_;
    new (ptr) ::protos::W2GWSMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::W2GWSMeta::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_W2GWSMeta_meta_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsW2GWSMeta_meta_2eproto}, {}};

static void InitDefaultsGWS2WRpcMeta_meta_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_GWS2WRpcMeta_default_instance_;
    new (ptr) ::protos::GWS2WRpcMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::GWS2WRpcMeta::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_GWS2WRpcMeta_meta_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsGWS2WRpcMeta_meta_2eproto}, {
      &scc_info_GWS2WMeta_meta_2eproto.base,
      &scc_info_W2GWSMeta_meta_2eproto.base,}};

static void InitDefaultsGWS2GMeta_meta_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_GWS2GMeta_default_instance_;
    new (ptr) ::protos::GWS2GMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::GWS2GMeta::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GWS2GMeta_meta_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGWS2GMeta_meta_2eproto}, {}};

static void InitDefaultsG2GWSMeta_meta_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_G2GWSMeta_default_instance_;
    new (ptr) ::protos::G2GWSMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::G2GWSMeta::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_G2GWSMeta_meta_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsG2GWSMeta_meta_2eproto}, {}};

static void InitDefaultsGWS2GRpcMeta_meta_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_GWS2GRpcMeta_default_instance_;
    new (ptr) ::protos::GWS2GRpcMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::GWS2GRpcMeta::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_GWS2GRpcMeta_meta_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsGWS2GRpcMeta_meta_2eproto}, {
      &scc_info_GWS2GMeta_meta_2eproto.base,
      &scc_info_G2GWSMeta_meta_2eproto.base,}};

static void InitDefaultsGWMeta_meta_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_GWMeta_default_instance_;
    new (ptr) ::protos::GWMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::GWMeta::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GWMeta_meta_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGWMeta_meta_2eproto}, {}};

static void InitDefaultsWGMeta_meta_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_WGMeta_default_instance_;
    new (ptr) ::protos::WGMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::WGMeta::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WGMeta_meta_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWGMeta_meta_2eproto}, {}};

static void InitDefaultsGWRpcMeta_meta_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_GWRpcMeta_default_instance_;
    new (ptr) ::protos::GWRpcMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::GWRpcMeta::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_GWRpcMeta_meta_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsGWRpcMeta_meta_2eproto}, {
      &scc_info_GWMeta_meta_2eproto.base,
      &scc_info_WGMeta_meta_2eproto.base,}};

void InitDefaults_meta_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_GWS2WMeta_meta_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_W2GWSMeta_meta_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GWS2WRpcMeta_meta_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GWS2GMeta_meta_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_G2GWSMeta_meta_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GWS2GRpcMeta_meta_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GWMeta_meta_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WGMeta_meta_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GWRpcMeta_meta_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_meta_2eproto[9];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_meta_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_meta_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_meta_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::GWS2WMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::GWS2WMeta, guid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::W2GWSMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::W2GWSMeta, guid_),
  PROTOBUF_FIELD_OFFSET(::protos::W2GWSMeta, guids_),
  PROTOBUF_FIELD_OFFSET(::protos::W2GWSMeta, group_id_),
  PROTOBUF_FIELD_OFFSET(::protos::W2GWSMeta, group_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::GWS2WRpcMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::GWS2WRpcMeta, req_),
  PROTOBUF_FIELD_OFFSET(::protos::GWS2WRpcMeta, resp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::GWS2GMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::GWS2GMeta, guid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::G2GWSMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::G2GWSMeta, guid_),
  PROTOBUF_FIELD_OFFSET(::protos::G2GWSMeta, guids_),
  PROTOBUF_FIELD_OFFSET(::protos::G2GWSMeta, group_id_),
  PROTOBUF_FIELD_OFFSET(::protos::G2GWSMeta, group_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::GWS2GRpcMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::GWS2GRpcMeta, req_),
  PROTOBUF_FIELD_OFFSET(::protos::GWS2GRpcMeta, resp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::GWMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::GWMeta, guid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::WGMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::WGMeta, guid_),
  PROTOBUF_FIELD_OFFSET(::protos::WGMeta, guids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::GWRpcMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::GWRpcMeta, req_),
  PROTOBUF_FIELD_OFFSET(::protos::GWRpcMeta, resp_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::protos::GWS2WMeta)},
  { 6, -1, sizeof(::protos::W2GWSMeta)},
  { 15, -1, sizeof(::protos::GWS2WRpcMeta)},
  { 22, -1, sizeof(::protos::GWS2GMeta)},
  { 28, -1, sizeof(::protos::G2GWSMeta)},
  { 37, -1, sizeof(::protos::GWS2GRpcMeta)},
  { 44, -1, sizeof(::protos::GWMeta)},
  { 50, -1, sizeof(::protos::WGMeta)},
  { 57, -1, sizeof(::protos::GWRpcMeta)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_GWS2WMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_W2GWSMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_GWS2WRpcMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_GWS2GMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_G2GWSMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_GWS2GRpcMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_GWMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_WGMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_GWRpcMeta_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_meta_2eproto = {
  {}, AddDescriptors_meta_2eproto, "meta.proto", schemas,
  file_default_instances, TableStruct_meta_2eproto::offsets,
  file_level_metadata_meta_2eproto, 9, file_level_enum_descriptors_meta_2eproto, file_level_service_descriptors_meta_2eproto,
};

const char descriptor_table_protodef_meta_2eproto[] =
  "\n\nmeta.proto\022\006protos\"\031\n\tGWS2WMeta\022\014\n\004gui"
  "d\030\001 \001(\003\"M\n\tW2GWSMeta\022\014\n\004guid\030\001 \001(\003\022\r\n\005gu"
  "ids\030\002 \003(\003\022\020\n\010group_id\030\003 \001(\003\022\021\n\tgroup_ids"
  "\030\004 \003(\003\"O\n\014GWS2WRpcMeta\022\036\n\003req\030\001 \001(\0132\021.pr"
  "otos.GWS2WMeta\022\037\n\004resp\030\002 \001(\0132\021.protos.W2"
  "GWSMeta\"\031\n\tGWS2GMeta\022\014\n\004guid\030\001 \001(\003\"M\n\tG2"
  "GWSMeta\022\014\n\004guid\030\001 \001(\003\022\r\n\005guids\030\002 \003(\003\022\020\n\010"
  "group_id\030\003 \001(\003\022\021\n\tgroup_ids\030\004 \003(\003\"O\n\014GWS"
  "2GRpcMeta\022\036\n\003req\030\001 \001(\0132\021.protos.GWS2GMet"
  "a\022\037\n\004resp\030\002 \001(\0132\021.protos.G2GWSMeta\"\026\n\006GW"
  "Meta\022\014\n\004guid\030\001 \001(\003\"%\n\006WGMeta\022\014\n\004guid\030\001 \001"
  "(\003\022\r\n\005guids\030\002 \003(\003\"F\n\tGWRpcMeta\022\033\n\003req\030\001 "
  "\001(\0132\016.protos.GWMeta\022\034\n\004resp\030\002 \001(\0132\016.prot"
  "os.WGMetab\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_meta_2eproto = {
  false, InitDefaults_meta_2eproto, 
  descriptor_table_protodef_meta_2eproto,
  "meta.proto", &assign_descriptors_table_meta_2eproto, 537,
};

void AddDescriptors_meta_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_meta_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_meta_2eproto = []() { AddDescriptors_meta_2eproto(); return true; }();
namespace protos {

// ===================================================================

void GWS2WMeta::InitAsDefaultInstance() {
}
class GWS2WMeta::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GWS2WMeta::kGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GWS2WMeta::GWS2WMeta()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.GWS2WMeta)
}
GWS2WMeta::GWS2WMeta(const GWS2WMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guid_ = from.guid_;
  // @@protoc_insertion_point(copy_constructor:protos.GWS2WMeta)
}

void GWS2WMeta::SharedCtor() {
  guid_ = PROTOBUF_LONGLONG(0);
}

GWS2WMeta::~GWS2WMeta() {
  // @@protoc_insertion_point(destructor:protos.GWS2WMeta)
  SharedDtor();
}

void GWS2WMeta::SharedDtor() {
}

void GWS2WMeta::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GWS2WMeta& GWS2WMeta::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GWS2WMeta_meta_2eproto.base);
  return *internal_default_instance();
}


void GWS2WMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.GWS2WMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guid_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GWS2WMeta::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GWS2WMeta*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 guid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_guid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GWS2WMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.GWS2WMeta)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.GWS2WMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.GWS2WMeta)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GWS2WMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.GWS2WMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.GWS2WMeta)
}

::google::protobuf::uint8* GWS2WMeta::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.GWS2WMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.GWS2WMeta)
  return target;
}

size_t GWS2WMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.GWS2WMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GWS2WMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.GWS2WMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const GWS2WMeta* source =
      ::google::protobuf::DynamicCastToGenerated<GWS2WMeta>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.GWS2WMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.GWS2WMeta)
    MergeFrom(*source);
  }
}

void GWS2WMeta::MergeFrom(const GWS2WMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.GWS2WMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guid() != 0) {
    set_guid(from.guid());
  }
}

void GWS2WMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.GWS2WMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GWS2WMeta::CopyFrom(const GWS2WMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.GWS2WMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GWS2WMeta::IsInitialized() const {
  return true;
}

void GWS2WMeta::Swap(GWS2WMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GWS2WMeta::InternalSwap(GWS2WMeta* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(guid_, other->guid_);
}

::google::protobuf::Metadata GWS2WMeta::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_meta_2eproto);
  return ::file_level_metadata_meta_2eproto[kIndexInFileMessages];
}


// ===================================================================

void W2GWSMeta::InitAsDefaultInstance() {
}
class W2GWSMeta::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int W2GWSMeta::kGuidFieldNumber;
const int W2GWSMeta::kGuidsFieldNumber;
const int W2GWSMeta::kGroupIdFieldNumber;
const int W2GWSMeta::kGroupIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

W2GWSMeta::W2GWSMeta()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.W2GWSMeta)
}
W2GWSMeta::W2GWSMeta(const W2GWSMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      guids_(from.guids_),
      group_ids_(from.group_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&group_id_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(group_id_));
  // @@protoc_insertion_point(copy_constructor:protos.W2GWSMeta)
}

void W2GWSMeta::SharedCtor() {
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_id_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(group_id_));
}

W2GWSMeta::~W2GWSMeta() {
  // @@protoc_insertion_point(destructor:protos.W2GWSMeta)
  SharedDtor();
}

void W2GWSMeta::SharedDtor() {
}

void W2GWSMeta::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const W2GWSMeta& W2GWSMeta::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_W2GWSMeta_meta_2eproto.base);
  return *internal_default_instance();
}


void W2GWSMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.W2GWSMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guids_.Clear();
  group_ids_.Clear();
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_id_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(group_id_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* W2GWSMeta::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<W2GWSMeta*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 guid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_guid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated int64 guids = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 18) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedInt64Parser;
          object = msg->mutable_guids();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        do {
          msg->add_guids(::google::protobuf::internal::ReadVarint(&ptr));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
        break;
      }
      // int64 group_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_group_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated int64 group_ids = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) == 34) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedInt64Parser;
          object = msg->mutable_group_ids();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        do {
          msg->add_group_ids(::google::protobuf::internal::ReadVarint(&ptr));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 32 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool W2GWSMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.W2GWSMeta)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 guids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_guids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_guids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 group_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 group_ids = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_group_ids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 34u, input, this->mutable_group_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.W2GWSMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.W2GWSMeta)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void W2GWSMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.W2GWSMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->guid(), output);
  }

  // repeated int64 guids = 2;
  if (this->guids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_guids_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->guids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->guids(i), output);
  }

  // int64 group_id = 3;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->group_id(), output);
  }

  // repeated int64 group_ids = 4;
  if (this->group_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_group_ids_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->group_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->group_ids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.W2GWSMeta)
}

::google::protobuf::uint8* W2GWSMeta::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.W2GWSMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->guid(), target);
  }

  // repeated int64 guids = 2;
  if (this->guids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _guids_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->guids_, target);
  }

  // int64 group_id = 3;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->group_id(), target);
  }

  // repeated int64 group_ids = 4;
  if (this->group_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _group_ids_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->group_ids_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.W2GWSMeta)
  return target;
}

size_t W2GWSMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.W2GWSMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 guids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->guids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _guids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int64 group_ids = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->group_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _group_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // int64 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->guid());
  }

  // int64 group_id = 3;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->group_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void W2GWSMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.W2GWSMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const W2GWSMeta* source =
      ::google::protobuf::DynamicCastToGenerated<W2GWSMeta>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.W2GWSMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.W2GWSMeta)
    MergeFrom(*source);
  }
}

void W2GWSMeta::MergeFrom(const W2GWSMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.W2GWSMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  guids_.MergeFrom(from.guids_);
  group_ids_.MergeFrom(from.group_ids_);
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
}

void W2GWSMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.W2GWSMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void W2GWSMeta::CopyFrom(const W2GWSMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.W2GWSMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool W2GWSMeta::IsInitialized() const {
  return true;
}

void W2GWSMeta::Swap(W2GWSMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void W2GWSMeta::InternalSwap(W2GWSMeta* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  guids_.InternalSwap(&other->guids_);
  group_ids_.InternalSwap(&other->group_ids_);
  swap(guid_, other->guid_);
  swap(group_id_, other->group_id_);
}

::google::protobuf::Metadata W2GWSMeta::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_meta_2eproto);
  return ::file_level_metadata_meta_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GWS2WRpcMeta::InitAsDefaultInstance() {
  ::protos::_GWS2WRpcMeta_default_instance_._instance.get_mutable()->req_ = const_cast< ::protos::GWS2WMeta*>(
      ::protos::GWS2WMeta::internal_default_instance());
  ::protos::_GWS2WRpcMeta_default_instance_._instance.get_mutable()->resp_ = const_cast< ::protos::W2GWSMeta*>(
      ::protos::W2GWSMeta::internal_default_instance());
}
class GWS2WRpcMeta::HasBitSetters {
 public:
  static const ::protos::GWS2WMeta& req(const GWS2WRpcMeta* msg);
  static const ::protos::W2GWSMeta& resp(const GWS2WRpcMeta* msg);
};

const ::protos::GWS2WMeta&
GWS2WRpcMeta::HasBitSetters::req(const GWS2WRpcMeta* msg) {
  return *msg->req_;
}
const ::protos::W2GWSMeta&
GWS2WRpcMeta::HasBitSetters::resp(const GWS2WRpcMeta* msg) {
  return *msg->resp_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GWS2WRpcMeta::kReqFieldNumber;
const int GWS2WRpcMeta::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GWS2WRpcMeta::GWS2WRpcMeta()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.GWS2WRpcMeta)
}
GWS2WRpcMeta::GWS2WRpcMeta(const GWS2WRpcMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req()) {
    req_ = new ::protos::GWS2WMeta(*from.req_);
  } else {
    req_ = nullptr;
  }
  if (from.has_resp()) {
    resp_ = new ::protos::W2GWSMeta(*from.resp_);
  } else {
    resp_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protos.GWS2WRpcMeta)
}

void GWS2WRpcMeta::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GWS2WRpcMeta_meta_2eproto.base);
  ::memset(&req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resp_) -
      reinterpret_cast<char*>(&req_)) + sizeof(resp_));
}

GWS2WRpcMeta::~GWS2WRpcMeta() {
  // @@protoc_insertion_point(destructor:protos.GWS2WRpcMeta)
  SharedDtor();
}

void GWS2WRpcMeta::SharedDtor() {
  if (this != internal_default_instance()) delete req_;
  if (this != internal_default_instance()) delete resp_;
}

void GWS2WRpcMeta::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GWS2WRpcMeta& GWS2WRpcMeta::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GWS2WRpcMeta_meta_2eproto.base);
  return *internal_default_instance();
}


void GWS2WRpcMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.GWS2WRpcMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && req_ != nullptr) {
    delete req_;
  }
  req_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && resp_ != nullptr) {
    delete resp_;
  }
  resp_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GWS2WRpcMeta::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GWS2WRpcMeta*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .protos.GWS2WMeta req = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::protos::GWS2WMeta::_InternalParse;
        object = msg->mutable_req();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .protos.W2GWSMeta resp = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::protos::W2GWSMeta::_InternalParse;
        object = msg->mutable_resp();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GWS2WRpcMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.GWS2WRpcMeta)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .protos.GWS2WMeta req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protos.W2GWSMeta resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.GWS2WRpcMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.GWS2WRpcMeta)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GWS2WRpcMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.GWS2WRpcMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protos.GWS2WMeta req = 1;
  if (this->has_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::req(this), output);
  }

  // .protos.W2GWSMeta resp = 2;
  if (this->has_resp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::resp(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.GWS2WRpcMeta)
}

::google::protobuf::uint8* GWS2WRpcMeta::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.GWS2WRpcMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protos.GWS2WMeta req = 1;
  if (this->has_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::req(this), target);
  }

  // .protos.W2GWSMeta resp = 2;
  if (this->has_resp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::resp(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.GWS2WRpcMeta)
  return target;
}

size_t GWS2WRpcMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.GWS2WRpcMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protos.GWS2WMeta req = 1;
  if (this->has_req()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *req_);
  }

  // .protos.W2GWSMeta resp = 2;
  if (this->has_resp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *resp_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GWS2WRpcMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.GWS2WRpcMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const GWS2WRpcMeta* source =
      ::google::protobuf::DynamicCastToGenerated<GWS2WRpcMeta>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.GWS2WRpcMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.GWS2WRpcMeta)
    MergeFrom(*source);
  }
}

void GWS2WRpcMeta::MergeFrom(const GWS2WRpcMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.GWS2WRpcMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_req()) {
    mutable_req()->::protos::GWS2WMeta::MergeFrom(from.req());
  }
  if (from.has_resp()) {
    mutable_resp()->::protos::W2GWSMeta::MergeFrom(from.resp());
  }
}

void GWS2WRpcMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.GWS2WRpcMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GWS2WRpcMeta::CopyFrom(const GWS2WRpcMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.GWS2WRpcMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GWS2WRpcMeta::IsInitialized() const {
  return true;
}

void GWS2WRpcMeta::Swap(GWS2WRpcMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GWS2WRpcMeta::InternalSwap(GWS2WRpcMeta* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(req_, other->req_);
  swap(resp_, other->resp_);
}

::google::protobuf::Metadata GWS2WRpcMeta::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_meta_2eproto);
  return ::file_level_metadata_meta_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GWS2GMeta::InitAsDefaultInstance() {
}
class GWS2GMeta::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GWS2GMeta::kGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GWS2GMeta::GWS2GMeta()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.GWS2GMeta)
}
GWS2GMeta::GWS2GMeta(const GWS2GMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guid_ = from.guid_;
  // @@protoc_insertion_point(copy_constructor:protos.GWS2GMeta)
}

void GWS2GMeta::SharedCtor() {
  guid_ = PROTOBUF_LONGLONG(0);
}

GWS2GMeta::~GWS2GMeta() {
  // @@protoc_insertion_point(destructor:protos.GWS2GMeta)
  SharedDtor();
}

void GWS2GMeta::SharedDtor() {
}

void GWS2GMeta::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GWS2GMeta& GWS2GMeta::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GWS2GMeta_meta_2eproto.base);
  return *internal_default_instance();
}


void GWS2GMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.GWS2GMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guid_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GWS2GMeta::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GWS2GMeta*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 guid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_guid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GWS2GMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.GWS2GMeta)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.GWS2GMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.GWS2GMeta)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GWS2GMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.GWS2GMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.GWS2GMeta)
}

::google::protobuf::uint8* GWS2GMeta::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.GWS2GMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.GWS2GMeta)
  return target;
}

size_t GWS2GMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.GWS2GMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GWS2GMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.GWS2GMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const GWS2GMeta* source =
      ::google::protobuf::DynamicCastToGenerated<GWS2GMeta>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.GWS2GMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.GWS2GMeta)
    MergeFrom(*source);
  }
}

void GWS2GMeta::MergeFrom(const GWS2GMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.GWS2GMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guid() != 0) {
    set_guid(from.guid());
  }
}

void GWS2GMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.GWS2GMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GWS2GMeta::CopyFrom(const GWS2GMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.GWS2GMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GWS2GMeta::IsInitialized() const {
  return true;
}

void GWS2GMeta::Swap(GWS2GMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GWS2GMeta::InternalSwap(GWS2GMeta* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(guid_, other->guid_);
}

::google::protobuf::Metadata GWS2GMeta::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_meta_2eproto);
  return ::file_level_metadata_meta_2eproto[kIndexInFileMessages];
}


// ===================================================================

void G2GWSMeta::InitAsDefaultInstance() {
}
class G2GWSMeta::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int G2GWSMeta::kGuidFieldNumber;
const int G2GWSMeta::kGuidsFieldNumber;
const int G2GWSMeta::kGroupIdFieldNumber;
const int G2GWSMeta::kGroupIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

G2GWSMeta::G2GWSMeta()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.G2GWSMeta)
}
G2GWSMeta::G2GWSMeta(const G2GWSMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      guids_(from.guids_),
      group_ids_(from.group_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&group_id_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(group_id_));
  // @@protoc_insertion_point(copy_constructor:protos.G2GWSMeta)
}

void G2GWSMeta::SharedCtor() {
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_id_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(group_id_));
}

G2GWSMeta::~G2GWSMeta() {
  // @@protoc_insertion_point(destructor:protos.G2GWSMeta)
  SharedDtor();
}

void G2GWSMeta::SharedDtor() {
}

void G2GWSMeta::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const G2GWSMeta& G2GWSMeta::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_G2GWSMeta_meta_2eproto.base);
  return *internal_default_instance();
}


void G2GWSMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.G2GWSMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guids_.Clear();
  group_ids_.Clear();
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_id_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(group_id_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* G2GWSMeta::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<G2GWSMeta*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 guid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_guid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated int64 guids = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 18) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedInt64Parser;
          object = msg->mutable_guids();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        do {
          msg->add_guids(::google::protobuf::internal::ReadVarint(&ptr));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
        break;
      }
      // int64 group_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_group_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated int64 group_ids = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) == 34) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedInt64Parser;
          object = msg->mutable_group_ids();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        do {
          msg->add_group_ids(::google::protobuf::internal::ReadVarint(&ptr));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 32 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool G2GWSMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.G2GWSMeta)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 guids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_guids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_guids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 group_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 group_ids = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_group_ids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 34u, input, this->mutable_group_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.G2GWSMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.G2GWSMeta)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void G2GWSMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.G2GWSMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->guid(), output);
  }

  // repeated int64 guids = 2;
  if (this->guids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_guids_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->guids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->guids(i), output);
  }

  // int64 group_id = 3;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->group_id(), output);
  }

  // repeated int64 group_ids = 4;
  if (this->group_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_group_ids_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->group_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->group_ids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.G2GWSMeta)
}

::google::protobuf::uint8* G2GWSMeta::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.G2GWSMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->guid(), target);
  }

  // repeated int64 guids = 2;
  if (this->guids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _guids_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->guids_, target);
  }

  // int64 group_id = 3;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->group_id(), target);
  }

  // repeated int64 group_ids = 4;
  if (this->group_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _group_ids_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->group_ids_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.G2GWSMeta)
  return target;
}

size_t G2GWSMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.G2GWSMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 guids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->guids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _guids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int64 group_ids = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->group_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _group_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // int64 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->guid());
  }

  // int64 group_id = 3;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->group_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void G2GWSMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.G2GWSMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const G2GWSMeta* source =
      ::google::protobuf::DynamicCastToGenerated<G2GWSMeta>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.G2GWSMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.G2GWSMeta)
    MergeFrom(*source);
  }
}

void G2GWSMeta::MergeFrom(const G2GWSMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.G2GWSMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  guids_.MergeFrom(from.guids_);
  group_ids_.MergeFrom(from.group_ids_);
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
}

void G2GWSMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.G2GWSMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void G2GWSMeta::CopyFrom(const G2GWSMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.G2GWSMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool G2GWSMeta::IsInitialized() const {
  return true;
}

void G2GWSMeta::Swap(G2GWSMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void G2GWSMeta::InternalSwap(G2GWSMeta* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  guids_.InternalSwap(&other->guids_);
  group_ids_.InternalSwap(&other->group_ids_);
  swap(guid_, other->guid_);
  swap(group_id_, other->group_id_);
}

::google::protobuf::Metadata G2GWSMeta::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_meta_2eproto);
  return ::file_level_metadata_meta_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GWS2GRpcMeta::InitAsDefaultInstance() {
  ::protos::_GWS2GRpcMeta_default_instance_._instance.get_mutable()->req_ = const_cast< ::protos::GWS2GMeta*>(
      ::protos::GWS2GMeta::internal_default_instance());
  ::protos::_GWS2GRpcMeta_default_instance_._instance.get_mutable()->resp_ = const_cast< ::protos::G2GWSMeta*>(
      ::protos::G2GWSMeta::internal_default_instance());
}
class GWS2GRpcMeta::HasBitSetters {
 public:
  static const ::protos::GWS2GMeta& req(const GWS2GRpcMeta* msg);
  static const ::protos::G2GWSMeta& resp(const GWS2GRpcMeta* msg);
};

const ::protos::GWS2GMeta&
GWS2GRpcMeta::HasBitSetters::req(const GWS2GRpcMeta* msg) {
  return *msg->req_;
}
const ::protos::G2GWSMeta&
GWS2GRpcMeta::HasBitSetters::resp(const GWS2GRpcMeta* msg) {
  return *msg->resp_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GWS2GRpcMeta::kReqFieldNumber;
const int GWS2GRpcMeta::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GWS2GRpcMeta::GWS2GRpcMeta()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.GWS2GRpcMeta)
}
GWS2GRpcMeta::GWS2GRpcMeta(const GWS2GRpcMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req()) {
    req_ = new ::protos::GWS2GMeta(*from.req_);
  } else {
    req_ = nullptr;
  }
  if (from.has_resp()) {
    resp_ = new ::protos::G2GWSMeta(*from.resp_);
  } else {
    resp_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protos.GWS2GRpcMeta)
}

void GWS2GRpcMeta::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GWS2GRpcMeta_meta_2eproto.base);
  ::memset(&req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resp_) -
      reinterpret_cast<char*>(&req_)) + sizeof(resp_));
}

GWS2GRpcMeta::~GWS2GRpcMeta() {
  // @@protoc_insertion_point(destructor:protos.GWS2GRpcMeta)
  SharedDtor();
}

void GWS2GRpcMeta::SharedDtor() {
  if (this != internal_default_instance()) delete req_;
  if (this != internal_default_instance()) delete resp_;
}

void GWS2GRpcMeta::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GWS2GRpcMeta& GWS2GRpcMeta::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GWS2GRpcMeta_meta_2eproto.base);
  return *internal_default_instance();
}


void GWS2GRpcMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.GWS2GRpcMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && req_ != nullptr) {
    delete req_;
  }
  req_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && resp_ != nullptr) {
    delete resp_;
  }
  resp_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GWS2GRpcMeta::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GWS2GRpcMeta*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .protos.GWS2GMeta req = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::protos::GWS2GMeta::_InternalParse;
        object = msg->mutable_req();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .protos.G2GWSMeta resp = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::protos::G2GWSMeta::_InternalParse;
        object = msg->mutable_resp();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GWS2GRpcMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.GWS2GRpcMeta)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .protos.GWS2GMeta req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protos.G2GWSMeta resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.GWS2GRpcMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.GWS2GRpcMeta)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GWS2GRpcMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.GWS2GRpcMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protos.GWS2GMeta req = 1;
  if (this->has_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::req(this), output);
  }

  // .protos.G2GWSMeta resp = 2;
  if (this->has_resp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::resp(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.GWS2GRpcMeta)
}

::google::protobuf::uint8* GWS2GRpcMeta::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.GWS2GRpcMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protos.GWS2GMeta req = 1;
  if (this->has_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::req(this), target);
  }

  // .protos.G2GWSMeta resp = 2;
  if (this->has_resp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::resp(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.GWS2GRpcMeta)
  return target;
}

size_t GWS2GRpcMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.GWS2GRpcMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protos.GWS2GMeta req = 1;
  if (this->has_req()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *req_);
  }

  // .protos.G2GWSMeta resp = 2;
  if (this->has_resp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *resp_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GWS2GRpcMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.GWS2GRpcMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const GWS2GRpcMeta* source =
      ::google::protobuf::DynamicCastToGenerated<GWS2GRpcMeta>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.GWS2GRpcMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.GWS2GRpcMeta)
    MergeFrom(*source);
  }
}

void GWS2GRpcMeta::MergeFrom(const GWS2GRpcMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.GWS2GRpcMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_req()) {
    mutable_req()->::protos::GWS2GMeta::MergeFrom(from.req());
  }
  if (from.has_resp()) {
    mutable_resp()->::protos::G2GWSMeta::MergeFrom(from.resp());
  }
}

void GWS2GRpcMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.GWS2GRpcMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GWS2GRpcMeta::CopyFrom(const GWS2GRpcMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.GWS2GRpcMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GWS2GRpcMeta::IsInitialized() const {
  return true;
}

void GWS2GRpcMeta::Swap(GWS2GRpcMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GWS2GRpcMeta::InternalSwap(GWS2GRpcMeta* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(req_, other->req_);
  swap(resp_, other->resp_);
}

::google::protobuf::Metadata GWS2GRpcMeta::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_meta_2eproto);
  return ::file_level_metadata_meta_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GWMeta::InitAsDefaultInstance() {
}
class GWMeta::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GWMeta::kGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GWMeta::GWMeta()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.GWMeta)
}
GWMeta::GWMeta(const GWMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guid_ = from.guid_;
  // @@protoc_insertion_point(copy_constructor:protos.GWMeta)
}

void GWMeta::SharedCtor() {
  guid_ = PROTOBUF_LONGLONG(0);
}

GWMeta::~GWMeta() {
  // @@protoc_insertion_point(destructor:protos.GWMeta)
  SharedDtor();
}

void GWMeta::SharedDtor() {
}

void GWMeta::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GWMeta& GWMeta::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GWMeta_meta_2eproto.base);
  return *internal_default_instance();
}


void GWMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.GWMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guid_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GWMeta::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GWMeta*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 guid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_guid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GWMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.GWMeta)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.GWMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.GWMeta)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GWMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.GWMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.GWMeta)
}

::google::protobuf::uint8* GWMeta::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.GWMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.GWMeta)
  return target;
}

size_t GWMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.GWMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GWMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.GWMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const GWMeta* source =
      ::google::protobuf::DynamicCastToGenerated<GWMeta>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.GWMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.GWMeta)
    MergeFrom(*source);
  }
}

void GWMeta::MergeFrom(const GWMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.GWMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guid() != 0) {
    set_guid(from.guid());
  }
}

void GWMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.GWMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GWMeta::CopyFrom(const GWMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.GWMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GWMeta::IsInitialized() const {
  return true;
}

void GWMeta::Swap(GWMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GWMeta::InternalSwap(GWMeta* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(guid_, other->guid_);
}

::google::protobuf::Metadata GWMeta::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_meta_2eproto);
  return ::file_level_metadata_meta_2eproto[kIndexInFileMessages];
}


// ===================================================================

void WGMeta::InitAsDefaultInstance() {
}
class WGMeta::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WGMeta::kGuidFieldNumber;
const int WGMeta::kGuidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WGMeta::WGMeta()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.WGMeta)
}
WGMeta::WGMeta(const WGMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      guids_(from.guids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guid_ = from.guid_;
  // @@protoc_insertion_point(copy_constructor:protos.WGMeta)
}

void WGMeta::SharedCtor() {
  guid_ = PROTOBUF_LONGLONG(0);
}

WGMeta::~WGMeta() {
  // @@protoc_insertion_point(destructor:protos.WGMeta)
  SharedDtor();
}

void WGMeta::SharedDtor() {
}

void WGMeta::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WGMeta& WGMeta::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_WGMeta_meta_2eproto.base);
  return *internal_default_instance();
}


void WGMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.WGMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guids_.Clear();
  guid_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WGMeta::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<WGMeta*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 guid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_guid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated int64 guids = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 18) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedInt64Parser;
          object = msg->mutable_guids();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        do {
          msg->add_guids(::google::protobuf::internal::ReadVarint(&ptr));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WGMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.WGMeta)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 guids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_guids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_guids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.WGMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.WGMeta)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WGMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.WGMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->guid(), output);
  }

  // repeated int64 guids = 2;
  if (this->guids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_guids_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->guids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->guids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.WGMeta)
}

::google::protobuf::uint8* WGMeta::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.WGMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->guid(), target);
  }

  // repeated int64 guids = 2;
  if (this->guids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _guids_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->guids_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.WGMeta)
  return target;
}

size_t WGMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.WGMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 guids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->guids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _guids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // int64 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WGMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.WGMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const WGMeta* source =
      ::google::protobuf::DynamicCastToGenerated<WGMeta>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.WGMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.WGMeta)
    MergeFrom(*source);
  }
}

void WGMeta::MergeFrom(const WGMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.WGMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  guids_.MergeFrom(from.guids_);
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
}

void WGMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.WGMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WGMeta::CopyFrom(const WGMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.WGMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WGMeta::IsInitialized() const {
  return true;
}

void WGMeta::Swap(WGMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WGMeta::InternalSwap(WGMeta* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  guids_.InternalSwap(&other->guids_);
  swap(guid_, other->guid_);
}

::google::protobuf::Metadata WGMeta::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_meta_2eproto);
  return ::file_level_metadata_meta_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GWRpcMeta::InitAsDefaultInstance() {
  ::protos::_GWRpcMeta_default_instance_._instance.get_mutable()->req_ = const_cast< ::protos::GWMeta*>(
      ::protos::GWMeta::internal_default_instance());
  ::protos::_GWRpcMeta_default_instance_._instance.get_mutable()->resp_ = const_cast< ::protos::WGMeta*>(
      ::protos::WGMeta::internal_default_instance());
}
class GWRpcMeta::HasBitSetters {
 public:
  static const ::protos::GWMeta& req(const GWRpcMeta* msg);
  static const ::protos::WGMeta& resp(const GWRpcMeta* msg);
};

const ::protos::GWMeta&
GWRpcMeta::HasBitSetters::req(const GWRpcMeta* msg) {
  return *msg->req_;
}
const ::protos::WGMeta&
GWRpcMeta::HasBitSetters::resp(const GWRpcMeta* msg) {
  return *msg->resp_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GWRpcMeta::kReqFieldNumber;
const int GWRpcMeta::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GWRpcMeta::GWRpcMeta()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.GWRpcMeta)
}
GWRpcMeta::GWRpcMeta(const GWRpcMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req()) {
    req_ = new ::protos::GWMeta(*from.req_);
  } else {
    req_ = nullptr;
  }
  if (from.has_resp()) {
    resp_ = new ::protos::WGMeta(*from.resp_);
  } else {
    resp_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protos.GWRpcMeta)
}

void GWRpcMeta::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GWRpcMeta_meta_2eproto.base);
  ::memset(&req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resp_) -
      reinterpret_cast<char*>(&req_)) + sizeof(resp_));
}

GWRpcMeta::~GWRpcMeta() {
  // @@protoc_insertion_point(destructor:protos.GWRpcMeta)
  SharedDtor();
}

void GWRpcMeta::SharedDtor() {
  if (this != internal_default_instance()) delete req_;
  if (this != internal_default_instance()) delete resp_;
}

void GWRpcMeta::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GWRpcMeta& GWRpcMeta::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GWRpcMeta_meta_2eproto.base);
  return *internal_default_instance();
}


void GWRpcMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.GWRpcMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && req_ != nullptr) {
    delete req_;
  }
  req_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && resp_ != nullptr) {
    delete resp_;
  }
  resp_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GWRpcMeta::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GWRpcMeta*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .protos.GWMeta req = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::protos::GWMeta::_InternalParse;
        object = msg->mutable_req();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .protos.WGMeta resp = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::protos::WGMeta::_InternalParse;
        object = msg->mutable_resp();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GWRpcMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.GWRpcMeta)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .protos.GWMeta req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protos.WGMeta resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.GWRpcMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.GWRpcMeta)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GWRpcMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.GWRpcMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protos.GWMeta req = 1;
  if (this->has_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::req(this), output);
  }

  // .protos.WGMeta resp = 2;
  if (this->has_resp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::resp(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.GWRpcMeta)
}

::google::protobuf::uint8* GWRpcMeta::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.GWRpcMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protos.GWMeta req = 1;
  if (this->has_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::req(this), target);
  }

  // .protos.WGMeta resp = 2;
  if (this->has_resp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::resp(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.GWRpcMeta)
  return target;
}

size_t GWRpcMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.GWRpcMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protos.GWMeta req = 1;
  if (this->has_req()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *req_);
  }

  // .protos.WGMeta resp = 2;
  if (this->has_resp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *resp_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GWRpcMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.GWRpcMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const GWRpcMeta* source =
      ::google::protobuf::DynamicCastToGenerated<GWRpcMeta>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.GWRpcMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.GWRpcMeta)
    MergeFrom(*source);
  }
}

void GWRpcMeta::MergeFrom(const GWRpcMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.GWRpcMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_req()) {
    mutable_req()->::protos::GWMeta::MergeFrom(from.req());
  }
  if (from.has_resp()) {
    mutable_resp()->::protos::WGMeta::MergeFrom(from.resp());
  }
}

void GWRpcMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.GWRpcMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GWRpcMeta::CopyFrom(const GWRpcMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.GWRpcMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GWRpcMeta::IsInitialized() const {
  return true;
}

void GWRpcMeta::Swap(GWRpcMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GWRpcMeta::InternalSwap(GWRpcMeta* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(req_, other->req_);
  swap(resp_, other->resp_);
}

::google::protobuf::Metadata GWRpcMeta::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_meta_2eproto);
  return ::file_level_metadata_meta_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::protos::GWS2WMeta* Arena::CreateMaybeMessage< ::protos::GWS2WMeta >(Arena* arena) {
  return Arena::CreateInternal< ::protos::GWS2WMeta >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::W2GWSMeta* Arena::CreateMaybeMessage< ::protos::W2GWSMeta >(Arena* arena) {
  return Arena::CreateInternal< ::protos::W2GWSMeta >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::GWS2WRpcMeta* Arena::CreateMaybeMessage< ::protos::GWS2WRpcMeta >(Arena* arena) {
  return Arena::CreateInternal< ::protos::GWS2WRpcMeta >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::GWS2GMeta* Arena::CreateMaybeMessage< ::protos::GWS2GMeta >(Arena* arena) {
  return Arena::CreateInternal< ::protos::GWS2GMeta >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::G2GWSMeta* Arena::CreateMaybeMessage< ::protos::G2GWSMeta >(Arena* arena) {
  return Arena::CreateInternal< ::protos::G2GWSMeta >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::GWS2GRpcMeta* Arena::CreateMaybeMessage< ::protos::GWS2GRpcMeta >(Arena* arena) {
  return Arena::CreateInternal< ::protos::GWS2GRpcMeta >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::GWMeta* Arena::CreateMaybeMessage< ::protos::GWMeta >(Arena* arena) {
  return Arena::CreateInternal< ::protos::GWMeta >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::WGMeta* Arena::CreateMaybeMessage< ::protos::WGMeta >(Arena* arena) {
  return Arena::CreateInternal< ::protos::WGMeta >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::GWRpcMeta* Arena::CreateMaybeMessage< ::protos::GWRpcMeta >(Arena* arena) {
  return Arena::CreateInternal< ::protos::GWRpcMeta >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
