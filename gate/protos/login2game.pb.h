// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: login2game.proto

#ifndef PROTOBUF_INCLUDED_login2game_2eproto
#define PROTOBUF_INCLUDED_login2game_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_login2game_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_login2game_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[16]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_login2game_2eproto();
namespace protos {
class CGLogin;
class CGLoginDefaultTypeInternal;
extern CGLoginDefaultTypeInternal _CGLogin_default_instance_;
class CGReconnLogin;
class CGReconnLoginDefaultTypeInternal;
extern CGReconnLoginDefaultTypeInternal _CGReconnLogin_default_instance_;
class G2GWSDisconnect;
class G2GWSDisconnectDefaultTypeInternal;
extern G2GWSDisconnectDefaultTypeInternal _G2GWSDisconnect_default_instance_;
class G2GWSKickPlayer;
class G2GWSKickPlayerDefaultTypeInternal;
extern G2GWSKickPlayerDefaultTypeInternal _G2GWSKickPlayer_default_instance_;
class GCLogin;
class GCLoginDefaultTypeInternal;
extern GCLoginDefaultTypeInternal _GCLogin_default_instance_;
class GCReconnLogin;
class GCReconnLoginDefaultTypeInternal;
extern GCReconnLoginDefaultTypeInternal _GCReconnLogin_default_instance_;
class GWLogin;
class GWLoginDefaultTypeInternal;
extern GWLoginDefaultTypeInternal _GWLogin_default_instance_;
class GWS2GDisconnect;
class GWS2GDisconnectDefaultTypeInternal;
extern GWS2GDisconnectDefaultTypeInternal _GWS2GDisconnect_default_instance_;
class GWS2WDisconnect;
class GWS2WDisconnectDefaultTypeInternal;
extern GWS2WDisconnectDefaultTypeInternal _GWS2WDisconnect_default_instance_;
class GWS2WReconnLogin;
class GWS2WReconnLoginDefaultTypeInternal;
extern GWS2WReconnLoginDefaultTypeInternal _GWS2WReconnLogin_default_instance_;
class GameLoginParam;
class GameLoginParamDefaultTypeInternal;
extern GameLoginParamDefaultTypeInternal _GameLoginParam_default_instance_;
class GameLoginRoute;
class GameLoginRouteDefaultTypeInternal;
extern GameLoginRouteDefaultTypeInternal _GameLoginRoute_default_instance_;
class W2GWSDisconnect;
class W2GWSDisconnectDefaultTypeInternal;
extern W2GWSDisconnectDefaultTypeInternal _W2GWSDisconnect_default_instance_;
class W2GWSKickPlayer;
class W2GWSKickPlayerDefaultTypeInternal;
extern W2GWSKickPlayerDefaultTypeInternal _W2GWSKickPlayer_default_instance_;
class W2GWSReconnLogin;
class W2GWSReconnLoginDefaultTypeInternal;
extern W2GWSReconnLoginDefaultTypeInternal _W2GWSReconnLogin_default_instance_;
class WGLogin;
class WGLoginDefaultTypeInternal;
extern WGLoginDefaultTypeInternal _WGLogin_default_instance_;
}  // namespace protos
namespace google {
namespace protobuf {
template<> ::protos::CGLogin* Arena::CreateMaybeMessage<::protos::CGLogin>(Arena*);
template<> ::protos::CGReconnLogin* Arena::CreateMaybeMessage<::protos::CGReconnLogin>(Arena*);
template<> ::protos::G2GWSDisconnect* Arena::CreateMaybeMessage<::protos::G2GWSDisconnect>(Arena*);
template<> ::protos::G2GWSKickPlayer* Arena::CreateMaybeMessage<::protos::G2GWSKickPlayer>(Arena*);
template<> ::protos::GCLogin* Arena::CreateMaybeMessage<::protos::GCLogin>(Arena*);
template<> ::protos::GCReconnLogin* Arena::CreateMaybeMessage<::protos::GCReconnLogin>(Arena*);
template<> ::protos::GWLogin* Arena::CreateMaybeMessage<::protos::GWLogin>(Arena*);
template<> ::protos::GWS2GDisconnect* Arena::CreateMaybeMessage<::protos::GWS2GDisconnect>(Arena*);
template<> ::protos::GWS2WDisconnect* Arena::CreateMaybeMessage<::protos::GWS2WDisconnect>(Arena*);
template<> ::protos::GWS2WReconnLogin* Arena::CreateMaybeMessage<::protos::GWS2WReconnLogin>(Arena*);
template<> ::protos::GameLoginParam* Arena::CreateMaybeMessage<::protos::GameLoginParam>(Arena*);
template<> ::protos::GameLoginRoute* Arena::CreateMaybeMessage<::protos::GameLoginRoute>(Arena*);
template<> ::protos::W2GWSDisconnect* Arena::CreateMaybeMessage<::protos::W2GWSDisconnect>(Arena*);
template<> ::protos::W2GWSKickPlayer* Arena::CreateMaybeMessage<::protos::W2GWSKickPlayer>(Arena*);
template<> ::protos::W2GWSReconnLogin* Arena::CreateMaybeMessage<::protos::W2GWSReconnLogin>(Arena*);
template<> ::protos::WGLogin* Arena::CreateMaybeMessage<::protos::WGLogin>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace protos {

// ===================================================================

class GameLoginParam :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.GameLoginParam) */ {
 public:
  GameLoginParam();
  virtual ~GameLoginParam();

  GameLoginParam(const GameLoginParam& from);

  inline GameLoginParam& operator=(const GameLoginParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameLoginParam(GameLoginParam&& from) noexcept
    : GameLoginParam() {
    *this = ::std::move(from);
  }

  inline GameLoginParam& operator=(GameLoginParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GameLoginParam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GameLoginParam* internal_default_instance() {
    return reinterpret_cast<const GameLoginParam*>(
               &_GameLoginParam_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(GameLoginParam* other);
  friend void swap(GameLoginParam& a, GameLoginParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameLoginParam* New() const final {
    return CreateMaybeMessage<GameLoginParam>(nullptr);
  }

  GameLoginParam* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GameLoginParam>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GameLoginParam& from);
  void MergeFrom(const GameLoginParam& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GameLoginParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string deviceid = 1;
  void clear_deviceid();
  static const int kDeviceidFieldNumber = 1;
  const ::std::string& deviceid() const;
  void set_deviceid(const ::std::string& value);
  #if LANG_CXX11
  void set_deviceid(::std::string&& value);
  #endif
  void set_deviceid(const char* value);
  void set_deviceid(const char* value, size_t size);
  ::std::string* mutable_deviceid();
  ::std::string* release_deviceid();
  void set_allocated_deviceid(::std::string* deviceid);

  // string ip = 2;
  void clear_ip();
  static const int kIpFieldNumber = 2;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // string sign = 4;
  void clear_sign();
  static const int kSignFieldNumber = 4;
  const ::std::string& sign() const;
  void set_sign(const ::std::string& value);
  #if LANG_CXX11
  void set_sign(::std::string&& value);
  #endif
  void set_sign(const char* value);
  void set_sign(const char* value, size_t size);
  ::std::string* mutable_sign();
  ::std::string* release_sign();
  void set_allocated_sign(::std::string* sign);

  // int64 userid = 3;
  void clear_userid();
  static const int kUseridFieldNumber = 3;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:protos.GameLoginParam)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr deviceid_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr sign_;
  ::google::protobuf::int64 userid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_login2game_2eproto;
};
// -------------------------------------------------------------------

class GameLoginRoute :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.GameLoginRoute) */ {
 public:
  GameLoginRoute();
  virtual ~GameLoginRoute();

  GameLoginRoute(const GameLoginRoute& from);

  inline GameLoginRoute& operator=(const GameLoginRoute& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameLoginRoute(GameLoginRoute&& from) noexcept
    : GameLoginRoute() {
    *this = ::std::move(from);
  }

  inline GameLoginRoute& operator=(GameLoginRoute&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GameLoginRoute& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GameLoginRoute* internal_default_instance() {
    return reinterpret_cast<const GameLoginRoute*>(
               &_GameLoginRoute_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(GameLoginRoute* other);
  friend void swap(GameLoginRoute& a, GameLoginRoute& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameLoginRoute* New() const final {
    return CreateMaybeMessage<GameLoginRoute>(nullptr);
  }

  GameLoginRoute* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GameLoginRoute>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GameLoginRoute& from);
  void MergeFrom(const GameLoginRoute& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GameLoginRoute* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 client_sessionid = 1;
  void clear_client_sessionid();
  static const int kClientSessionidFieldNumber = 1;
  ::google::protobuf::int64 client_sessionid() const;
  void set_client_sessionid(::google::protobuf::int64 value);

  // int32 gws_id = 2;
  void clear_gws_id();
  static const int kGwsIdFieldNumber = 2;
  ::google::protobuf::int32 gws_id() const;
  void set_gws_id(::google::protobuf::int32 value);

  // int32 gs_id = 3;
  void clear_gs_id();
  static const int kGsIdFieldNumber = 3;
  ::google::protobuf::int32 gs_id() const;
  void set_gs_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.GameLoginRoute)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 client_sessionid_;
  ::google::protobuf::int32 gws_id_;
  ::google::protobuf::int32 gs_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_login2game_2eproto;
};
// -------------------------------------------------------------------

class CGLogin :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.CGLogin) */ {
 public:
  CGLogin();
  virtual ~CGLogin();

  CGLogin(const CGLogin& from);

  inline CGLogin& operator=(const CGLogin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGLogin(CGLogin&& from) noexcept
    : CGLogin() {
    *this = ::std::move(from);
  }

  inline CGLogin& operator=(CGLogin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CGLogin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGLogin* internal_default_instance() {
    return reinterpret_cast<const CGLogin*>(
               &_CGLogin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CGLogin* other);
  friend void swap(CGLogin& a, CGLogin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGLogin* New() const final {
    return CreateMaybeMessage<CGLogin>(nullptr);
  }

  CGLogin* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CGLogin>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CGLogin& from);
  void MergeFrom(const CGLogin& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protos.GameLoginRoute route = 1;
  bool has_route() const;
  void clear_route();
  static const int kRouteFieldNumber = 1;
  const ::protos::GameLoginRoute& route() const;
  ::protos::GameLoginRoute* release_route();
  ::protos::GameLoginRoute* mutable_route();
  void set_allocated_route(::protos::GameLoginRoute* route);

  // .protos.GameLoginParam param = 2;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 2;
  const ::protos::GameLoginParam& param() const;
  ::protos::GameLoginParam* release_param();
  ::protos::GameLoginParam* mutable_param();
  void set_allocated_param(::protos::GameLoginParam* param);

  // @@protoc_insertion_point(class_scope:protos.CGLogin)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protos::GameLoginRoute* route_;
  ::protos::GameLoginParam* param_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_login2game_2eproto;
};
// -------------------------------------------------------------------

class GCLogin :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.GCLogin) */ {
 public:
  GCLogin();
  virtual ~GCLogin();

  GCLogin(const GCLogin& from);

  inline GCLogin& operator=(const GCLogin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GCLogin(GCLogin&& from) noexcept
    : GCLogin() {
    *this = ::std::move(from);
  }

  inline GCLogin& operator=(GCLogin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GCLogin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GCLogin* internal_default_instance() {
    return reinterpret_cast<const GCLogin*>(
               &_GCLogin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(GCLogin* other);
  friend void swap(GCLogin& a, GCLogin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GCLogin* New() const final {
    return CreateMaybeMessage<GCLogin>(nullptr);
  }

  GCLogin* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GCLogin>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GCLogin& from);
  void MergeFrom(const GCLogin& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GCLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string errmsg = 2;
  void clear_errmsg();
  static const int kErrmsgFieldNumber = 2;
  const ::std::string& errmsg() const;
  void set_errmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_errmsg(::std::string&& value);
  #endif
  void set_errmsg(const char* value);
  void set_errmsg(const char* value, size_t size);
  ::std::string* mutable_errmsg();
  ::std::string* release_errmsg();
  void set_allocated_errmsg(::std::string* errmsg);

  // string login_key = 4;
  void clear_login_key();
  static const int kLoginKeyFieldNumber = 4;
  const ::std::string& login_key() const;
  void set_login_key(const ::std::string& value);
  #if LANG_CXX11
  void set_login_key(::std::string&& value);
  #endif
  void set_login_key(const char* value);
  void set_login_key(const char* value, size_t size);
  ::std::string* mutable_login_key();
  ::std::string* release_login_key();
  void set_allocated_login_key(::std::string* login_key);

  // string name = 6;
  void clear_name();
  static const int kNameFieldNumber = 6;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .protos.GameLoginRoute route = 3;
  bool has_route() const;
  void clear_route();
  static const int kRouteFieldNumber = 3;
  const ::protos::GameLoginRoute& route() const;
  ::protos::GameLoginRoute* release_route();
  ::protos::GameLoginRoute* mutable_route();
  void set_allocated_route(::protos::GameLoginRoute* route);

  // int32 error = 1;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // int32 portraitid = 7;
  void clear_portraitid();
  static const int kPortraitidFieldNumber = 7;
  ::google::protobuf::int32 portraitid() const;
  void set_portraitid(::google::protobuf::int32 value);

  // int64 guid = 5;
  void clear_guid();
  static const int kGuidFieldNumber = 5;
  ::google::protobuf::int64 guid() const;
  void set_guid(::google::protobuf::int64 value);

  // int32 level = 8;
  void clear_level();
  static const int kLevelFieldNumber = 8;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.GCLogin)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr errmsg_;
  ::google::protobuf::internal::ArenaStringPtr login_key_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::protos::GameLoginRoute* route_;
  ::google::protobuf::int32 error_;
  ::google::protobuf::int32 portraitid_;
  ::google::protobuf::int64 guid_;
  ::google::protobuf::int32 level_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_login2game_2eproto;
};
// -------------------------------------------------------------------

class GWLogin :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.GWLogin) */ {
 public:
  GWLogin();
  virtual ~GWLogin();

  GWLogin(const GWLogin& from);

  inline GWLogin& operator=(const GWLogin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GWLogin(GWLogin&& from) noexcept
    : GWLogin() {
    *this = ::std::move(from);
  }

  inline GWLogin& operator=(GWLogin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GWLogin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GWLogin* internal_default_instance() {
    return reinterpret_cast<const GWLogin*>(
               &_GWLogin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(GWLogin* other);
  friend void swap(GWLogin& a, GWLogin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GWLogin* New() const final {
    return CreateMaybeMessage<GWLogin>(nullptr);
  }

  GWLogin* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GWLogin>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GWLogin& from);
  void MergeFrom(const GWLogin& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GWLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protos.GameLoginRoute route = 1;
  bool has_route() const;
  void clear_route();
  static const int kRouteFieldNumber = 1;
  const ::protos::GameLoginRoute& route() const;
  ::protos::GameLoginRoute* release_route();
  ::protos::GameLoginRoute* mutable_route();
  void set_allocated_route(::protos::GameLoginRoute* route);

  // .protos.GameLoginParam param = 2;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 2;
  const ::protos::GameLoginParam& param() const;
  ::protos::GameLoginParam* release_param();
  ::protos::GameLoginParam* mutable_param();
  void set_allocated_param(::protos::GameLoginParam* param);

  // @@protoc_insertion_point(class_scope:protos.GWLogin)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protos::GameLoginRoute* route_;
  ::protos::GameLoginParam* param_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_login2game_2eproto;
};
// -------------------------------------------------------------------

class WGLogin :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.WGLogin) */ {
 public:
  WGLogin();
  virtual ~WGLogin();

  WGLogin(const WGLogin& from);

  inline WGLogin& operator=(const WGLogin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WGLogin(WGLogin&& from) noexcept
    : WGLogin() {
    *this = ::std::move(from);
  }

  inline WGLogin& operator=(WGLogin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WGLogin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WGLogin* internal_default_instance() {
    return reinterpret_cast<const WGLogin*>(
               &_WGLogin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(WGLogin* other);
  friend void swap(WGLogin& a, WGLogin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WGLogin* New() const final {
    return CreateMaybeMessage<WGLogin>(nullptr);
  }

  WGLogin* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WGLogin>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WGLogin& from);
  void MergeFrom(const WGLogin& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WGLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string errmsg = 2;
  void clear_errmsg();
  static const int kErrmsgFieldNumber = 2;
  const ::std::string& errmsg() const;
  void set_errmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_errmsg(::std::string&& value);
  #endif
  void set_errmsg(const char* value);
  void set_errmsg(const char* value, size_t size);
  ::std::string* mutable_errmsg();
  ::std::string* release_errmsg();
  void set_allocated_errmsg(::std::string* errmsg);

  // .protos.GameLoginRoute route = 3;
  bool has_route() const;
  void clear_route();
  static const int kRouteFieldNumber = 3;
  const ::protos::GameLoginRoute& route() const;
  ::protos::GameLoginRoute* release_route();
  ::protos::GameLoginRoute* mutable_route();
  void set_allocated_route(::protos::GameLoginRoute* route);

  // .protos.GameLoginParam param = 4;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 4;
  const ::protos::GameLoginParam& param() const;
  ::protos::GameLoginParam* release_param();
  ::protos::GameLoginParam* mutable_param();
  void set_allocated_param(::protos::GameLoginParam* param);

  // int64 guid = 5;
  void clear_guid();
  static const int kGuidFieldNumber = 5;
  ::google::protobuf::int64 guid() const;
  void set_guid(::google::protobuf::int64 value);

  // int32 error = 1;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.WGLogin)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr errmsg_;
  ::protos::GameLoginRoute* route_;
  ::protos::GameLoginParam* param_;
  ::google::protobuf::int64 guid_;
  ::google::protobuf::int32 error_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_login2game_2eproto;
};
// -------------------------------------------------------------------

class CGReconnLogin :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.CGReconnLogin) */ {
 public:
  CGReconnLogin();
  virtual ~CGReconnLogin();

  CGReconnLogin(const CGReconnLogin& from);

  inline CGReconnLogin& operator=(const CGReconnLogin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGReconnLogin(CGReconnLogin&& from) noexcept
    : CGReconnLogin() {
    *this = ::std::move(from);
  }

  inline CGReconnLogin& operator=(CGReconnLogin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CGReconnLogin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGReconnLogin* internal_default_instance() {
    return reinterpret_cast<const CGReconnLogin*>(
               &_CGReconnLogin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(CGReconnLogin* other);
  friend void swap(CGReconnLogin& a, CGReconnLogin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGReconnLogin* New() const final {
    return CreateMaybeMessage<CGReconnLogin>(nullptr);
  }

  CGReconnLogin* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CGReconnLogin>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CGReconnLogin& from);
  void MergeFrom(const CGReconnLogin& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGReconnLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string login_key = 2;
  void clear_login_key();
  static const int kLoginKeyFieldNumber = 2;
  const ::std::string& login_key() const;
  void set_login_key(const ::std::string& value);
  #if LANG_CXX11
  void set_login_key(::std::string&& value);
  #endif
  void set_login_key(const char* value);
  void set_login_key(const char* value, size_t size);
  ::std::string* mutable_login_key();
  ::std::string* release_login_key();
  void set_allocated_login_key(::std::string* login_key);

  // .protos.GameLoginRoute route = 1;
  bool has_route() const;
  void clear_route();
  static const int kRouteFieldNumber = 1;
  const ::protos::GameLoginRoute& route() const;
  ::protos::GameLoginRoute* release_route();
  ::protos::GameLoginRoute* mutable_route();
  void set_allocated_route(::protos::GameLoginRoute* route);

  // @@protoc_insertion_point(class_scope:protos.CGReconnLogin)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr login_key_;
  ::protos::GameLoginRoute* route_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_login2game_2eproto;
};
// -------------------------------------------------------------------

class GCReconnLogin :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.GCReconnLogin) */ {
 public:
  GCReconnLogin();
  virtual ~GCReconnLogin();

  GCReconnLogin(const GCReconnLogin& from);

  inline GCReconnLogin& operator=(const GCReconnLogin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GCReconnLogin(GCReconnLogin&& from) noexcept
    : GCReconnLogin() {
    *this = ::std::move(from);
  }

  inline GCReconnLogin& operator=(GCReconnLogin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GCReconnLogin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GCReconnLogin* internal_default_instance() {
    return reinterpret_cast<const GCReconnLogin*>(
               &_GCReconnLogin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(GCReconnLogin* other);
  friend void swap(GCReconnLogin& a, GCReconnLogin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GCReconnLogin* New() const final {
    return CreateMaybeMessage<GCReconnLogin>(nullptr);
  }

  GCReconnLogin* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GCReconnLogin>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GCReconnLogin& from);
  void MergeFrom(const GCReconnLogin& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GCReconnLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string errmsg = 2;
  void clear_errmsg();
  static const int kErrmsgFieldNumber = 2;
  const ::std::string& errmsg() const;
  void set_errmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_errmsg(::std::string&& value);
  #endif
  void set_errmsg(const char* value);
  void set_errmsg(const char* value, size_t size);
  ::std::string* mutable_errmsg();
  ::std::string* release_errmsg();
  void set_allocated_errmsg(::std::string* errmsg);

  // .protos.GameLoginRoute route = 3;
  bool has_route() const;
  void clear_route();
  static const int kRouteFieldNumber = 3;
  const ::protos::GameLoginRoute& route() const;
  ::protos::GameLoginRoute* release_route();
  ::protos::GameLoginRoute* mutable_route();
  void set_allocated_route(::protos::GameLoginRoute* route);

  // int64 guid = 4;
  void clear_guid();
  static const int kGuidFieldNumber = 4;
  ::google::protobuf::int64 guid() const;
  void set_guid(::google::protobuf::int64 value);

  // int32 error = 1;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.GCReconnLogin)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr errmsg_;
  ::protos::GameLoginRoute* route_;
  ::google::protobuf::int64 guid_;
  ::google::protobuf::int32 error_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_login2game_2eproto;
};
// -------------------------------------------------------------------

class GWS2WReconnLogin :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.GWS2WReconnLogin) */ {
 public:
  GWS2WReconnLogin();
  virtual ~GWS2WReconnLogin();

  GWS2WReconnLogin(const GWS2WReconnLogin& from);

  inline GWS2WReconnLogin& operator=(const GWS2WReconnLogin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GWS2WReconnLogin(GWS2WReconnLogin&& from) noexcept
    : GWS2WReconnLogin() {
    *this = ::std::move(from);
  }

  inline GWS2WReconnLogin& operator=(GWS2WReconnLogin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GWS2WReconnLogin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GWS2WReconnLogin* internal_default_instance() {
    return reinterpret_cast<const GWS2WReconnLogin*>(
               &_GWS2WReconnLogin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(GWS2WReconnLogin* other);
  friend void swap(GWS2WReconnLogin& a, GWS2WReconnLogin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GWS2WReconnLogin* New() const final {
    return CreateMaybeMessage<GWS2WReconnLogin>(nullptr);
  }

  GWS2WReconnLogin* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GWS2WReconnLogin>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GWS2WReconnLogin& from);
  void MergeFrom(const GWS2WReconnLogin& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GWS2WReconnLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int64 guid() const;
  void set_guid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:protos.GWS2WReconnLogin)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_login2game_2eproto;
};
// -------------------------------------------------------------------

class W2GWSReconnLogin :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.W2GWSReconnLogin) */ {
 public:
  W2GWSReconnLogin();
  virtual ~W2GWSReconnLogin();

  W2GWSReconnLogin(const W2GWSReconnLogin& from);

  inline W2GWSReconnLogin& operator=(const W2GWSReconnLogin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  W2GWSReconnLogin(W2GWSReconnLogin&& from) noexcept
    : W2GWSReconnLogin() {
    *this = ::std::move(from);
  }

  inline W2GWSReconnLogin& operator=(W2GWSReconnLogin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const W2GWSReconnLogin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const W2GWSReconnLogin* internal_default_instance() {
    return reinterpret_cast<const W2GWSReconnLogin*>(
               &_W2GWSReconnLogin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(W2GWSReconnLogin* other);
  friend void swap(W2GWSReconnLogin& a, W2GWSReconnLogin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline W2GWSReconnLogin* New() const final {
    return CreateMaybeMessage<W2GWSReconnLogin>(nullptr);
  }

  W2GWSReconnLogin* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<W2GWSReconnLogin>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const W2GWSReconnLogin& from);
  void MergeFrom(const W2GWSReconnLogin& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(W2GWSReconnLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string errmsg = 2;
  void clear_errmsg();
  static const int kErrmsgFieldNumber = 2;
  const ::std::string& errmsg() const;
  void set_errmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_errmsg(::std::string&& value);
  #endif
  void set_errmsg(const char* value);
  void set_errmsg(const char* value, size_t size);
  ::std::string* mutable_errmsg();
  ::std::string* release_errmsg();
  void set_allocated_errmsg(::std::string* errmsg);

  // int64 guid = 3;
  void clear_guid();
  static const int kGuidFieldNumber = 3;
  ::google::protobuf::int64 guid() const;
  void set_guid(::google::protobuf::int64 value);

  // int32 error = 1;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.W2GWSReconnLogin)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr errmsg_;
  ::google::protobuf::int64 guid_;
  ::google::protobuf::int32 error_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_login2game_2eproto;
};
// -------------------------------------------------------------------

class GWS2GDisconnect :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.GWS2GDisconnect) */ {
 public:
  GWS2GDisconnect();
  virtual ~GWS2GDisconnect();

  GWS2GDisconnect(const GWS2GDisconnect& from);

  inline GWS2GDisconnect& operator=(const GWS2GDisconnect& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GWS2GDisconnect(GWS2GDisconnect&& from) noexcept
    : GWS2GDisconnect() {
    *this = ::std::move(from);
  }

  inline GWS2GDisconnect& operator=(GWS2GDisconnect&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GWS2GDisconnect& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GWS2GDisconnect* internal_default_instance() {
    return reinterpret_cast<const GWS2GDisconnect*>(
               &_GWS2GDisconnect_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(GWS2GDisconnect* other);
  friend void swap(GWS2GDisconnect& a, GWS2GDisconnect& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GWS2GDisconnect* New() const final {
    return CreateMaybeMessage<GWS2GDisconnect>(nullptr);
  }

  GWS2GDisconnect* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GWS2GDisconnect>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GWS2GDisconnect& from);
  void MergeFrom(const GWS2GDisconnect& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GWS2GDisconnect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int64 guid() const;
  void set_guid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:protos.GWS2GDisconnect)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_login2game_2eproto;
};
// -------------------------------------------------------------------

class G2GWSDisconnect :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.G2GWSDisconnect) */ {
 public:
  G2GWSDisconnect();
  virtual ~G2GWSDisconnect();

  G2GWSDisconnect(const G2GWSDisconnect& from);

  inline G2GWSDisconnect& operator=(const G2GWSDisconnect& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  G2GWSDisconnect(G2GWSDisconnect&& from) noexcept
    : G2GWSDisconnect() {
    *this = ::std::move(from);
  }

  inline G2GWSDisconnect& operator=(G2GWSDisconnect&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const G2GWSDisconnect& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const G2GWSDisconnect* internal_default_instance() {
    return reinterpret_cast<const G2GWSDisconnect*>(
               &_G2GWSDisconnect_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(G2GWSDisconnect* other);
  friend void swap(G2GWSDisconnect& a, G2GWSDisconnect& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline G2GWSDisconnect* New() const final {
    return CreateMaybeMessage<G2GWSDisconnect>(nullptr);
  }

  G2GWSDisconnect* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<G2GWSDisconnect>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const G2GWSDisconnect& from);
  void MergeFrom(const G2GWSDisconnect& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(G2GWSDisconnect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string errmsg = 2;
  void clear_errmsg();
  static const int kErrmsgFieldNumber = 2;
  const ::std::string& errmsg() const;
  void set_errmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_errmsg(::std::string&& value);
  #endif
  void set_errmsg(const char* value);
  void set_errmsg(const char* value, size_t size);
  ::std::string* mutable_errmsg();
  ::std::string* release_errmsg();
  void set_allocated_errmsg(::std::string* errmsg);

  // int64 guid = 3;
  void clear_guid();
  static const int kGuidFieldNumber = 3;
  ::google::protobuf::int64 guid() const;
  void set_guid(::google::protobuf::int64 value);

  // int32 error = 1;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.G2GWSDisconnect)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr errmsg_;
  ::google::protobuf::int64 guid_;
  ::google::protobuf::int32 error_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_login2game_2eproto;
};
// -------------------------------------------------------------------

class GWS2WDisconnect :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.GWS2WDisconnect) */ {
 public:
  GWS2WDisconnect();
  virtual ~GWS2WDisconnect();

  GWS2WDisconnect(const GWS2WDisconnect& from);

  inline GWS2WDisconnect& operator=(const GWS2WDisconnect& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GWS2WDisconnect(GWS2WDisconnect&& from) noexcept
    : GWS2WDisconnect() {
    *this = ::std::move(from);
  }

  inline GWS2WDisconnect& operator=(GWS2WDisconnect&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GWS2WDisconnect& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GWS2WDisconnect* internal_default_instance() {
    return reinterpret_cast<const GWS2WDisconnect*>(
               &_GWS2WDisconnect_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(GWS2WDisconnect* other);
  friend void swap(GWS2WDisconnect& a, GWS2WDisconnect& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GWS2WDisconnect* New() const final {
    return CreateMaybeMessage<GWS2WDisconnect>(nullptr);
  }

  GWS2WDisconnect* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GWS2WDisconnect>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GWS2WDisconnect& from);
  void MergeFrom(const GWS2WDisconnect& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GWS2WDisconnect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int64 guid() const;
  void set_guid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:protos.GWS2WDisconnect)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_login2game_2eproto;
};
// -------------------------------------------------------------------

class W2GWSDisconnect :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.W2GWSDisconnect) */ {
 public:
  W2GWSDisconnect();
  virtual ~W2GWSDisconnect();

  W2GWSDisconnect(const W2GWSDisconnect& from);

  inline W2GWSDisconnect& operator=(const W2GWSDisconnect& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  W2GWSDisconnect(W2GWSDisconnect&& from) noexcept
    : W2GWSDisconnect() {
    *this = ::std::move(from);
  }

  inline W2GWSDisconnect& operator=(W2GWSDisconnect&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const W2GWSDisconnect& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const W2GWSDisconnect* internal_default_instance() {
    return reinterpret_cast<const W2GWSDisconnect*>(
               &_W2GWSDisconnect_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(W2GWSDisconnect* other);
  friend void swap(W2GWSDisconnect& a, W2GWSDisconnect& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline W2GWSDisconnect* New() const final {
    return CreateMaybeMessage<W2GWSDisconnect>(nullptr);
  }

  W2GWSDisconnect* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<W2GWSDisconnect>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const W2GWSDisconnect& from);
  void MergeFrom(const W2GWSDisconnect& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(W2GWSDisconnect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string errmsg = 2;
  void clear_errmsg();
  static const int kErrmsgFieldNumber = 2;
  const ::std::string& errmsg() const;
  void set_errmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_errmsg(::std::string&& value);
  #endif
  void set_errmsg(const char* value);
  void set_errmsg(const char* value, size_t size);
  ::std::string* mutable_errmsg();
  ::std::string* release_errmsg();
  void set_allocated_errmsg(::std::string* errmsg);

  // int64 guid = 3;
  void clear_guid();
  static const int kGuidFieldNumber = 3;
  ::google::protobuf::int64 guid() const;
  void set_guid(::google::protobuf::int64 value);

  // int32 error = 1;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.W2GWSDisconnect)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr errmsg_;
  ::google::protobuf::int64 guid_;
  ::google::protobuf::int32 error_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_login2game_2eproto;
};
// -------------------------------------------------------------------

class G2GWSKickPlayer :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.G2GWSKickPlayer) */ {
 public:
  G2GWSKickPlayer();
  virtual ~G2GWSKickPlayer();

  G2GWSKickPlayer(const G2GWSKickPlayer& from);

  inline G2GWSKickPlayer& operator=(const G2GWSKickPlayer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  G2GWSKickPlayer(G2GWSKickPlayer&& from) noexcept
    : G2GWSKickPlayer() {
    *this = ::std::move(from);
  }

  inline G2GWSKickPlayer& operator=(G2GWSKickPlayer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const G2GWSKickPlayer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const G2GWSKickPlayer* internal_default_instance() {
    return reinterpret_cast<const G2GWSKickPlayer*>(
               &_G2GWSKickPlayer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(G2GWSKickPlayer* other);
  friend void swap(G2GWSKickPlayer& a, G2GWSKickPlayer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline G2GWSKickPlayer* New() const final {
    return CreateMaybeMessage<G2GWSKickPlayer>(nullptr);
  }

  G2GWSKickPlayer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<G2GWSKickPlayer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const G2GWSKickPlayer& from);
  void MergeFrom(const G2GWSKickPlayer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(G2GWSKickPlayer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string errmsg = 2;
  void clear_errmsg();
  static const int kErrmsgFieldNumber = 2;
  const ::std::string& errmsg() const;
  void set_errmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_errmsg(::std::string&& value);
  #endif
  void set_errmsg(const char* value);
  void set_errmsg(const char* value, size_t size);
  ::std::string* mutable_errmsg();
  ::std::string* release_errmsg();
  void set_allocated_errmsg(::std::string* errmsg);

  // int64 guid = 3;
  void clear_guid();
  static const int kGuidFieldNumber = 3;
  ::google::protobuf::int64 guid() const;
  void set_guid(::google::protobuf::int64 value);

  // int32 error = 1;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.G2GWSKickPlayer)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr errmsg_;
  ::google::protobuf::int64 guid_;
  ::google::protobuf::int32 error_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_login2game_2eproto;
};
// -------------------------------------------------------------------

class W2GWSKickPlayer :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.W2GWSKickPlayer) */ {
 public:
  W2GWSKickPlayer();
  virtual ~W2GWSKickPlayer();

  W2GWSKickPlayer(const W2GWSKickPlayer& from);

  inline W2GWSKickPlayer& operator=(const W2GWSKickPlayer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  W2GWSKickPlayer(W2GWSKickPlayer&& from) noexcept
    : W2GWSKickPlayer() {
    *this = ::std::move(from);
  }

  inline W2GWSKickPlayer& operator=(W2GWSKickPlayer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const W2GWSKickPlayer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const W2GWSKickPlayer* internal_default_instance() {
    return reinterpret_cast<const W2GWSKickPlayer*>(
               &_W2GWSKickPlayer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(W2GWSKickPlayer* other);
  friend void swap(W2GWSKickPlayer& a, W2GWSKickPlayer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline W2GWSKickPlayer* New() const final {
    return CreateMaybeMessage<W2GWSKickPlayer>(nullptr);
  }

  W2GWSKickPlayer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<W2GWSKickPlayer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const W2GWSKickPlayer& from);
  void MergeFrom(const W2GWSKickPlayer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(W2GWSKickPlayer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string errmsg = 2;
  void clear_errmsg();
  static const int kErrmsgFieldNumber = 2;
  const ::std::string& errmsg() const;
  void set_errmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_errmsg(::std::string&& value);
  #endif
  void set_errmsg(const char* value);
  void set_errmsg(const char* value, size_t size);
  ::std::string* mutable_errmsg();
  ::std::string* release_errmsg();
  void set_allocated_errmsg(::std::string* errmsg);

  // int64 guid = 3;
  void clear_guid();
  static const int kGuidFieldNumber = 3;
  ::google::protobuf::int64 guid() const;
  void set_guid(::google::protobuf::int64 value);

  // int32 error = 1;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.W2GWSKickPlayer)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr errmsg_;
  ::google::protobuf::int64 guid_;
  ::google::protobuf::int32 error_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_login2game_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GameLoginParam

// string deviceid = 1;
inline void GameLoginParam::clear_deviceid() {
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GameLoginParam::deviceid() const {
  // @@protoc_insertion_point(field_get:protos.GameLoginParam.deviceid)
  return deviceid_.GetNoArena();
}
inline void GameLoginParam::set_deviceid(const ::std::string& value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.GameLoginParam.deviceid)
}
#if LANG_CXX11
inline void GameLoginParam::set_deviceid(::std::string&& value) {
  
  deviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.GameLoginParam.deviceid)
}
#endif
inline void GameLoginParam::set_deviceid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.GameLoginParam.deviceid)
}
inline void GameLoginParam::set_deviceid(const char* value, size_t size) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.GameLoginParam.deviceid)
}
inline ::std::string* GameLoginParam::mutable_deviceid() {
  
  // @@protoc_insertion_point(field_mutable:protos.GameLoginParam.deviceid)
  return deviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameLoginParam::release_deviceid() {
  // @@protoc_insertion_point(field_release:protos.GameLoginParam.deviceid)
  
  return deviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameLoginParam::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid != nullptr) {
    
  } else {
    
  }
  deviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceid);
  // @@protoc_insertion_point(field_set_allocated:protos.GameLoginParam.deviceid)
}

// string ip = 2;
inline void GameLoginParam::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GameLoginParam::ip() const {
  // @@protoc_insertion_point(field_get:protos.GameLoginParam.ip)
  return ip_.GetNoArena();
}
inline void GameLoginParam::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.GameLoginParam.ip)
}
#if LANG_CXX11
inline void GameLoginParam::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.GameLoginParam.ip)
}
#endif
inline void GameLoginParam::set_ip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.GameLoginParam.ip)
}
inline void GameLoginParam::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.GameLoginParam.ip)
}
inline ::std::string* GameLoginParam::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:protos.GameLoginParam.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameLoginParam::release_ip() {
  // @@protoc_insertion_point(field_release:protos.GameLoginParam.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameLoginParam::set_allocated_ip(::std::string* ip) {
  if (ip != nullptr) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:protos.GameLoginParam.ip)
}

// int64 userid = 3;
inline void GameLoginParam::clear_userid() {
  userid_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 GameLoginParam::userid() const {
  // @@protoc_insertion_point(field_get:protos.GameLoginParam.userid)
  return userid_;
}
inline void GameLoginParam::set_userid(::google::protobuf::int64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:protos.GameLoginParam.userid)
}

// string sign = 4;
inline void GameLoginParam::clear_sign() {
  sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GameLoginParam::sign() const {
  // @@protoc_insertion_point(field_get:protos.GameLoginParam.sign)
  return sign_.GetNoArena();
}
inline void GameLoginParam::set_sign(const ::std::string& value) {
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.GameLoginParam.sign)
}
#if LANG_CXX11
inline void GameLoginParam::set_sign(::std::string&& value) {
  
  sign_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.GameLoginParam.sign)
}
#endif
inline void GameLoginParam::set_sign(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.GameLoginParam.sign)
}
inline void GameLoginParam::set_sign(const char* value, size_t size) {
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.GameLoginParam.sign)
}
inline ::std::string* GameLoginParam::mutable_sign() {
  
  // @@protoc_insertion_point(field_mutable:protos.GameLoginParam.sign)
  return sign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameLoginParam::release_sign() {
  // @@protoc_insertion_point(field_release:protos.GameLoginParam.sign)
  
  return sign_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameLoginParam::set_allocated_sign(::std::string* sign) {
  if (sign != nullptr) {
    
  } else {
    
  }
  sign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sign);
  // @@protoc_insertion_point(field_set_allocated:protos.GameLoginParam.sign)
}

// -------------------------------------------------------------------

// GameLoginRoute

// int64 client_sessionid = 1;
inline void GameLoginRoute::clear_client_sessionid() {
  client_sessionid_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 GameLoginRoute::client_sessionid() const {
  // @@protoc_insertion_point(field_get:protos.GameLoginRoute.client_sessionid)
  return client_sessionid_;
}
inline void GameLoginRoute::set_client_sessionid(::google::protobuf::int64 value) {
  
  client_sessionid_ = value;
  // @@protoc_insertion_point(field_set:protos.GameLoginRoute.client_sessionid)
}

// int32 gws_id = 2;
inline void GameLoginRoute::clear_gws_id() {
  gws_id_ = 0;
}
inline ::google::protobuf::int32 GameLoginRoute::gws_id() const {
  // @@protoc_insertion_point(field_get:protos.GameLoginRoute.gws_id)
  return gws_id_;
}
inline void GameLoginRoute::set_gws_id(::google::protobuf::int32 value) {
  
  gws_id_ = value;
  // @@protoc_insertion_point(field_set:protos.GameLoginRoute.gws_id)
}

// int32 gs_id = 3;
inline void GameLoginRoute::clear_gs_id() {
  gs_id_ = 0;
}
inline ::google::protobuf::int32 GameLoginRoute::gs_id() const {
  // @@protoc_insertion_point(field_get:protos.GameLoginRoute.gs_id)
  return gs_id_;
}
inline void GameLoginRoute::set_gs_id(::google::protobuf::int32 value) {
  
  gs_id_ = value;
  // @@protoc_insertion_point(field_set:protos.GameLoginRoute.gs_id)
}

// -------------------------------------------------------------------

// CGLogin

// .protos.GameLoginRoute route = 1;
inline bool CGLogin::has_route() const {
  return this != internal_default_instance() && route_ != nullptr;
}
inline void CGLogin::clear_route() {
  if (GetArenaNoVirtual() == nullptr && route_ != nullptr) {
    delete route_;
  }
  route_ = nullptr;
}
inline const ::protos::GameLoginRoute& CGLogin::route() const {
  const ::protos::GameLoginRoute* p = route_;
  // @@protoc_insertion_point(field_get:protos.CGLogin.route)
  return p != nullptr ? *p : *reinterpret_cast<const ::protos::GameLoginRoute*>(
      &::protos::_GameLoginRoute_default_instance_);
}
inline ::protos::GameLoginRoute* CGLogin::release_route() {
  // @@protoc_insertion_point(field_release:protos.CGLogin.route)
  
  ::protos::GameLoginRoute* temp = route_;
  route_ = nullptr;
  return temp;
}
inline ::protos::GameLoginRoute* CGLogin::mutable_route() {
  
  if (route_ == nullptr) {
    auto* p = CreateMaybeMessage<::protos::GameLoginRoute>(GetArenaNoVirtual());
    route_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protos.CGLogin.route)
  return route_;
}
inline void CGLogin::set_allocated_route(::protos::GameLoginRoute* route) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete route_;
  }
  if (route) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      route = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, route, submessage_arena);
    }
    
  } else {
    
  }
  route_ = route;
  // @@protoc_insertion_point(field_set_allocated:protos.CGLogin.route)
}

// .protos.GameLoginParam param = 2;
inline bool CGLogin::has_param() const {
  return this != internal_default_instance() && param_ != nullptr;
}
inline void CGLogin::clear_param() {
  if (GetArenaNoVirtual() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
}
inline const ::protos::GameLoginParam& CGLogin::param() const {
  const ::protos::GameLoginParam* p = param_;
  // @@protoc_insertion_point(field_get:protos.CGLogin.param)
  return p != nullptr ? *p : *reinterpret_cast<const ::protos::GameLoginParam*>(
      &::protos::_GameLoginParam_default_instance_);
}
inline ::protos::GameLoginParam* CGLogin::release_param() {
  // @@protoc_insertion_point(field_release:protos.CGLogin.param)
  
  ::protos::GameLoginParam* temp = param_;
  param_ = nullptr;
  return temp;
}
inline ::protos::GameLoginParam* CGLogin::mutable_param() {
  
  if (param_ == nullptr) {
    auto* p = CreateMaybeMessage<::protos::GameLoginParam>(GetArenaNoVirtual());
    param_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protos.CGLogin.param)
  return param_;
}
inline void CGLogin::set_allocated_param(::protos::GameLoginParam* param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete param_;
  }
  if (param) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, param, submessage_arena);
    }
    
  } else {
    
  }
  param_ = param;
  // @@protoc_insertion_point(field_set_allocated:protos.CGLogin.param)
}

// -------------------------------------------------------------------

// GCLogin

// int32 error = 1;
inline void GCLogin::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 GCLogin::error() const {
  // @@protoc_insertion_point(field_get:protos.GCLogin.error)
  return error_;
}
inline void GCLogin::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:protos.GCLogin.error)
}

// string errmsg = 2;
inline void GCLogin::clear_errmsg() {
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GCLogin::errmsg() const {
  // @@protoc_insertion_point(field_get:protos.GCLogin.errmsg)
  return errmsg_.GetNoArena();
}
inline void GCLogin::set_errmsg(const ::std::string& value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.GCLogin.errmsg)
}
#if LANG_CXX11
inline void GCLogin::set_errmsg(::std::string&& value) {
  
  errmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.GCLogin.errmsg)
}
#endif
inline void GCLogin::set_errmsg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.GCLogin.errmsg)
}
inline void GCLogin::set_errmsg(const char* value, size_t size) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.GCLogin.errmsg)
}
inline ::std::string* GCLogin::mutable_errmsg() {
  
  // @@protoc_insertion_point(field_mutable:protos.GCLogin.errmsg)
  return errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GCLogin::release_errmsg() {
  // @@protoc_insertion_point(field_release:protos.GCLogin.errmsg)
  
  return errmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GCLogin::set_allocated_errmsg(::std::string* errmsg) {
  if (errmsg != nullptr) {
    
  } else {
    
  }
  errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmsg);
  // @@protoc_insertion_point(field_set_allocated:protos.GCLogin.errmsg)
}

// .protos.GameLoginRoute route = 3;
inline bool GCLogin::has_route() const {
  return this != internal_default_instance() && route_ != nullptr;
}
inline void GCLogin::clear_route() {
  if (GetArenaNoVirtual() == nullptr && route_ != nullptr) {
    delete route_;
  }
  route_ = nullptr;
}
inline const ::protos::GameLoginRoute& GCLogin::route() const {
  const ::protos::GameLoginRoute* p = route_;
  // @@protoc_insertion_point(field_get:protos.GCLogin.route)
  return p != nullptr ? *p : *reinterpret_cast<const ::protos::GameLoginRoute*>(
      &::protos::_GameLoginRoute_default_instance_);
}
inline ::protos::GameLoginRoute* GCLogin::release_route() {
  // @@protoc_insertion_point(field_release:protos.GCLogin.route)
  
  ::protos::GameLoginRoute* temp = route_;
  route_ = nullptr;
  return temp;
}
inline ::protos::GameLoginRoute* GCLogin::mutable_route() {
  
  if (route_ == nullptr) {
    auto* p = CreateMaybeMessage<::protos::GameLoginRoute>(GetArenaNoVirtual());
    route_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protos.GCLogin.route)
  return route_;
}
inline void GCLogin::set_allocated_route(::protos::GameLoginRoute* route) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete route_;
  }
  if (route) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      route = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, route, submessage_arena);
    }
    
  } else {
    
  }
  route_ = route;
  // @@protoc_insertion_point(field_set_allocated:protos.GCLogin.route)
}

// string login_key = 4;
inline void GCLogin::clear_login_key() {
  login_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GCLogin::login_key() const {
  // @@protoc_insertion_point(field_get:protos.GCLogin.login_key)
  return login_key_.GetNoArena();
}
inline void GCLogin::set_login_key(const ::std::string& value) {
  
  login_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.GCLogin.login_key)
}
#if LANG_CXX11
inline void GCLogin::set_login_key(::std::string&& value) {
  
  login_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.GCLogin.login_key)
}
#endif
inline void GCLogin::set_login_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  login_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.GCLogin.login_key)
}
inline void GCLogin::set_login_key(const char* value, size_t size) {
  
  login_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.GCLogin.login_key)
}
inline ::std::string* GCLogin::mutable_login_key() {
  
  // @@protoc_insertion_point(field_mutable:protos.GCLogin.login_key)
  return login_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GCLogin::release_login_key() {
  // @@protoc_insertion_point(field_release:protos.GCLogin.login_key)
  
  return login_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GCLogin::set_allocated_login_key(::std::string* login_key) {
  if (login_key != nullptr) {
    
  } else {
    
  }
  login_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), login_key);
  // @@protoc_insertion_point(field_set_allocated:protos.GCLogin.login_key)
}

// int64 guid = 5;
inline void GCLogin::clear_guid() {
  guid_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 GCLogin::guid() const {
  // @@protoc_insertion_point(field_get:protos.GCLogin.guid)
  return guid_;
}
inline void GCLogin::set_guid(::google::protobuf::int64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protos.GCLogin.guid)
}

// string name = 6;
inline void GCLogin::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GCLogin::name() const {
  // @@protoc_insertion_point(field_get:protos.GCLogin.name)
  return name_.GetNoArena();
}
inline void GCLogin::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.GCLogin.name)
}
#if LANG_CXX11
inline void GCLogin::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.GCLogin.name)
}
#endif
inline void GCLogin::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.GCLogin.name)
}
inline void GCLogin::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.GCLogin.name)
}
inline ::std::string* GCLogin::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:protos.GCLogin.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GCLogin::release_name() {
  // @@protoc_insertion_point(field_release:protos.GCLogin.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GCLogin::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:protos.GCLogin.name)
}

// int32 portraitid = 7;
inline void GCLogin::clear_portraitid() {
  portraitid_ = 0;
}
inline ::google::protobuf::int32 GCLogin::portraitid() const {
  // @@protoc_insertion_point(field_get:protos.GCLogin.portraitid)
  return portraitid_;
}
inline void GCLogin::set_portraitid(::google::protobuf::int32 value) {
  
  portraitid_ = value;
  // @@protoc_insertion_point(field_set:protos.GCLogin.portraitid)
}

// int32 level = 8;
inline void GCLogin::clear_level() {
  level_ = 0;
}
inline ::google::protobuf::int32 GCLogin::level() const {
  // @@protoc_insertion_point(field_get:protos.GCLogin.level)
  return level_;
}
inline void GCLogin::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:protos.GCLogin.level)
}

// -------------------------------------------------------------------

// GWLogin

// .protos.GameLoginRoute route = 1;
inline bool GWLogin::has_route() const {
  return this != internal_default_instance() && route_ != nullptr;
}
inline void GWLogin::clear_route() {
  if (GetArenaNoVirtual() == nullptr && route_ != nullptr) {
    delete route_;
  }
  route_ = nullptr;
}
inline const ::protos::GameLoginRoute& GWLogin::route() const {
  const ::protos::GameLoginRoute* p = route_;
  // @@protoc_insertion_point(field_get:protos.GWLogin.route)
  return p != nullptr ? *p : *reinterpret_cast<const ::protos::GameLoginRoute*>(
      &::protos::_GameLoginRoute_default_instance_);
}
inline ::protos::GameLoginRoute* GWLogin::release_route() {
  // @@protoc_insertion_point(field_release:protos.GWLogin.route)
  
  ::protos::GameLoginRoute* temp = route_;
  route_ = nullptr;
  return temp;
}
inline ::protos::GameLoginRoute* GWLogin::mutable_route() {
  
  if (route_ == nullptr) {
    auto* p = CreateMaybeMessage<::protos::GameLoginRoute>(GetArenaNoVirtual());
    route_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protos.GWLogin.route)
  return route_;
}
inline void GWLogin::set_allocated_route(::protos::GameLoginRoute* route) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete route_;
  }
  if (route) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      route = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, route, submessage_arena);
    }
    
  } else {
    
  }
  route_ = route;
  // @@protoc_insertion_point(field_set_allocated:protos.GWLogin.route)
}

// .protos.GameLoginParam param = 2;
inline bool GWLogin::has_param() const {
  return this != internal_default_instance() && param_ != nullptr;
}
inline void GWLogin::clear_param() {
  if (GetArenaNoVirtual() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
}
inline const ::protos::GameLoginParam& GWLogin::param() const {
  const ::protos::GameLoginParam* p = param_;
  // @@protoc_insertion_point(field_get:protos.GWLogin.param)
  return p != nullptr ? *p : *reinterpret_cast<const ::protos::GameLoginParam*>(
      &::protos::_GameLoginParam_default_instance_);
}
inline ::protos::GameLoginParam* GWLogin::release_param() {
  // @@protoc_insertion_point(field_release:protos.GWLogin.param)
  
  ::protos::GameLoginParam* temp = param_;
  param_ = nullptr;
  return temp;
}
inline ::protos::GameLoginParam* GWLogin::mutable_param() {
  
  if (param_ == nullptr) {
    auto* p = CreateMaybeMessage<::protos::GameLoginParam>(GetArenaNoVirtual());
    param_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protos.GWLogin.param)
  return param_;
}
inline void GWLogin::set_allocated_param(::protos::GameLoginParam* param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete param_;
  }
  if (param) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, param, submessage_arena);
    }
    
  } else {
    
  }
  param_ = param;
  // @@protoc_insertion_point(field_set_allocated:protos.GWLogin.param)
}

// -------------------------------------------------------------------

// WGLogin

// int32 error = 1;
inline void WGLogin::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 WGLogin::error() const {
  // @@protoc_insertion_point(field_get:protos.WGLogin.error)
  return error_;
}
inline void WGLogin::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:protos.WGLogin.error)
}

// string errmsg = 2;
inline void WGLogin::clear_errmsg() {
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WGLogin::errmsg() const {
  // @@protoc_insertion_point(field_get:protos.WGLogin.errmsg)
  return errmsg_.GetNoArena();
}
inline void WGLogin::set_errmsg(const ::std::string& value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.WGLogin.errmsg)
}
#if LANG_CXX11
inline void WGLogin::set_errmsg(::std::string&& value) {
  
  errmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.WGLogin.errmsg)
}
#endif
inline void WGLogin::set_errmsg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.WGLogin.errmsg)
}
inline void WGLogin::set_errmsg(const char* value, size_t size) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.WGLogin.errmsg)
}
inline ::std::string* WGLogin::mutable_errmsg() {
  
  // @@protoc_insertion_point(field_mutable:protos.WGLogin.errmsg)
  return errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WGLogin::release_errmsg() {
  // @@protoc_insertion_point(field_release:protos.WGLogin.errmsg)
  
  return errmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WGLogin::set_allocated_errmsg(::std::string* errmsg) {
  if (errmsg != nullptr) {
    
  } else {
    
  }
  errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmsg);
  // @@protoc_insertion_point(field_set_allocated:protos.WGLogin.errmsg)
}

// .protos.GameLoginRoute route = 3;
inline bool WGLogin::has_route() const {
  return this != internal_default_instance() && route_ != nullptr;
}
inline void WGLogin::clear_route() {
  if (GetArenaNoVirtual() == nullptr && route_ != nullptr) {
    delete route_;
  }
  route_ = nullptr;
}
inline const ::protos::GameLoginRoute& WGLogin::route() const {
  const ::protos::GameLoginRoute* p = route_;
  // @@protoc_insertion_point(field_get:protos.WGLogin.route)
  return p != nullptr ? *p : *reinterpret_cast<const ::protos::GameLoginRoute*>(
      &::protos::_GameLoginRoute_default_instance_);
}
inline ::protos::GameLoginRoute* WGLogin::release_route() {
  // @@protoc_insertion_point(field_release:protos.WGLogin.route)
  
  ::protos::GameLoginRoute* temp = route_;
  route_ = nullptr;
  return temp;
}
inline ::protos::GameLoginRoute* WGLogin::mutable_route() {
  
  if (route_ == nullptr) {
    auto* p = CreateMaybeMessage<::protos::GameLoginRoute>(GetArenaNoVirtual());
    route_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protos.WGLogin.route)
  return route_;
}
inline void WGLogin::set_allocated_route(::protos::GameLoginRoute* route) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete route_;
  }
  if (route) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      route = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, route, submessage_arena);
    }
    
  } else {
    
  }
  route_ = route;
  // @@protoc_insertion_point(field_set_allocated:protos.WGLogin.route)
}

// .protos.GameLoginParam param = 4;
inline bool WGLogin::has_param() const {
  return this != internal_default_instance() && param_ != nullptr;
}
inline void WGLogin::clear_param() {
  if (GetArenaNoVirtual() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
}
inline const ::protos::GameLoginParam& WGLogin::param() const {
  const ::protos::GameLoginParam* p = param_;
  // @@protoc_insertion_point(field_get:protos.WGLogin.param)
  return p != nullptr ? *p : *reinterpret_cast<const ::protos::GameLoginParam*>(
      &::protos::_GameLoginParam_default_instance_);
}
inline ::protos::GameLoginParam* WGLogin::release_param() {
  // @@protoc_insertion_point(field_release:protos.WGLogin.param)
  
  ::protos::GameLoginParam* temp = param_;
  param_ = nullptr;
  return temp;
}
inline ::protos::GameLoginParam* WGLogin::mutable_param() {
  
  if (param_ == nullptr) {
    auto* p = CreateMaybeMessage<::protos::GameLoginParam>(GetArenaNoVirtual());
    param_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protos.WGLogin.param)
  return param_;
}
inline void WGLogin::set_allocated_param(::protos::GameLoginParam* param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete param_;
  }
  if (param) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, param, submessage_arena);
    }
    
  } else {
    
  }
  param_ = param;
  // @@protoc_insertion_point(field_set_allocated:protos.WGLogin.param)
}

// int64 guid = 5;
inline void WGLogin::clear_guid() {
  guid_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 WGLogin::guid() const {
  // @@protoc_insertion_point(field_get:protos.WGLogin.guid)
  return guid_;
}
inline void WGLogin::set_guid(::google::protobuf::int64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protos.WGLogin.guid)
}

// -------------------------------------------------------------------

// CGReconnLogin

// .protos.GameLoginRoute route = 1;
inline bool CGReconnLogin::has_route() const {
  return this != internal_default_instance() && route_ != nullptr;
}
inline void CGReconnLogin::clear_route() {
  if (GetArenaNoVirtual() == nullptr && route_ != nullptr) {
    delete route_;
  }
  route_ = nullptr;
}
inline const ::protos::GameLoginRoute& CGReconnLogin::route() const {
  const ::protos::GameLoginRoute* p = route_;
  // @@protoc_insertion_point(field_get:protos.CGReconnLogin.route)
  return p != nullptr ? *p : *reinterpret_cast<const ::protos::GameLoginRoute*>(
      &::protos::_GameLoginRoute_default_instance_);
}
inline ::protos::GameLoginRoute* CGReconnLogin::release_route() {
  // @@protoc_insertion_point(field_release:protos.CGReconnLogin.route)
  
  ::protos::GameLoginRoute* temp = route_;
  route_ = nullptr;
  return temp;
}
inline ::protos::GameLoginRoute* CGReconnLogin::mutable_route() {
  
  if (route_ == nullptr) {
    auto* p = CreateMaybeMessage<::protos::GameLoginRoute>(GetArenaNoVirtual());
    route_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protos.CGReconnLogin.route)
  return route_;
}
inline void CGReconnLogin::set_allocated_route(::protos::GameLoginRoute* route) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete route_;
  }
  if (route) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      route = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, route, submessage_arena);
    }
    
  } else {
    
  }
  route_ = route;
  // @@protoc_insertion_point(field_set_allocated:protos.CGReconnLogin.route)
}

// string login_key = 2;
inline void CGReconnLogin::clear_login_key() {
  login_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CGReconnLogin::login_key() const {
  // @@protoc_insertion_point(field_get:protos.CGReconnLogin.login_key)
  return login_key_.GetNoArena();
}
inline void CGReconnLogin::set_login_key(const ::std::string& value) {
  
  login_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.CGReconnLogin.login_key)
}
#if LANG_CXX11
inline void CGReconnLogin::set_login_key(::std::string&& value) {
  
  login_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.CGReconnLogin.login_key)
}
#endif
inline void CGReconnLogin::set_login_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  login_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.CGReconnLogin.login_key)
}
inline void CGReconnLogin::set_login_key(const char* value, size_t size) {
  
  login_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.CGReconnLogin.login_key)
}
inline ::std::string* CGReconnLogin::mutable_login_key() {
  
  // @@protoc_insertion_point(field_mutable:protos.CGReconnLogin.login_key)
  return login_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CGReconnLogin::release_login_key() {
  // @@protoc_insertion_point(field_release:protos.CGReconnLogin.login_key)
  
  return login_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CGReconnLogin::set_allocated_login_key(::std::string* login_key) {
  if (login_key != nullptr) {
    
  } else {
    
  }
  login_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), login_key);
  // @@protoc_insertion_point(field_set_allocated:protos.CGReconnLogin.login_key)
}

// -------------------------------------------------------------------

// GCReconnLogin

// int32 error = 1;
inline void GCReconnLogin::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 GCReconnLogin::error() const {
  // @@protoc_insertion_point(field_get:protos.GCReconnLogin.error)
  return error_;
}
inline void GCReconnLogin::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:protos.GCReconnLogin.error)
}

// string errmsg = 2;
inline void GCReconnLogin::clear_errmsg() {
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GCReconnLogin::errmsg() const {
  // @@protoc_insertion_point(field_get:protos.GCReconnLogin.errmsg)
  return errmsg_.GetNoArena();
}
inline void GCReconnLogin::set_errmsg(const ::std::string& value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.GCReconnLogin.errmsg)
}
#if LANG_CXX11
inline void GCReconnLogin::set_errmsg(::std::string&& value) {
  
  errmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.GCReconnLogin.errmsg)
}
#endif
inline void GCReconnLogin::set_errmsg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.GCReconnLogin.errmsg)
}
inline void GCReconnLogin::set_errmsg(const char* value, size_t size) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.GCReconnLogin.errmsg)
}
inline ::std::string* GCReconnLogin::mutable_errmsg() {
  
  // @@protoc_insertion_point(field_mutable:protos.GCReconnLogin.errmsg)
  return errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GCReconnLogin::release_errmsg() {
  // @@protoc_insertion_point(field_release:protos.GCReconnLogin.errmsg)
  
  return errmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GCReconnLogin::set_allocated_errmsg(::std::string* errmsg) {
  if (errmsg != nullptr) {
    
  } else {
    
  }
  errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmsg);
  // @@protoc_insertion_point(field_set_allocated:protos.GCReconnLogin.errmsg)
}

// .protos.GameLoginRoute route = 3;
inline bool GCReconnLogin::has_route() const {
  return this != internal_default_instance() && route_ != nullptr;
}
inline void GCReconnLogin::clear_route() {
  if (GetArenaNoVirtual() == nullptr && route_ != nullptr) {
    delete route_;
  }
  route_ = nullptr;
}
inline const ::protos::GameLoginRoute& GCReconnLogin::route() const {
  const ::protos::GameLoginRoute* p = route_;
  // @@protoc_insertion_point(field_get:protos.GCReconnLogin.route)
  return p != nullptr ? *p : *reinterpret_cast<const ::protos::GameLoginRoute*>(
      &::protos::_GameLoginRoute_default_instance_);
}
inline ::protos::GameLoginRoute* GCReconnLogin::release_route() {
  // @@protoc_insertion_point(field_release:protos.GCReconnLogin.route)
  
  ::protos::GameLoginRoute* temp = route_;
  route_ = nullptr;
  return temp;
}
inline ::protos::GameLoginRoute* GCReconnLogin::mutable_route() {
  
  if (route_ == nullptr) {
    auto* p = CreateMaybeMessage<::protos::GameLoginRoute>(GetArenaNoVirtual());
    route_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protos.GCReconnLogin.route)
  return route_;
}
inline void GCReconnLogin::set_allocated_route(::protos::GameLoginRoute* route) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete route_;
  }
  if (route) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      route = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, route, submessage_arena);
    }
    
  } else {
    
  }
  route_ = route;
  // @@protoc_insertion_point(field_set_allocated:protos.GCReconnLogin.route)
}

// int64 guid = 4;
inline void GCReconnLogin::clear_guid() {
  guid_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 GCReconnLogin::guid() const {
  // @@protoc_insertion_point(field_get:protos.GCReconnLogin.guid)
  return guid_;
}
inline void GCReconnLogin::set_guid(::google::protobuf::int64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protos.GCReconnLogin.guid)
}

// -------------------------------------------------------------------

// GWS2WReconnLogin

// int64 guid = 1;
inline void GWS2WReconnLogin::clear_guid() {
  guid_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 GWS2WReconnLogin::guid() const {
  // @@protoc_insertion_point(field_get:protos.GWS2WReconnLogin.guid)
  return guid_;
}
inline void GWS2WReconnLogin::set_guid(::google::protobuf::int64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protos.GWS2WReconnLogin.guid)
}

// -------------------------------------------------------------------

// W2GWSReconnLogin

// int32 error = 1;
inline void W2GWSReconnLogin::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 W2GWSReconnLogin::error() const {
  // @@protoc_insertion_point(field_get:protos.W2GWSReconnLogin.error)
  return error_;
}
inline void W2GWSReconnLogin::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:protos.W2GWSReconnLogin.error)
}

// string errmsg = 2;
inline void W2GWSReconnLogin::clear_errmsg() {
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& W2GWSReconnLogin::errmsg() const {
  // @@protoc_insertion_point(field_get:protos.W2GWSReconnLogin.errmsg)
  return errmsg_.GetNoArena();
}
inline void W2GWSReconnLogin::set_errmsg(const ::std::string& value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.W2GWSReconnLogin.errmsg)
}
#if LANG_CXX11
inline void W2GWSReconnLogin::set_errmsg(::std::string&& value) {
  
  errmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.W2GWSReconnLogin.errmsg)
}
#endif
inline void W2GWSReconnLogin::set_errmsg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.W2GWSReconnLogin.errmsg)
}
inline void W2GWSReconnLogin::set_errmsg(const char* value, size_t size) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.W2GWSReconnLogin.errmsg)
}
inline ::std::string* W2GWSReconnLogin::mutable_errmsg() {
  
  // @@protoc_insertion_point(field_mutable:protos.W2GWSReconnLogin.errmsg)
  return errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* W2GWSReconnLogin::release_errmsg() {
  // @@protoc_insertion_point(field_release:protos.W2GWSReconnLogin.errmsg)
  
  return errmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void W2GWSReconnLogin::set_allocated_errmsg(::std::string* errmsg) {
  if (errmsg != nullptr) {
    
  } else {
    
  }
  errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmsg);
  // @@protoc_insertion_point(field_set_allocated:protos.W2GWSReconnLogin.errmsg)
}

// int64 guid = 3;
inline void W2GWSReconnLogin::clear_guid() {
  guid_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 W2GWSReconnLogin::guid() const {
  // @@protoc_insertion_point(field_get:protos.W2GWSReconnLogin.guid)
  return guid_;
}
inline void W2GWSReconnLogin::set_guid(::google::protobuf::int64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protos.W2GWSReconnLogin.guid)
}

// -------------------------------------------------------------------

// GWS2GDisconnect

// int64 guid = 1;
inline void GWS2GDisconnect::clear_guid() {
  guid_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 GWS2GDisconnect::guid() const {
  // @@protoc_insertion_point(field_get:protos.GWS2GDisconnect.guid)
  return guid_;
}
inline void GWS2GDisconnect::set_guid(::google::protobuf::int64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protos.GWS2GDisconnect.guid)
}

// -------------------------------------------------------------------

// G2GWSDisconnect

// int32 error = 1;
inline void G2GWSDisconnect::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 G2GWSDisconnect::error() const {
  // @@protoc_insertion_point(field_get:protos.G2GWSDisconnect.error)
  return error_;
}
inline void G2GWSDisconnect::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:protos.G2GWSDisconnect.error)
}

// string errmsg = 2;
inline void G2GWSDisconnect::clear_errmsg() {
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& G2GWSDisconnect::errmsg() const {
  // @@protoc_insertion_point(field_get:protos.G2GWSDisconnect.errmsg)
  return errmsg_.GetNoArena();
}
inline void G2GWSDisconnect::set_errmsg(const ::std::string& value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.G2GWSDisconnect.errmsg)
}
#if LANG_CXX11
inline void G2GWSDisconnect::set_errmsg(::std::string&& value) {
  
  errmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.G2GWSDisconnect.errmsg)
}
#endif
inline void G2GWSDisconnect::set_errmsg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.G2GWSDisconnect.errmsg)
}
inline void G2GWSDisconnect::set_errmsg(const char* value, size_t size) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.G2GWSDisconnect.errmsg)
}
inline ::std::string* G2GWSDisconnect::mutable_errmsg() {
  
  // @@protoc_insertion_point(field_mutable:protos.G2GWSDisconnect.errmsg)
  return errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* G2GWSDisconnect::release_errmsg() {
  // @@protoc_insertion_point(field_release:protos.G2GWSDisconnect.errmsg)
  
  return errmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void G2GWSDisconnect::set_allocated_errmsg(::std::string* errmsg) {
  if (errmsg != nullptr) {
    
  } else {
    
  }
  errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmsg);
  // @@protoc_insertion_point(field_set_allocated:protos.G2GWSDisconnect.errmsg)
}

// int64 guid = 3;
inline void G2GWSDisconnect::clear_guid() {
  guid_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 G2GWSDisconnect::guid() const {
  // @@protoc_insertion_point(field_get:protos.G2GWSDisconnect.guid)
  return guid_;
}
inline void G2GWSDisconnect::set_guid(::google::protobuf::int64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protos.G2GWSDisconnect.guid)
}

// -------------------------------------------------------------------

// GWS2WDisconnect

// int64 guid = 1;
inline void GWS2WDisconnect::clear_guid() {
  guid_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 GWS2WDisconnect::guid() const {
  // @@protoc_insertion_point(field_get:protos.GWS2WDisconnect.guid)
  return guid_;
}
inline void GWS2WDisconnect::set_guid(::google::protobuf::int64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protos.GWS2WDisconnect.guid)
}

// -------------------------------------------------------------------

// W2GWSDisconnect

// int32 error = 1;
inline void W2GWSDisconnect::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 W2GWSDisconnect::error() const {
  // @@protoc_insertion_point(field_get:protos.W2GWSDisconnect.error)
  return error_;
}
inline void W2GWSDisconnect::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:protos.W2GWSDisconnect.error)
}

// string errmsg = 2;
inline void W2GWSDisconnect::clear_errmsg() {
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& W2GWSDisconnect::errmsg() const {
  // @@protoc_insertion_point(field_get:protos.W2GWSDisconnect.errmsg)
  return errmsg_.GetNoArena();
}
inline void W2GWSDisconnect::set_errmsg(const ::std::string& value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.W2GWSDisconnect.errmsg)
}
#if LANG_CXX11
inline void W2GWSDisconnect::set_errmsg(::std::string&& value) {
  
  errmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.W2GWSDisconnect.errmsg)
}
#endif
inline void W2GWSDisconnect::set_errmsg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.W2GWSDisconnect.errmsg)
}
inline void W2GWSDisconnect::set_errmsg(const char* value, size_t size) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.W2GWSDisconnect.errmsg)
}
inline ::std::string* W2GWSDisconnect::mutable_errmsg() {
  
  // @@protoc_insertion_point(field_mutable:protos.W2GWSDisconnect.errmsg)
  return errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* W2GWSDisconnect::release_errmsg() {
  // @@protoc_insertion_point(field_release:protos.W2GWSDisconnect.errmsg)
  
  return errmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void W2GWSDisconnect::set_allocated_errmsg(::std::string* errmsg) {
  if (errmsg != nullptr) {
    
  } else {
    
  }
  errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmsg);
  // @@protoc_insertion_point(field_set_allocated:protos.W2GWSDisconnect.errmsg)
}

// int64 guid = 3;
inline void W2GWSDisconnect::clear_guid() {
  guid_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 W2GWSDisconnect::guid() const {
  // @@protoc_insertion_point(field_get:protos.W2GWSDisconnect.guid)
  return guid_;
}
inline void W2GWSDisconnect::set_guid(::google::protobuf::int64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protos.W2GWSDisconnect.guid)
}

// -------------------------------------------------------------------

// G2GWSKickPlayer

// int32 error = 1;
inline void G2GWSKickPlayer::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 G2GWSKickPlayer::error() const {
  // @@protoc_insertion_point(field_get:protos.G2GWSKickPlayer.error)
  return error_;
}
inline void G2GWSKickPlayer::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:protos.G2GWSKickPlayer.error)
}

// string errmsg = 2;
inline void G2GWSKickPlayer::clear_errmsg() {
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& G2GWSKickPlayer::errmsg() const {
  // @@protoc_insertion_point(field_get:protos.G2GWSKickPlayer.errmsg)
  return errmsg_.GetNoArena();
}
inline void G2GWSKickPlayer::set_errmsg(const ::std::string& value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.G2GWSKickPlayer.errmsg)
}
#if LANG_CXX11
inline void G2GWSKickPlayer::set_errmsg(::std::string&& value) {
  
  errmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.G2GWSKickPlayer.errmsg)
}
#endif
inline void G2GWSKickPlayer::set_errmsg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.G2GWSKickPlayer.errmsg)
}
inline void G2GWSKickPlayer::set_errmsg(const char* value, size_t size) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.G2GWSKickPlayer.errmsg)
}
inline ::std::string* G2GWSKickPlayer::mutable_errmsg() {
  
  // @@protoc_insertion_point(field_mutable:protos.G2GWSKickPlayer.errmsg)
  return errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* G2GWSKickPlayer::release_errmsg() {
  // @@protoc_insertion_point(field_release:protos.G2GWSKickPlayer.errmsg)
  
  return errmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void G2GWSKickPlayer::set_allocated_errmsg(::std::string* errmsg) {
  if (errmsg != nullptr) {
    
  } else {
    
  }
  errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmsg);
  // @@protoc_insertion_point(field_set_allocated:protos.G2GWSKickPlayer.errmsg)
}

// int64 guid = 3;
inline void G2GWSKickPlayer::clear_guid() {
  guid_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 G2GWSKickPlayer::guid() const {
  // @@protoc_insertion_point(field_get:protos.G2GWSKickPlayer.guid)
  return guid_;
}
inline void G2GWSKickPlayer::set_guid(::google::protobuf::int64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protos.G2GWSKickPlayer.guid)
}

// -------------------------------------------------------------------

// W2GWSKickPlayer

// int32 error = 1;
inline void W2GWSKickPlayer::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 W2GWSKickPlayer::error() const {
  // @@protoc_insertion_point(field_get:protos.W2GWSKickPlayer.error)
  return error_;
}
inline void W2GWSKickPlayer::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:protos.W2GWSKickPlayer.error)
}

// string errmsg = 2;
inline void W2GWSKickPlayer::clear_errmsg() {
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& W2GWSKickPlayer::errmsg() const {
  // @@protoc_insertion_point(field_get:protos.W2GWSKickPlayer.errmsg)
  return errmsg_.GetNoArena();
}
inline void W2GWSKickPlayer::set_errmsg(const ::std::string& value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.W2GWSKickPlayer.errmsg)
}
#if LANG_CXX11
inline void W2GWSKickPlayer::set_errmsg(::std::string&& value) {
  
  errmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.W2GWSKickPlayer.errmsg)
}
#endif
inline void W2GWSKickPlayer::set_errmsg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.W2GWSKickPlayer.errmsg)
}
inline void W2GWSKickPlayer::set_errmsg(const char* value, size_t size) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.W2GWSKickPlayer.errmsg)
}
inline ::std::string* W2GWSKickPlayer::mutable_errmsg() {
  
  // @@protoc_insertion_point(field_mutable:protos.W2GWSKickPlayer.errmsg)
  return errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* W2GWSKickPlayer::release_errmsg() {
  // @@protoc_insertion_point(field_release:protos.W2GWSKickPlayer.errmsg)
  
  return errmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void W2GWSKickPlayer::set_allocated_errmsg(::std::string* errmsg) {
  if (errmsg != nullptr) {
    
  } else {
    
  }
  errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmsg);
  // @@protoc_insertion_point(field_set_allocated:protos.W2GWSKickPlayer.errmsg)
}

// int64 guid = 3;
inline void W2GWSKickPlayer::clear_guid() {
  guid_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 W2GWSKickPlayer::guid() const {
  // @@protoc_insertion_point(field_get:protos.W2GWSKickPlayer.guid)
  return guid_;
}
inline void W2GWSKickPlayer::set_guid(::google::protobuf::int64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protos.W2GWSKickPlayer.guid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protos

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_login2game_2eproto
