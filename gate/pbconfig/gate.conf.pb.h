// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gate.conf.proto

#ifndef PROTOBUF_INCLUDED_gate_2econf_2eproto
#define PROTOBUF_INCLUDED_gate_2econf_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_gate_2econf_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_gate_2econf_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_gate_2econf_2eproto();
namespace pbconfig {
class GateConfig;
class GateConfigDefaultTypeInternal;
extern GateConfigDefaultTypeInternal _GateConfig_default_instance_;
class GateConfig_DatabaseModule;
class GateConfig_DatabaseModuleDefaultTypeInternal;
extern GateConfig_DatabaseModuleDefaultTypeInternal _GateConfig_DatabaseModule_default_instance_;
class GateConfig_LogicModule;
class GateConfig_LogicModuleDefaultTypeInternal;
extern GateConfig_LogicModuleDefaultTypeInternal _GateConfig_LogicModule_default_instance_;
class GateConfig_NetworkModule;
class GateConfig_NetworkModuleDefaultTypeInternal;
extern GateConfig_NetworkModuleDefaultTypeInternal _GateConfig_NetworkModule_default_instance_;
class GateConfig_ResourceModule;
class GateConfig_ResourceModuleDefaultTypeInternal;
extern GateConfig_ResourceModuleDefaultTypeInternal _GateConfig_ResourceModule_default_instance_;
}  // namespace pbconfig
namespace google {
namespace protobuf {
template<> ::pbconfig::GateConfig* Arena::CreateMaybeMessage<::pbconfig::GateConfig>(Arena*);
template<> ::pbconfig::GateConfig_DatabaseModule* Arena::CreateMaybeMessage<::pbconfig::GateConfig_DatabaseModule>(Arena*);
template<> ::pbconfig::GateConfig_LogicModule* Arena::CreateMaybeMessage<::pbconfig::GateConfig_LogicModule>(Arena*);
template<> ::pbconfig::GateConfig_NetworkModule* Arena::CreateMaybeMessage<::pbconfig::GateConfig_NetworkModule>(Arena*);
template<> ::pbconfig::GateConfig_ResourceModule* Arena::CreateMaybeMessage<::pbconfig::GateConfig_ResourceModule>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace pbconfig {

// ===================================================================

class GateConfig_ResourceModule :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbconfig.GateConfig.ResourceModule) */ {
 public:
  GateConfig_ResourceModule();
  virtual ~GateConfig_ResourceModule();

  GateConfig_ResourceModule(const GateConfig_ResourceModule& from);

  inline GateConfig_ResourceModule& operator=(const GateConfig_ResourceModule& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GateConfig_ResourceModule(GateConfig_ResourceModule&& from) noexcept
    : GateConfig_ResourceModule() {
    *this = ::std::move(from);
  }

  inline GateConfig_ResourceModule& operator=(GateConfig_ResourceModule&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GateConfig_ResourceModule& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GateConfig_ResourceModule* internal_default_instance() {
    return reinterpret_cast<const GateConfig_ResourceModule*>(
               &_GateConfig_ResourceModule_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(GateConfig_ResourceModule* other);
  friend void swap(GateConfig_ResourceModule& a, GateConfig_ResourceModule& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GateConfig_ResourceModule* New() const final {
    return CreateMaybeMessage<GateConfig_ResourceModule>(nullptr);
  }

  GateConfig_ResourceModule* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GateConfig_ResourceModule>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GateConfig_ResourceModule& from);
  void MergeFrom(const GateConfig_ResourceModule& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GateConfig_ResourceModule* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pbconfig.GateConfig.ResourceModule)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gate_2econf_2eproto;
};
// -------------------------------------------------------------------

class GateConfig_LogicModule :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbconfig.GateConfig.LogicModule) */ {
 public:
  GateConfig_LogicModule();
  virtual ~GateConfig_LogicModule();

  GateConfig_LogicModule(const GateConfig_LogicModule& from);

  inline GateConfig_LogicModule& operator=(const GateConfig_LogicModule& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GateConfig_LogicModule(GateConfig_LogicModule&& from) noexcept
    : GateConfig_LogicModule() {
    *this = ::std::move(from);
  }

  inline GateConfig_LogicModule& operator=(GateConfig_LogicModule&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GateConfig_LogicModule& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GateConfig_LogicModule* internal_default_instance() {
    return reinterpret_cast<const GateConfig_LogicModule*>(
               &_GateConfig_LogicModule_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(GateConfig_LogicModule* other);
  friend void swap(GateConfig_LogicModule& a, GateConfig_LogicModule& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GateConfig_LogicModule* New() const final {
    return CreateMaybeMessage<GateConfig_LogicModule>(nullptr);
  }

  GateConfig_LogicModule* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GateConfig_LogicModule>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GateConfig_LogicModule& from);
  void MergeFrom(const GateConfig_LogicModule& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GateConfig_LogicModule* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 work_thread_num = 1;
  void clear_work_thread_num();
  static const int kWorkThreadNumFieldNumber = 1;
  ::google::protobuf::uint32 work_thread_num() const;
  void set_work_thread_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pbconfig.GateConfig.LogicModule)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 work_thread_num_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gate_2econf_2eproto;
};
// -------------------------------------------------------------------

class GateConfig_DatabaseModule :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbconfig.GateConfig.DatabaseModule) */ {
 public:
  GateConfig_DatabaseModule();
  virtual ~GateConfig_DatabaseModule();

  GateConfig_DatabaseModule(const GateConfig_DatabaseModule& from);

  inline GateConfig_DatabaseModule& operator=(const GateConfig_DatabaseModule& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GateConfig_DatabaseModule(GateConfig_DatabaseModule&& from) noexcept
    : GateConfig_DatabaseModule() {
    *this = ::std::move(from);
  }

  inline GateConfig_DatabaseModule& operator=(GateConfig_DatabaseModule&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GateConfig_DatabaseModule& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GateConfig_DatabaseModule* internal_default_instance() {
    return reinterpret_cast<const GateConfig_DatabaseModule*>(
               &_GateConfig_DatabaseModule_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(GateConfig_DatabaseModule* other);
  friend void swap(GateConfig_DatabaseModule& a, GateConfig_DatabaseModule& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GateConfig_DatabaseModule* New() const final {
    return CreateMaybeMessage<GateConfig_DatabaseModule>(nullptr);
  }

  GateConfig_DatabaseModule* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GateConfig_DatabaseModule>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GateConfig_DatabaseModule& from);
  void MergeFrom(const GateConfig_DatabaseModule& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GateConfig_DatabaseModule* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pbconfig.GateConfig.DatabaseModule)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gate_2econf_2eproto;
};
// -------------------------------------------------------------------

class GateConfig_NetworkModule :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbconfig.GateConfig.NetworkModule) */ {
 public:
  GateConfig_NetworkModule();
  virtual ~GateConfig_NetworkModule();

  GateConfig_NetworkModule(const GateConfig_NetworkModule& from);

  inline GateConfig_NetworkModule& operator=(const GateConfig_NetworkModule& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GateConfig_NetworkModule(GateConfig_NetworkModule&& from) noexcept
    : GateConfig_NetworkModule() {
    *this = ::std::move(from);
  }

  inline GateConfig_NetworkModule& operator=(GateConfig_NetworkModule&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GateConfig_NetworkModule& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GateConfig_NetworkModule* internal_default_instance() {
    return reinterpret_cast<const GateConfig_NetworkModule*>(
               &_GateConfig_NetworkModule_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(GateConfig_NetworkModule* other);
  friend void swap(GateConfig_NetworkModule& a, GateConfig_NetworkModule& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GateConfig_NetworkModule* New() const final {
    return CreateMaybeMessage<GateConfig_NetworkModule>(nullptr);
  }

  GateConfig_NetworkModule* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GateConfig_NetworkModule>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GateConfig_NetworkModule& from);
  void MergeFrom(const GateConfig_NetworkModule& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GateConfig_NetworkModule* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string from_c_listen_host = 1;
  void clear_from_c_listen_host();
  static const int kFromCListenHostFieldNumber = 1;
  const ::std::string& from_c_listen_host() const;
  void set_from_c_listen_host(const ::std::string& value);
  #if LANG_CXX11
  void set_from_c_listen_host(::std::string&& value);
  #endif
  void set_from_c_listen_host(const char* value);
  void set_from_c_listen_host(const char* value, size_t size);
  ::std::string* mutable_from_c_listen_host();
  ::std::string* release_from_c_listen_host();
  void set_allocated_from_c_listen_host(::std::string* from_c_listen_host);

  // string from_c_cert_filename = 4;
  void clear_from_c_cert_filename();
  static const int kFromCCertFilenameFieldNumber = 4;
  const ::std::string& from_c_cert_filename() const;
  void set_from_c_cert_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_from_c_cert_filename(::std::string&& value);
  #endif
  void set_from_c_cert_filename(const char* value);
  void set_from_c_cert_filename(const char* value, size_t size);
  ::std::string* mutable_from_c_cert_filename();
  ::std::string* release_from_c_cert_filename();
  void set_allocated_from_c_cert_filename(::std::string* from_c_cert_filename);

  // string from_c_key_filename = 5;
  void clear_from_c_key_filename();
  static const int kFromCKeyFilenameFieldNumber = 5;
  const ::std::string& from_c_key_filename() const;
  void set_from_c_key_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_from_c_key_filename(::std::string&& value);
  #endif
  void set_from_c_key_filename(const char* value);
  void set_from_c_key_filename(const char* value, size_t size);
  ::std::string* mutable_from_c_key_filename();
  ::std::string* release_from_c_key_filename();
  void set_allocated_from_c_key_filename(::std::string* from_c_key_filename);

  // string from_c_key_filepassword = 6;
  void clear_from_c_key_filepassword();
  static const int kFromCKeyFilepasswordFieldNumber = 6;
  const ::std::string& from_c_key_filepassword() const;
  void set_from_c_key_filepassword(const ::std::string& value);
  #if LANG_CXX11
  void set_from_c_key_filepassword(::std::string&& value);
  #endif
  void set_from_c_key_filepassword(const char* value);
  void set_from_c_key_filepassword(const char* value, size_t size);
  ::std::string* mutable_from_c_key_filepassword();
  ::std::string* release_from_c_key_filepassword();
  void set_allocated_from_c_key_filepassword(::std::string* from_c_key_filepassword);

  // string from_c_http_listen_ports = 7;
  void clear_from_c_http_listen_ports();
  static const int kFromCHttpListenPortsFieldNumber = 7;
  const ::std::string& from_c_http_listen_ports() const;
  void set_from_c_http_listen_ports(const ::std::string& value);
  #if LANG_CXX11
  void set_from_c_http_listen_ports(::std::string&& value);
  #endif
  void set_from_c_http_listen_ports(const char* value);
  void set_from_c_http_listen_ports(const char* value, size_t size);
  ::std::string* mutable_from_c_http_listen_ports();
  ::std::string* release_from_c_http_listen_ports();
  void set_allocated_from_c_http_listen_ports(::std::string* from_c_http_listen_ports);

  // string to_ws_remote_addr = 9;
  void clear_to_ws_remote_addr();
  static const int kToWsRemoteAddrFieldNumber = 9;
  const ::std::string& to_ws_remote_addr() const;
  void set_to_ws_remote_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_to_ws_remote_addr(::std::string&& value);
  #endif
  void set_to_ws_remote_addr(const char* value);
  void set_to_ws_remote_addr(const char* value, size_t size);
  ::std::string* mutable_to_ws_remote_addr();
  ::std::string* release_to_ws_remote_addr();
  void set_allocated_to_ws_remote_addr(::std::string* to_ws_remote_addr);

  // string to_gs_remote_addr = 12;
  void clear_to_gs_remote_addr();
  static const int kToGsRemoteAddrFieldNumber = 12;
  const ::std::string& to_gs_remote_addr() const;
  void set_to_gs_remote_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_to_gs_remote_addr(::std::string&& value);
  #endif
  void set_to_gs_remote_addr(const char* value);
  void set_to_gs_remote_addr(const char* value, size_t size);
  ::std::string* mutable_to_gs_remote_addr();
  ::std::string* release_to_gs_remote_addr();
  void set_allocated_to_gs_remote_addr(::std::string* to_gs_remote_addr);

  // int32 from_c_listen_port = 2;
  void clear_from_c_listen_port();
  static const int kFromCListenPortFieldNumber = 2;
  ::google::protobuf::int32 from_c_listen_port() const;
  void set_from_c_listen_port(::google::protobuf::int32 value);

  // uint32 from_c_session_num = 3;
  void clear_from_c_session_num();
  static const int kFromCSessionNumFieldNumber = 3;
  ::google::protobuf::uint32 from_c_session_num() const;
  void set_from_c_session_num(::google::protobuf::uint32 value);

  // uint32 from_c_http_thread_num = 8;
  void clear_from_c_http_thread_num();
  static const int kFromCHttpThreadNumFieldNumber = 8;
  ::google::protobuf::uint32 from_c_http_thread_num() const;
  void set_from_c_http_thread_num(::google::protobuf::uint32 value);

  // uint32 to_ws_thread_num = 10;
  void clear_to_ws_thread_num();
  static const int kToWsThreadNumFieldNumber = 10;
  ::google::protobuf::uint32 to_ws_thread_num() const;
  void set_to_ws_thread_num(::google::protobuf::uint32 value);

  // uint32 to_ws_session_num = 11;
  void clear_to_ws_session_num();
  static const int kToWsSessionNumFieldNumber = 11;
  ::google::protobuf::uint32 to_ws_session_num() const;
  void set_to_ws_session_num(::google::protobuf::uint32 value);

  // uint32 to_gs_thread_num = 13;
  void clear_to_gs_thread_num();
  static const int kToGsThreadNumFieldNumber = 13;
  ::google::protobuf::uint32 to_gs_thread_num() const;
  void set_to_gs_thread_num(::google::protobuf::uint32 value);

  // uint32 to_gs_session_num = 14;
  void clear_to_gs_session_num();
  static const int kToGsSessionNumFieldNumber = 14;
  ::google::protobuf::uint32 to_gs_session_num() const;
  void set_to_gs_session_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pbconfig.GateConfig.NetworkModule)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr from_c_listen_host_;
  ::google::protobuf::internal::ArenaStringPtr from_c_cert_filename_;
  ::google::protobuf::internal::ArenaStringPtr from_c_key_filename_;
  ::google::protobuf::internal::ArenaStringPtr from_c_key_filepassword_;
  ::google::protobuf::internal::ArenaStringPtr from_c_http_listen_ports_;
  ::google::protobuf::internal::ArenaStringPtr to_ws_remote_addr_;
  ::google::protobuf::internal::ArenaStringPtr to_gs_remote_addr_;
  ::google::protobuf::int32 from_c_listen_port_;
  ::google::protobuf::uint32 from_c_session_num_;
  ::google::protobuf::uint32 from_c_http_thread_num_;
  ::google::protobuf::uint32 to_ws_thread_num_;
  ::google::protobuf::uint32 to_ws_session_num_;
  ::google::protobuf::uint32 to_gs_thread_num_;
  ::google::protobuf::uint32 to_gs_session_num_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gate_2econf_2eproto;
};
// -------------------------------------------------------------------

class GateConfig :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbconfig.GateConfig) */ {
 public:
  GateConfig();
  virtual ~GateConfig();

  GateConfig(const GateConfig& from);

  inline GateConfig& operator=(const GateConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GateConfig(GateConfig&& from) noexcept
    : GateConfig() {
    *this = ::std::move(from);
  }

  inline GateConfig& operator=(GateConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GateConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GateConfig* internal_default_instance() {
    return reinterpret_cast<const GateConfig*>(
               &_GateConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(GateConfig* other);
  friend void swap(GateConfig& a, GateConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GateConfig* New() const final {
    return CreateMaybeMessage<GateConfig>(nullptr);
  }

  GateConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GateConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GateConfig& from);
  void MergeFrom(const GateConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GateConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GateConfig_ResourceModule ResourceModule;
  typedef GateConfig_LogicModule LogicModule;
  typedef GateConfig_DatabaseModule DatabaseModule;
  typedef GateConfig_NetworkModule NetworkModule;

  // accessors -------------------------------------------------------

  // .pbconfig.GateConfig.LogicModule logicModule = 1;
  bool has_logicmodule() const;
  void clear_logicmodule();
  static const int kLogicModuleFieldNumber = 1;
  const ::pbconfig::GateConfig_LogicModule& logicmodule() const;
  ::pbconfig::GateConfig_LogicModule* release_logicmodule();
  ::pbconfig::GateConfig_LogicModule* mutable_logicmodule();
  void set_allocated_logicmodule(::pbconfig::GateConfig_LogicModule* logicmodule);

  // .pbconfig.GateConfig.NetworkModule networkModule = 2;
  bool has_networkmodule() const;
  void clear_networkmodule();
  static const int kNetworkModuleFieldNumber = 2;
  const ::pbconfig::GateConfig_NetworkModule& networkmodule() const;
  ::pbconfig::GateConfig_NetworkModule* release_networkmodule();
  ::pbconfig::GateConfig_NetworkModule* mutable_networkmodule();
  void set_allocated_networkmodule(::pbconfig::GateConfig_NetworkModule* networkmodule);

  // @@protoc_insertion_point(class_scope:pbconfig.GateConfig)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::pbconfig::GateConfig_LogicModule* logicmodule_;
  ::pbconfig::GateConfig_NetworkModule* networkmodule_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gate_2econf_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GateConfig_ResourceModule

// -------------------------------------------------------------------

// GateConfig_LogicModule

// uint32 work_thread_num = 1;
inline void GateConfig_LogicModule::clear_work_thread_num() {
  work_thread_num_ = 0u;
}
inline ::google::protobuf::uint32 GateConfig_LogicModule::work_thread_num() const {
  // @@protoc_insertion_point(field_get:pbconfig.GateConfig.LogicModule.work_thread_num)
  return work_thread_num_;
}
inline void GateConfig_LogicModule::set_work_thread_num(::google::protobuf::uint32 value) {
  
  work_thread_num_ = value;
  // @@protoc_insertion_point(field_set:pbconfig.GateConfig.LogicModule.work_thread_num)
}

// -------------------------------------------------------------------

// GateConfig_DatabaseModule

// -------------------------------------------------------------------

// GateConfig_NetworkModule

// string from_c_listen_host = 1;
inline void GateConfig_NetworkModule::clear_from_c_listen_host() {
  from_c_listen_host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GateConfig_NetworkModule::from_c_listen_host() const {
  // @@protoc_insertion_point(field_get:pbconfig.GateConfig.NetworkModule.from_c_listen_host)
  return from_c_listen_host_.GetNoArena();
}
inline void GateConfig_NetworkModule::set_from_c_listen_host(const ::std::string& value) {
  
  from_c_listen_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbconfig.GateConfig.NetworkModule.from_c_listen_host)
}
#if LANG_CXX11
inline void GateConfig_NetworkModule::set_from_c_listen_host(::std::string&& value) {
  
  from_c_listen_host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbconfig.GateConfig.NetworkModule.from_c_listen_host)
}
#endif
inline void GateConfig_NetworkModule::set_from_c_listen_host(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  from_c_listen_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbconfig.GateConfig.NetworkModule.from_c_listen_host)
}
inline void GateConfig_NetworkModule::set_from_c_listen_host(const char* value, size_t size) {
  
  from_c_listen_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbconfig.GateConfig.NetworkModule.from_c_listen_host)
}
inline ::std::string* GateConfig_NetworkModule::mutable_from_c_listen_host() {
  
  // @@protoc_insertion_point(field_mutable:pbconfig.GateConfig.NetworkModule.from_c_listen_host)
  return from_c_listen_host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GateConfig_NetworkModule::release_from_c_listen_host() {
  // @@protoc_insertion_point(field_release:pbconfig.GateConfig.NetworkModule.from_c_listen_host)
  
  return from_c_listen_host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GateConfig_NetworkModule::set_allocated_from_c_listen_host(::std::string* from_c_listen_host) {
  if (from_c_listen_host != nullptr) {
    
  } else {
    
  }
  from_c_listen_host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_c_listen_host);
  // @@protoc_insertion_point(field_set_allocated:pbconfig.GateConfig.NetworkModule.from_c_listen_host)
}

// int32 from_c_listen_port = 2;
inline void GateConfig_NetworkModule::clear_from_c_listen_port() {
  from_c_listen_port_ = 0;
}
inline ::google::protobuf::int32 GateConfig_NetworkModule::from_c_listen_port() const {
  // @@protoc_insertion_point(field_get:pbconfig.GateConfig.NetworkModule.from_c_listen_port)
  return from_c_listen_port_;
}
inline void GateConfig_NetworkModule::set_from_c_listen_port(::google::protobuf::int32 value) {
  
  from_c_listen_port_ = value;
  // @@protoc_insertion_point(field_set:pbconfig.GateConfig.NetworkModule.from_c_listen_port)
}

// uint32 from_c_session_num = 3;
inline void GateConfig_NetworkModule::clear_from_c_session_num() {
  from_c_session_num_ = 0u;
}
inline ::google::protobuf::uint32 GateConfig_NetworkModule::from_c_session_num() const {
  // @@protoc_insertion_point(field_get:pbconfig.GateConfig.NetworkModule.from_c_session_num)
  return from_c_session_num_;
}
inline void GateConfig_NetworkModule::set_from_c_session_num(::google::protobuf::uint32 value) {
  
  from_c_session_num_ = value;
  // @@protoc_insertion_point(field_set:pbconfig.GateConfig.NetworkModule.from_c_session_num)
}

// string from_c_cert_filename = 4;
inline void GateConfig_NetworkModule::clear_from_c_cert_filename() {
  from_c_cert_filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GateConfig_NetworkModule::from_c_cert_filename() const {
  // @@protoc_insertion_point(field_get:pbconfig.GateConfig.NetworkModule.from_c_cert_filename)
  return from_c_cert_filename_.GetNoArena();
}
inline void GateConfig_NetworkModule::set_from_c_cert_filename(const ::std::string& value) {
  
  from_c_cert_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbconfig.GateConfig.NetworkModule.from_c_cert_filename)
}
#if LANG_CXX11
inline void GateConfig_NetworkModule::set_from_c_cert_filename(::std::string&& value) {
  
  from_c_cert_filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbconfig.GateConfig.NetworkModule.from_c_cert_filename)
}
#endif
inline void GateConfig_NetworkModule::set_from_c_cert_filename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  from_c_cert_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbconfig.GateConfig.NetworkModule.from_c_cert_filename)
}
inline void GateConfig_NetworkModule::set_from_c_cert_filename(const char* value, size_t size) {
  
  from_c_cert_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbconfig.GateConfig.NetworkModule.from_c_cert_filename)
}
inline ::std::string* GateConfig_NetworkModule::mutable_from_c_cert_filename() {
  
  // @@protoc_insertion_point(field_mutable:pbconfig.GateConfig.NetworkModule.from_c_cert_filename)
  return from_c_cert_filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GateConfig_NetworkModule::release_from_c_cert_filename() {
  // @@protoc_insertion_point(field_release:pbconfig.GateConfig.NetworkModule.from_c_cert_filename)
  
  return from_c_cert_filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GateConfig_NetworkModule::set_allocated_from_c_cert_filename(::std::string* from_c_cert_filename) {
  if (from_c_cert_filename != nullptr) {
    
  } else {
    
  }
  from_c_cert_filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_c_cert_filename);
  // @@protoc_insertion_point(field_set_allocated:pbconfig.GateConfig.NetworkModule.from_c_cert_filename)
}

// string from_c_key_filename = 5;
inline void GateConfig_NetworkModule::clear_from_c_key_filename() {
  from_c_key_filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GateConfig_NetworkModule::from_c_key_filename() const {
  // @@protoc_insertion_point(field_get:pbconfig.GateConfig.NetworkModule.from_c_key_filename)
  return from_c_key_filename_.GetNoArena();
}
inline void GateConfig_NetworkModule::set_from_c_key_filename(const ::std::string& value) {
  
  from_c_key_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbconfig.GateConfig.NetworkModule.from_c_key_filename)
}
#if LANG_CXX11
inline void GateConfig_NetworkModule::set_from_c_key_filename(::std::string&& value) {
  
  from_c_key_filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbconfig.GateConfig.NetworkModule.from_c_key_filename)
}
#endif
inline void GateConfig_NetworkModule::set_from_c_key_filename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  from_c_key_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbconfig.GateConfig.NetworkModule.from_c_key_filename)
}
inline void GateConfig_NetworkModule::set_from_c_key_filename(const char* value, size_t size) {
  
  from_c_key_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbconfig.GateConfig.NetworkModule.from_c_key_filename)
}
inline ::std::string* GateConfig_NetworkModule::mutable_from_c_key_filename() {
  
  // @@protoc_insertion_point(field_mutable:pbconfig.GateConfig.NetworkModule.from_c_key_filename)
  return from_c_key_filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GateConfig_NetworkModule::release_from_c_key_filename() {
  // @@protoc_insertion_point(field_release:pbconfig.GateConfig.NetworkModule.from_c_key_filename)
  
  return from_c_key_filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GateConfig_NetworkModule::set_allocated_from_c_key_filename(::std::string* from_c_key_filename) {
  if (from_c_key_filename != nullptr) {
    
  } else {
    
  }
  from_c_key_filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_c_key_filename);
  // @@protoc_insertion_point(field_set_allocated:pbconfig.GateConfig.NetworkModule.from_c_key_filename)
}

// string from_c_key_filepassword = 6;
inline void GateConfig_NetworkModule::clear_from_c_key_filepassword() {
  from_c_key_filepassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GateConfig_NetworkModule::from_c_key_filepassword() const {
  // @@protoc_insertion_point(field_get:pbconfig.GateConfig.NetworkModule.from_c_key_filepassword)
  return from_c_key_filepassword_.GetNoArena();
}
inline void GateConfig_NetworkModule::set_from_c_key_filepassword(const ::std::string& value) {
  
  from_c_key_filepassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbconfig.GateConfig.NetworkModule.from_c_key_filepassword)
}
#if LANG_CXX11
inline void GateConfig_NetworkModule::set_from_c_key_filepassword(::std::string&& value) {
  
  from_c_key_filepassword_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbconfig.GateConfig.NetworkModule.from_c_key_filepassword)
}
#endif
inline void GateConfig_NetworkModule::set_from_c_key_filepassword(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  from_c_key_filepassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbconfig.GateConfig.NetworkModule.from_c_key_filepassword)
}
inline void GateConfig_NetworkModule::set_from_c_key_filepassword(const char* value, size_t size) {
  
  from_c_key_filepassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbconfig.GateConfig.NetworkModule.from_c_key_filepassword)
}
inline ::std::string* GateConfig_NetworkModule::mutable_from_c_key_filepassword() {
  
  // @@protoc_insertion_point(field_mutable:pbconfig.GateConfig.NetworkModule.from_c_key_filepassword)
  return from_c_key_filepassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GateConfig_NetworkModule::release_from_c_key_filepassword() {
  // @@protoc_insertion_point(field_release:pbconfig.GateConfig.NetworkModule.from_c_key_filepassword)
  
  return from_c_key_filepassword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GateConfig_NetworkModule::set_allocated_from_c_key_filepassword(::std::string* from_c_key_filepassword) {
  if (from_c_key_filepassword != nullptr) {
    
  } else {
    
  }
  from_c_key_filepassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_c_key_filepassword);
  // @@protoc_insertion_point(field_set_allocated:pbconfig.GateConfig.NetworkModule.from_c_key_filepassword)
}

// string from_c_http_listen_ports = 7;
inline void GateConfig_NetworkModule::clear_from_c_http_listen_ports() {
  from_c_http_listen_ports_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GateConfig_NetworkModule::from_c_http_listen_ports() const {
  // @@protoc_insertion_point(field_get:pbconfig.GateConfig.NetworkModule.from_c_http_listen_ports)
  return from_c_http_listen_ports_.GetNoArena();
}
inline void GateConfig_NetworkModule::set_from_c_http_listen_ports(const ::std::string& value) {
  
  from_c_http_listen_ports_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbconfig.GateConfig.NetworkModule.from_c_http_listen_ports)
}
#if LANG_CXX11
inline void GateConfig_NetworkModule::set_from_c_http_listen_ports(::std::string&& value) {
  
  from_c_http_listen_ports_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbconfig.GateConfig.NetworkModule.from_c_http_listen_ports)
}
#endif
inline void GateConfig_NetworkModule::set_from_c_http_listen_ports(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  from_c_http_listen_ports_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbconfig.GateConfig.NetworkModule.from_c_http_listen_ports)
}
inline void GateConfig_NetworkModule::set_from_c_http_listen_ports(const char* value, size_t size) {
  
  from_c_http_listen_ports_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbconfig.GateConfig.NetworkModule.from_c_http_listen_ports)
}
inline ::std::string* GateConfig_NetworkModule::mutable_from_c_http_listen_ports() {
  
  // @@protoc_insertion_point(field_mutable:pbconfig.GateConfig.NetworkModule.from_c_http_listen_ports)
  return from_c_http_listen_ports_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GateConfig_NetworkModule::release_from_c_http_listen_ports() {
  // @@protoc_insertion_point(field_release:pbconfig.GateConfig.NetworkModule.from_c_http_listen_ports)
  
  return from_c_http_listen_ports_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GateConfig_NetworkModule::set_allocated_from_c_http_listen_ports(::std::string* from_c_http_listen_ports) {
  if (from_c_http_listen_ports != nullptr) {
    
  } else {
    
  }
  from_c_http_listen_ports_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_c_http_listen_ports);
  // @@protoc_insertion_point(field_set_allocated:pbconfig.GateConfig.NetworkModule.from_c_http_listen_ports)
}

// uint32 from_c_http_thread_num = 8;
inline void GateConfig_NetworkModule::clear_from_c_http_thread_num() {
  from_c_http_thread_num_ = 0u;
}
inline ::google::protobuf::uint32 GateConfig_NetworkModule::from_c_http_thread_num() const {
  // @@protoc_insertion_point(field_get:pbconfig.GateConfig.NetworkModule.from_c_http_thread_num)
  return from_c_http_thread_num_;
}
inline void GateConfig_NetworkModule::set_from_c_http_thread_num(::google::protobuf::uint32 value) {
  
  from_c_http_thread_num_ = value;
  // @@protoc_insertion_point(field_set:pbconfig.GateConfig.NetworkModule.from_c_http_thread_num)
}

// string to_ws_remote_addr = 9;
inline void GateConfig_NetworkModule::clear_to_ws_remote_addr() {
  to_ws_remote_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GateConfig_NetworkModule::to_ws_remote_addr() const {
  // @@protoc_insertion_point(field_get:pbconfig.GateConfig.NetworkModule.to_ws_remote_addr)
  return to_ws_remote_addr_.GetNoArena();
}
inline void GateConfig_NetworkModule::set_to_ws_remote_addr(const ::std::string& value) {
  
  to_ws_remote_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbconfig.GateConfig.NetworkModule.to_ws_remote_addr)
}
#if LANG_CXX11
inline void GateConfig_NetworkModule::set_to_ws_remote_addr(::std::string&& value) {
  
  to_ws_remote_addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbconfig.GateConfig.NetworkModule.to_ws_remote_addr)
}
#endif
inline void GateConfig_NetworkModule::set_to_ws_remote_addr(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  to_ws_remote_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbconfig.GateConfig.NetworkModule.to_ws_remote_addr)
}
inline void GateConfig_NetworkModule::set_to_ws_remote_addr(const char* value, size_t size) {
  
  to_ws_remote_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbconfig.GateConfig.NetworkModule.to_ws_remote_addr)
}
inline ::std::string* GateConfig_NetworkModule::mutable_to_ws_remote_addr() {
  
  // @@protoc_insertion_point(field_mutable:pbconfig.GateConfig.NetworkModule.to_ws_remote_addr)
  return to_ws_remote_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GateConfig_NetworkModule::release_to_ws_remote_addr() {
  // @@protoc_insertion_point(field_release:pbconfig.GateConfig.NetworkModule.to_ws_remote_addr)
  
  return to_ws_remote_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GateConfig_NetworkModule::set_allocated_to_ws_remote_addr(::std::string* to_ws_remote_addr) {
  if (to_ws_remote_addr != nullptr) {
    
  } else {
    
  }
  to_ws_remote_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_ws_remote_addr);
  // @@protoc_insertion_point(field_set_allocated:pbconfig.GateConfig.NetworkModule.to_ws_remote_addr)
}

// uint32 to_ws_thread_num = 10;
inline void GateConfig_NetworkModule::clear_to_ws_thread_num() {
  to_ws_thread_num_ = 0u;
}
inline ::google::protobuf::uint32 GateConfig_NetworkModule::to_ws_thread_num() const {
  // @@protoc_insertion_point(field_get:pbconfig.GateConfig.NetworkModule.to_ws_thread_num)
  return to_ws_thread_num_;
}
inline void GateConfig_NetworkModule::set_to_ws_thread_num(::google::protobuf::uint32 value) {
  
  to_ws_thread_num_ = value;
  // @@protoc_insertion_point(field_set:pbconfig.GateConfig.NetworkModule.to_ws_thread_num)
}

// uint32 to_ws_session_num = 11;
inline void GateConfig_NetworkModule::clear_to_ws_session_num() {
  to_ws_session_num_ = 0u;
}
inline ::google::protobuf::uint32 GateConfig_NetworkModule::to_ws_session_num() const {
  // @@protoc_insertion_point(field_get:pbconfig.GateConfig.NetworkModule.to_ws_session_num)
  return to_ws_session_num_;
}
inline void GateConfig_NetworkModule::set_to_ws_session_num(::google::protobuf::uint32 value) {
  
  to_ws_session_num_ = value;
  // @@protoc_insertion_point(field_set:pbconfig.GateConfig.NetworkModule.to_ws_session_num)
}

// string to_gs_remote_addr = 12;
inline void GateConfig_NetworkModule::clear_to_gs_remote_addr() {
  to_gs_remote_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GateConfig_NetworkModule::to_gs_remote_addr() const {
  // @@protoc_insertion_point(field_get:pbconfig.GateConfig.NetworkModule.to_gs_remote_addr)
  return to_gs_remote_addr_.GetNoArena();
}
inline void GateConfig_NetworkModule::set_to_gs_remote_addr(const ::std::string& value) {
  
  to_gs_remote_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbconfig.GateConfig.NetworkModule.to_gs_remote_addr)
}
#if LANG_CXX11
inline void GateConfig_NetworkModule::set_to_gs_remote_addr(::std::string&& value) {
  
  to_gs_remote_addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbconfig.GateConfig.NetworkModule.to_gs_remote_addr)
}
#endif
inline void GateConfig_NetworkModule::set_to_gs_remote_addr(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  to_gs_remote_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbconfig.GateConfig.NetworkModule.to_gs_remote_addr)
}
inline void GateConfig_NetworkModule::set_to_gs_remote_addr(const char* value, size_t size) {
  
  to_gs_remote_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbconfig.GateConfig.NetworkModule.to_gs_remote_addr)
}
inline ::std::string* GateConfig_NetworkModule::mutable_to_gs_remote_addr() {
  
  // @@protoc_insertion_point(field_mutable:pbconfig.GateConfig.NetworkModule.to_gs_remote_addr)
  return to_gs_remote_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GateConfig_NetworkModule::release_to_gs_remote_addr() {
  // @@protoc_insertion_point(field_release:pbconfig.GateConfig.NetworkModule.to_gs_remote_addr)
  
  return to_gs_remote_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GateConfig_NetworkModule::set_allocated_to_gs_remote_addr(::std::string* to_gs_remote_addr) {
  if (to_gs_remote_addr != nullptr) {
    
  } else {
    
  }
  to_gs_remote_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_gs_remote_addr);
  // @@protoc_insertion_point(field_set_allocated:pbconfig.GateConfig.NetworkModule.to_gs_remote_addr)
}

// uint32 to_gs_thread_num = 13;
inline void GateConfig_NetworkModule::clear_to_gs_thread_num() {
  to_gs_thread_num_ = 0u;
}
inline ::google::protobuf::uint32 GateConfig_NetworkModule::to_gs_thread_num() const {
  // @@protoc_insertion_point(field_get:pbconfig.GateConfig.NetworkModule.to_gs_thread_num)
  return to_gs_thread_num_;
}
inline void GateConfig_NetworkModule::set_to_gs_thread_num(::google::protobuf::uint32 value) {
  
  to_gs_thread_num_ = value;
  // @@protoc_insertion_point(field_set:pbconfig.GateConfig.NetworkModule.to_gs_thread_num)
}

// uint32 to_gs_session_num = 14;
inline void GateConfig_NetworkModule::clear_to_gs_session_num() {
  to_gs_session_num_ = 0u;
}
inline ::google::protobuf::uint32 GateConfig_NetworkModule::to_gs_session_num() const {
  // @@protoc_insertion_point(field_get:pbconfig.GateConfig.NetworkModule.to_gs_session_num)
  return to_gs_session_num_;
}
inline void GateConfig_NetworkModule::set_to_gs_session_num(::google::protobuf::uint32 value) {
  
  to_gs_session_num_ = value;
  // @@protoc_insertion_point(field_set:pbconfig.GateConfig.NetworkModule.to_gs_session_num)
}

// -------------------------------------------------------------------

// GateConfig

// .pbconfig.GateConfig.LogicModule logicModule = 1;
inline bool GateConfig::has_logicmodule() const {
  return this != internal_default_instance() && logicmodule_ != nullptr;
}
inline void GateConfig::clear_logicmodule() {
  if (GetArenaNoVirtual() == nullptr && logicmodule_ != nullptr) {
    delete logicmodule_;
  }
  logicmodule_ = nullptr;
}
inline const ::pbconfig::GateConfig_LogicModule& GateConfig::logicmodule() const {
  const ::pbconfig::GateConfig_LogicModule* p = logicmodule_;
  // @@protoc_insertion_point(field_get:pbconfig.GateConfig.logicModule)
  return p != nullptr ? *p : *reinterpret_cast<const ::pbconfig::GateConfig_LogicModule*>(
      &::pbconfig::_GateConfig_LogicModule_default_instance_);
}
inline ::pbconfig::GateConfig_LogicModule* GateConfig::release_logicmodule() {
  // @@protoc_insertion_point(field_release:pbconfig.GateConfig.logicModule)
  
  ::pbconfig::GateConfig_LogicModule* temp = logicmodule_;
  logicmodule_ = nullptr;
  return temp;
}
inline ::pbconfig::GateConfig_LogicModule* GateConfig::mutable_logicmodule() {
  
  if (logicmodule_ == nullptr) {
    auto* p = CreateMaybeMessage<::pbconfig::GateConfig_LogicModule>(GetArenaNoVirtual());
    logicmodule_ = p;
  }
  // @@protoc_insertion_point(field_mutable:pbconfig.GateConfig.logicModule)
  return logicmodule_;
}
inline void GateConfig::set_allocated_logicmodule(::pbconfig::GateConfig_LogicModule* logicmodule) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete logicmodule_;
  }
  if (logicmodule) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      logicmodule = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, logicmodule, submessage_arena);
    }
    
  } else {
    
  }
  logicmodule_ = logicmodule;
  // @@protoc_insertion_point(field_set_allocated:pbconfig.GateConfig.logicModule)
}

// .pbconfig.GateConfig.NetworkModule networkModule = 2;
inline bool GateConfig::has_networkmodule() const {
  return this != internal_default_instance() && networkmodule_ != nullptr;
}
inline void GateConfig::clear_networkmodule() {
  if (GetArenaNoVirtual() == nullptr && networkmodule_ != nullptr) {
    delete networkmodule_;
  }
  networkmodule_ = nullptr;
}
inline const ::pbconfig::GateConfig_NetworkModule& GateConfig::networkmodule() const {
  const ::pbconfig::GateConfig_NetworkModule* p = networkmodule_;
  // @@protoc_insertion_point(field_get:pbconfig.GateConfig.networkModule)
  return p != nullptr ? *p : *reinterpret_cast<const ::pbconfig::GateConfig_NetworkModule*>(
      &::pbconfig::_GateConfig_NetworkModule_default_instance_);
}
inline ::pbconfig::GateConfig_NetworkModule* GateConfig::release_networkmodule() {
  // @@protoc_insertion_point(field_release:pbconfig.GateConfig.networkModule)
  
  ::pbconfig::GateConfig_NetworkModule* temp = networkmodule_;
  networkmodule_ = nullptr;
  return temp;
}
inline ::pbconfig::GateConfig_NetworkModule* GateConfig::mutable_networkmodule() {
  
  if (networkmodule_ == nullptr) {
    auto* p = CreateMaybeMessage<::pbconfig::GateConfig_NetworkModule>(GetArenaNoVirtual());
    networkmodule_ = p;
  }
  // @@protoc_insertion_point(field_mutable:pbconfig.GateConfig.networkModule)
  return networkmodule_;
}
inline void GateConfig::set_allocated_networkmodule(::pbconfig::GateConfig_NetworkModule* networkmodule) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete networkmodule_;
  }
  if (networkmodule) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      networkmodule = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, networkmodule, submessage_arena);
    }
    
  } else {
    
  }
  networkmodule_ = networkmodule;
  // @@protoc_insertion_point(field_set_allocated:pbconfig.GateConfig.networkModule)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pbconfig

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_gate_2econf_2eproto
