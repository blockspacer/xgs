// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msginfo.conf.proto

#include "msginfo.conf.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_msginfo_2econf_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MsgDir_msginfo_2econf_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_msginfo_2econf_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MsgLog_msginfo_2econf_2eproto;
namespace pbconfig {
class MsgDirDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgDir> _instance;
} _MsgDir_default_instance_;
class MsgLogDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgLog> _instance;
} _MsgLog_default_instance_;
class MsgInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgInfo> _instance;
} _MsgInfo_default_instance_;
}  // namespace pbconfig
static void InitDefaultsMsgDir_msginfo_2econf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbconfig::_MsgDir_default_instance_;
    new (ptr) ::pbconfig::MsgDir();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbconfig::MsgDir::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MsgDir_msginfo_2econf_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgDir_msginfo_2econf_2eproto}, {}};

static void InitDefaultsMsgLog_msginfo_2econf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbconfig::_MsgLog_default_instance_;
    new (ptr) ::pbconfig::MsgLog();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbconfig::MsgLog::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MsgLog_msginfo_2econf_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgLog_msginfo_2econf_2eproto}, {}};

static void InitDefaultsMsgInfo_msginfo_2econf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbconfig::_MsgInfo_default_instance_;
    new (ptr) ::pbconfig::MsgInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbconfig::MsgInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MsgInfo_msginfo_2econf_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMsgInfo_msginfo_2econf_2eproto}, {
      &scc_info_MsgDir_msginfo_2econf_2eproto.base,
      &scc_info_MsgLog_msginfo_2econf_2eproto.base,}};

void InitDefaults_msginfo_2econf_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_MsgDir_msginfo_2econf_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgLog_msginfo_2econf_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgInfo_msginfo_2econf_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_msginfo_2econf_2eproto[3];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_msginfo_2econf_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_msginfo_2econf_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_msginfo_2econf_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbconfig::MsgDir, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pbconfig::MsgDir, c2w_),
  PROTOBUF_FIELD_OFFSET(::pbconfig::MsgDir, w2c_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbconfig::MsgLog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pbconfig::MsgLog, on_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbconfig::MsgInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pbconfig::MsgInfo, title_),
  PROTOBUF_FIELD_OFFSET(::pbconfig::MsgInfo, name_),
  PROTOBUF_FIELD_OFFSET(::pbconfig::MsgInfo, open_),
  PROTOBUF_FIELD_OFFSET(::pbconfig::MsgInfo, dir_),
  PROTOBUF_FIELD_OFFSET(::pbconfig::MsgInfo, log_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pbconfig::MsgDir)},
  { 7, -1, sizeof(::pbconfig::MsgLog)},
  { 13, -1, sizeof(::pbconfig::MsgInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::pbconfig::_MsgDir_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pbconfig::_MsgLog_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pbconfig::_MsgInfo_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_msginfo_2econf_2eproto = {
  {}, AddDescriptors_msginfo_2econf_2eproto, "msginfo.conf.proto", schemas,
  file_default_instances, TableStruct_msginfo_2econf_2eproto::offsets,
  file_level_metadata_msginfo_2econf_2eproto, 3, file_level_enum_descriptors_msginfo_2econf_2eproto, file_level_service_descriptors_msginfo_2econf_2eproto,
};

const char descriptor_table_protodef_msginfo_2econf_2eproto[] =
  "\n\022msginfo.conf.proto\022\010pbconfig\"\"\n\006MsgDir"
  "\022\013\n\003c2w\030\001 \001(\010\022\013\n\003w2c\030\002 \001(\010\"\024\n\006MsgLog\022\n\n\002"
  "on\030\001 \001(\010\"r\n\007MsgInfo\022\r\n\005title\030\001 \001(\t\022\014\n\004na"
  "me\030\002 \001(\t\022\014\n\004open\030\003 \001(\010\022\035\n\003dir\030\004 \001(\0132\020.pb"
  "config.MsgDir\022\035\n\003log\030\005 \001(\0132\020.pbconfig.Ms"
  "gLogb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_msginfo_2econf_2eproto = {
  false, InitDefaults_msginfo_2econf_2eproto, 
  descriptor_table_protodef_msginfo_2econf_2eproto,
  "msginfo.conf.proto", &assign_descriptors_table_msginfo_2econf_2eproto, 212,
};

void AddDescriptors_msginfo_2econf_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_msginfo_2econf_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_msginfo_2econf_2eproto = []() { AddDescriptors_msginfo_2econf_2eproto(); return true; }();
namespace pbconfig {

// ===================================================================

void MsgDir::InitAsDefaultInstance() {
}
class MsgDir::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgDir::kC2WFieldNumber;
const int MsgDir::kW2CFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgDir::MsgDir()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbconfig.MsgDir)
}
MsgDir::MsgDir(const MsgDir& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&c2w_, &from.c2w_,
    static_cast<size_t>(reinterpret_cast<char*>(&w2c_) -
    reinterpret_cast<char*>(&c2w_)) + sizeof(w2c_));
  // @@protoc_insertion_point(copy_constructor:pbconfig.MsgDir)
}

void MsgDir::SharedCtor() {
  ::memset(&c2w_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&w2c_) -
      reinterpret_cast<char*>(&c2w_)) + sizeof(w2c_));
}

MsgDir::~MsgDir() {
  // @@protoc_insertion_point(destructor:pbconfig.MsgDir)
  SharedDtor();
}

void MsgDir::SharedDtor() {
}

void MsgDir::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgDir& MsgDir::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MsgDir_msginfo_2econf_2eproto.base);
  return *internal_default_instance();
}


void MsgDir::Clear() {
// @@protoc_insertion_point(message_clear_start:pbconfig.MsgDir)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&c2w_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&w2c_) -
      reinterpret_cast<char*>(&c2w_)) + sizeof(w2c_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MsgDir::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MsgDir*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool c2w = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_c2w(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool w2c = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_w2c(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MsgDir::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbconfig.MsgDir)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool c2w = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &c2w_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool w2c = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &w2c_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbconfig.MsgDir)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbconfig.MsgDir)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MsgDir::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbconfig.MsgDir)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool c2w = 1;
  if (this->c2w() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->c2w(), output);
  }

  // bool w2c = 2;
  if (this->w2c() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->w2c(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pbconfig.MsgDir)
}

::google::protobuf::uint8* MsgDir::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbconfig.MsgDir)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool c2w = 1;
  if (this->c2w() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->c2w(), target);
  }

  // bool w2c = 2;
  if (this->w2c() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->w2c(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbconfig.MsgDir)
  return target;
}

size_t MsgDir::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbconfig.MsgDir)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool c2w = 1;
  if (this->c2w() != 0) {
    total_size += 1 + 1;
  }

  // bool w2c = 2;
  if (this->w2c() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgDir::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbconfig.MsgDir)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgDir* source =
      ::google::protobuf::DynamicCastToGenerated<MsgDir>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbconfig.MsgDir)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbconfig.MsgDir)
    MergeFrom(*source);
  }
}

void MsgDir::MergeFrom(const MsgDir& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbconfig.MsgDir)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.c2w() != 0) {
    set_c2w(from.c2w());
  }
  if (from.w2c() != 0) {
    set_w2c(from.w2c());
  }
}

void MsgDir::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbconfig.MsgDir)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDir::CopyFrom(const MsgDir& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbconfig.MsgDir)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDir::IsInitialized() const {
  return true;
}

void MsgDir::Swap(MsgDir* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgDir::InternalSwap(MsgDir* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(c2w_, other->c2w_);
  swap(w2c_, other->w2c_);
}

::google::protobuf::Metadata MsgDir::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_msginfo_2econf_2eproto);
  return ::file_level_metadata_msginfo_2econf_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MsgLog::InitAsDefaultInstance() {
}
class MsgLog::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgLog::kOnFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgLog::MsgLog()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbconfig.MsgLog)
}
MsgLog::MsgLog(const MsgLog& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  on_ = from.on_;
  // @@protoc_insertion_point(copy_constructor:pbconfig.MsgLog)
}

void MsgLog::SharedCtor() {
  on_ = false;
}

MsgLog::~MsgLog() {
  // @@protoc_insertion_point(destructor:pbconfig.MsgLog)
  SharedDtor();
}

void MsgLog::SharedDtor() {
}

void MsgLog::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgLog& MsgLog::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MsgLog_msginfo_2econf_2eproto.base);
  return *internal_default_instance();
}


void MsgLog::Clear() {
// @@protoc_insertion_point(message_clear_start:pbconfig.MsgLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  on_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MsgLog::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MsgLog*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool on = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_on(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MsgLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbconfig.MsgLog)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool on = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &on_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbconfig.MsgLog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbconfig.MsgLog)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MsgLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbconfig.MsgLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool on = 1;
  if (this->on() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->on(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pbconfig.MsgLog)
}

::google::protobuf::uint8* MsgLog::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbconfig.MsgLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool on = 1;
  if (this->on() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->on(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbconfig.MsgLog)
  return target;
}

size_t MsgLog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbconfig.MsgLog)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool on = 1;
  if (this->on() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgLog::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbconfig.MsgLog)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgLog* source =
      ::google::protobuf::DynamicCastToGenerated<MsgLog>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbconfig.MsgLog)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbconfig.MsgLog)
    MergeFrom(*source);
  }
}

void MsgLog::MergeFrom(const MsgLog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbconfig.MsgLog)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.on() != 0) {
    set_on(from.on());
  }
}

void MsgLog::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbconfig.MsgLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLog::CopyFrom(const MsgLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbconfig.MsgLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLog::IsInitialized() const {
  return true;
}

void MsgLog::Swap(MsgLog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgLog::InternalSwap(MsgLog* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(on_, other->on_);
}

::google::protobuf::Metadata MsgLog::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_msginfo_2econf_2eproto);
  return ::file_level_metadata_msginfo_2econf_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MsgInfo::InitAsDefaultInstance() {
  ::pbconfig::_MsgInfo_default_instance_._instance.get_mutable()->dir_ = const_cast< ::pbconfig::MsgDir*>(
      ::pbconfig::MsgDir::internal_default_instance());
  ::pbconfig::_MsgInfo_default_instance_._instance.get_mutable()->log_ = const_cast< ::pbconfig::MsgLog*>(
      ::pbconfig::MsgLog::internal_default_instance());
}
class MsgInfo::HasBitSetters {
 public:
  static const ::pbconfig::MsgDir& dir(const MsgInfo* msg);
  static const ::pbconfig::MsgLog& log(const MsgInfo* msg);
};

const ::pbconfig::MsgDir&
MsgInfo::HasBitSetters::dir(const MsgInfo* msg) {
  return *msg->dir_;
}
const ::pbconfig::MsgLog&
MsgInfo::HasBitSetters::log(const MsgInfo* msg) {
  return *msg->log_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgInfo::kTitleFieldNumber;
const int MsgInfo::kNameFieldNumber;
const int MsgInfo::kOpenFieldNumber;
const int MsgInfo::kDirFieldNumber;
const int MsgInfo::kLogFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgInfo::MsgInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbconfig.MsgInfo)
}
MsgInfo::MsgInfo(const MsgInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_dir()) {
    dir_ = new ::pbconfig::MsgDir(*from.dir_);
  } else {
    dir_ = nullptr;
  }
  if (from.has_log()) {
    log_ = new ::pbconfig::MsgLog(*from.log_);
  } else {
    log_ = nullptr;
  }
  open_ = from.open_;
  // @@protoc_insertion_point(copy_constructor:pbconfig.MsgInfo)
}

void MsgInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MsgInfo_msginfo_2econf_2eproto.base);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&dir_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&open_) -
      reinterpret_cast<char*>(&dir_)) + sizeof(open_));
}

MsgInfo::~MsgInfo() {
  // @@protoc_insertion_point(destructor:pbconfig.MsgInfo)
  SharedDtor();
}

void MsgInfo::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete dir_;
  if (this != internal_default_instance()) delete log_;
}

void MsgInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgInfo& MsgInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MsgInfo_msginfo_2econf_2eproto.base);
  return *internal_default_instance();
}


void MsgInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:pbconfig.MsgInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && dir_ != nullptr) {
    delete dir_;
  }
  dir_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && log_ != nullptr) {
    delete log_;
  }
  log_ = nullptr;
  open_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MsgInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MsgInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string title = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pbconfig.MsgInfo.title");
        object = msg->mutable_title();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pbconfig.MsgInfo.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool open = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_open(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .pbconfig.MsgDir dir = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::pbconfig::MsgDir::_InternalParse;
        object = msg->mutable_dir();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .pbconfig.MsgLog log = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::pbconfig::MsgLog::_InternalParse;
        object = msg->mutable_log();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MsgInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbconfig.MsgInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string title = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pbconfig.MsgInfo.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pbconfig.MsgInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool open = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &open_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pbconfig.MsgDir dir = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dir()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pbconfig.MsgLog log = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_log()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbconfig.MsgInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbconfig.MsgInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MsgInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbconfig.MsgInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pbconfig.MsgInfo.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->title(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pbconfig.MsgInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // bool open = 3;
  if (this->open() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->open(), output);
  }

  // .pbconfig.MsgDir dir = 4;
  if (this->has_dir()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::dir(this), output);
  }

  // .pbconfig.MsgLog log = 5;
  if (this->has_log()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::log(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pbconfig.MsgInfo)
}

::google::protobuf::uint8* MsgInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbconfig.MsgInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pbconfig.MsgInfo.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->title(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pbconfig.MsgInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // bool open = 3;
  if (this->open() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->open(), target);
  }

  // .pbconfig.MsgDir dir = 4;
  if (this->has_dir()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::dir(this), target);
  }

  // .pbconfig.MsgLog log = 5;
  if (this->has_log()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::log(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbconfig.MsgInfo)
  return target;
}

size_t MsgInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbconfig.MsgInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .pbconfig.MsgDir dir = 4;
  if (this->has_dir()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dir_);
  }

  // .pbconfig.MsgLog log = 5;
  if (this->has_log()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *log_);
  }

  // bool open = 3;
  if (this->open() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbconfig.MsgInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgInfo* source =
      ::google::protobuf::DynamicCastToGenerated<MsgInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbconfig.MsgInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbconfig.MsgInfo)
    MergeFrom(*source);
  }
}

void MsgInfo::MergeFrom(const MsgInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbconfig.MsgInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_dir()) {
    mutable_dir()->::pbconfig::MsgDir::MergeFrom(from.dir());
  }
  if (from.has_log()) {
    mutable_log()->::pbconfig::MsgLog::MergeFrom(from.log());
  }
  if (from.open() != 0) {
    set_open(from.open());
  }
}

void MsgInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbconfig.MsgInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgInfo::CopyFrom(const MsgInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbconfig.MsgInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgInfo::IsInitialized() const {
  return true;
}

void MsgInfo::Swap(MsgInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgInfo::InternalSwap(MsgInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(dir_, other->dir_);
  swap(log_, other->log_);
  swap(open_, other->open_);
}

::google::protobuf::Metadata MsgInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_msginfo_2econf_2eproto);
  return ::file_level_metadata_msginfo_2econf_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pbconfig
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::pbconfig::MsgDir* Arena::CreateMaybeMessage< ::pbconfig::MsgDir >(Arena* arena) {
  return Arena::CreateInternal< ::pbconfig::MsgDir >(arena);
}
template<> PROTOBUF_NOINLINE ::pbconfig::MsgLog* Arena::CreateMaybeMessage< ::pbconfig::MsgLog >(Arena* arena) {
  return Arena::CreateInternal< ::pbconfig::MsgLog >(arena);
}
template<> PROTOBUF_NOINLINE ::pbconfig::MsgInfo* Arena::CreateMaybeMessage< ::pbconfig::MsgInfo >(Arena* arena) {
  return Arena::CreateInternal< ::pbconfig::MsgInfo >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
