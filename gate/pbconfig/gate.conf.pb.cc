// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gate.conf.proto

#include "gate.conf.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_gate_2econf_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GateConfig_LogicModule_gate_2econf_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_gate_2econf_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GateConfig_NetworkModule_gate_2econf_2eproto;
namespace pbconfig {
class GateConfig_ResourceModuleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GateConfig_ResourceModule> _instance;
} _GateConfig_ResourceModule_default_instance_;
class GateConfig_LogicModuleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GateConfig_LogicModule> _instance;
} _GateConfig_LogicModule_default_instance_;
class GateConfig_DatabaseModuleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GateConfig_DatabaseModule> _instance;
} _GateConfig_DatabaseModule_default_instance_;
class GateConfig_NetworkModuleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GateConfig_NetworkModule> _instance;
} _GateConfig_NetworkModule_default_instance_;
class GateConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GateConfig> _instance;
} _GateConfig_default_instance_;
}  // namespace pbconfig
static void InitDefaultsGateConfig_ResourceModule_gate_2econf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbconfig::_GateConfig_ResourceModule_default_instance_;
    new (ptr) ::pbconfig::GateConfig_ResourceModule();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbconfig::GateConfig_ResourceModule::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GateConfig_ResourceModule_gate_2econf_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGateConfig_ResourceModule_gate_2econf_2eproto}, {}};

static void InitDefaultsGateConfig_LogicModule_gate_2econf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbconfig::_GateConfig_LogicModule_default_instance_;
    new (ptr) ::pbconfig::GateConfig_LogicModule();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbconfig::GateConfig_LogicModule::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GateConfig_LogicModule_gate_2econf_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGateConfig_LogicModule_gate_2econf_2eproto}, {}};

static void InitDefaultsGateConfig_DatabaseModule_gate_2econf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbconfig::_GateConfig_DatabaseModule_default_instance_;
    new (ptr) ::pbconfig::GateConfig_DatabaseModule();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbconfig::GateConfig_DatabaseModule::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GateConfig_DatabaseModule_gate_2econf_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGateConfig_DatabaseModule_gate_2econf_2eproto}, {}};

static void InitDefaultsGateConfig_NetworkModule_gate_2econf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbconfig::_GateConfig_NetworkModule_default_instance_;
    new (ptr) ::pbconfig::GateConfig_NetworkModule();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbconfig::GateConfig_NetworkModule::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GateConfig_NetworkModule_gate_2econf_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGateConfig_NetworkModule_gate_2econf_2eproto}, {}};

static void InitDefaultsGateConfig_gate_2econf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbconfig::_GateConfig_default_instance_;
    new (ptr) ::pbconfig::GateConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbconfig::GateConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_GateConfig_gate_2econf_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsGateConfig_gate_2econf_2eproto}, {
      &scc_info_GateConfig_LogicModule_gate_2econf_2eproto.base,
      &scc_info_GateConfig_NetworkModule_gate_2econf_2eproto.base,}};

void InitDefaults_gate_2econf_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_GateConfig_ResourceModule_gate_2econf_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GateConfig_LogicModule_gate_2econf_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GateConfig_DatabaseModule_gate_2econf_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GateConfig_NetworkModule_gate_2econf_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GateConfig_gate_2econf_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_gate_2econf_2eproto[5];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_gate_2econf_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_gate_2econf_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_gate_2econf_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbconfig::GateConfig_ResourceModule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbconfig::GateConfig_LogicModule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pbconfig::GateConfig_LogicModule, work_thread_num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbconfig::GateConfig_DatabaseModule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbconfig::GateConfig_NetworkModule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pbconfig::GateConfig_NetworkModule, from_c_listen_host_),
  PROTOBUF_FIELD_OFFSET(::pbconfig::GateConfig_NetworkModule, from_c_listen_port_),
  PROTOBUF_FIELD_OFFSET(::pbconfig::GateConfig_NetworkModule, from_c_session_num_),
  PROTOBUF_FIELD_OFFSET(::pbconfig::GateConfig_NetworkModule, from_c_cert_filename_),
  PROTOBUF_FIELD_OFFSET(::pbconfig::GateConfig_NetworkModule, from_c_key_filename_),
  PROTOBUF_FIELD_OFFSET(::pbconfig::GateConfig_NetworkModule, from_c_key_filepassword_),
  PROTOBUF_FIELD_OFFSET(::pbconfig::GateConfig_NetworkModule, from_c_http_listen_ports_),
  PROTOBUF_FIELD_OFFSET(::pbconfig::GateConfig_NetworkModule, from_c_http_thread_num_),
  PROTOBUF_FIELD_OFFSET(::pbconfig::GateConfig_NetworkModule, to_ws_remote_addr_),
  PROTOBUF_FIELD_OFFSET(::pbconfig::GateConfig_NetworkModule, to_ws_thread_num_),
  PROTOBUF_FIELD_OFFSET(::pbconfig::GateConfig_NetworkModule, to_ws_session_num_),
  PROTOBUF_FIELD_OFFSET(::pbconfig::GateConfig_NetworkModule, to_gs_remote_addr_),
  PROTOBUF_FIELD_OFFSET(::pbconfig::GateConfig_NetworkModule, to_gs_thread_num_),
  PROTOBUF_FIELD_OFFSET(::pbconfig::GateConfig_NetworkModule, to_gs_session_num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbconfig::GateConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pbconfig::GateConfig, logicmodule_),
  PROTOBUF_FIELD_OFFSET(::pbconfig::GateConfig, networkmodule_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pbconfig::GateConfig_ResourceModule)},
  { 5, -1, sizeof(::pbconfig::GateConfig_LogicModule)},
  { 11, -1, sizeof(::pbconfig::GateConfig_DatabaseModule)},
  { 16, -1, sizeof(::pbconfig::GateConfig_NetworkModule)},
  { 35, -1, sizeof(::pbconfig::GateConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::pbconfig::_GateConfig_ResourceModule_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pbconfig::_GateConfig_LogicModule_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pbconfig::_GateConfig_DatabaseModule_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pbconfig::_GateConfig_NetworkModule_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pbconfig::_GateConfig_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_gate_2econf_2eproto = {
  {}, AddDescriptors_gate_2econf_2eproto, "gate.conf.proto", schemas,
  file_default_instances, TableStruct_gate_2econf_2eproto::offsets,
  file_level_metadata_gate_2econf_2eproto, 5, file_level_enum_descriptors_gate_2econf_2eproto, file_level_service_descriptors_gate_2econf_2eproto,
};

const char descriptor_table_protodef_gate_2econf_2eproto[] =
  "\n\017gate.conf.proto\022\010pbconfig\"\356\004\n\nGateConf"
  "ig\0225\n\013logicModule\030\001 \001(\0132 .pbconfig.GateC"
  "onfig.LogicModule\0229\n\rnetworkModule\030\002 \001(\013"
  "2\".pbconfig.GateConfig.NetworkModule\032\020\n\016"
  "ResourceModule\032&\n\013LogicModule\022\027\n\017work_th"
  "read_num\030\001 \001(\r\032\020\n\016DatabaseModule\032\241\003\n\rNet"
  "workModule\022\032\n\022from_c_listen_host\030\001 \001(\t\022\032"
  "\n\022from_c_listen_port\030\002 \001(\005\022\032\n\022from_c_ses"
  "sion_num\030\003 \001(\r\022\034\n\024from_c_cert_filename\030\004"
  " \001(\t\022\033\n\023from_c_key_filename\030\005 \001(\t\022\037\n\027fro"
  "m_c_key_filepassword\030\006 \001(\t\022 \n\030from_c_htt"
  "p_listen_ports\030\007 \001(\t\022\036\n\026from_c_http_thre"
  "ad_num\030\010 \001(\r\022\031\n\021to_ws_remote_addr\030\t \001(\t\022"
  "\030\n\020to_ws_thread_num\030\n \001(\r\022\031\n\021to_ws_sessi"
  "on_num\030\013 \001(\r\022\031\n\021to_gs_remote_addr\030\014 \001(\t\022"
  "\030\n\020to_gs_thread_num\030\r \001(\r\022\031\n\021to_gs_sessi"
  "on_num\030\016 \001(\rb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_gate_2econf_2eproto = {
  false, InitDefaults_gate_2econf_2eproto, 
  descriptor_table_protodef_gate_2econf_2eproto,
  "gate.conf.proto", &assign_descriptors_table_gate_2econf_2eproto, 660,
};

void AddDescriptors_gate_2econf_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_gate_2econf_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_gate_2econf_2eproto = []() { AddDescriptors_gate_2econf_2eproto(); return true; }();
namespace pbconfig {

// ===================================================================

void GateConfig_ResourceModule::InitAsDefaultInstance() {
}
class GateConfig_ResourceModule::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GateConfig_ResourceModule::GateConfig_ResourceModule()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbconfig.GateConfig.ResourceModule)
}
GateConfig_ResourceModule::GateConfig_ResourceModule(const GateConfig_ResourceModule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pbconfig.GateConfig.ResourceModule)
}

void GateConfig_ResourceModule::SharedCtor() {
}

GateConfig_ResourceModule::~GateConfig_ResourceModule() {
  // @@protoc_insertion_point(destructor:pbconfig.GateConfig.ResourceModule)
  SharedDtor();
}

void GateConfig_ResourceModule::SharedDtor() {
}

void GateConfig_ResourceModule::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GateConfig_ResourceModule& GateConfig_ResourceModule::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GateConfig_ResourceModule_gate_2econf_2eproto.base);
  return *internal_default_instance();
}


void GateConfig_ResourceModule::Clear() {
// @@protoc_insertion_point(message_clear_start:pbconfig.GateConfig.ResourceModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GateConfig_ResourceModule::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GateConfig_ResourceModule*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GateConfig_ResourceModule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbconfig.GateConfig.ResourceModule)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pbconfig.GateConfig.ResourceModule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbconfig.GateConfig.ResourceModule)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GateConfig_ResourceModule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbconfig.GateConfig.ResourceModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pbconfig.GateConfig.ResourceModule)
}

::google::protobuf::uint8* GateConfig_ResourceModule::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbconfig.GateConfig.ResourceModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbconfig.GateConfig.ResourceModule)
  return target;
}

size_t GateConfig_ResourceModule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbconfig.GateConfig.ResourceModule)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GateConfig_ResourceModule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbconfig.GateConfig.ResourceModule)
  GOOGLE_DCHECK_NE(&from, this);
  const GateConfig_ResourceModule* source =
      ::google::protobuf::DynamicCastToGenerated<GateConfig_ResourceModule>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbconfig.GateConfig.ResourceModule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbconfig.GateConfig.ResourceModule)
    MergeFrom(*source);
  }
}

void GateConfig_ResourceModule::MergeFrom(const GateConfig_ResourceModule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbconfig.GateConfig.ResourceModule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GateConfig_ResourceModule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbconfig.GateConfig.ResourceModule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GateConfig_ResourceModule::CopyFrom(const GateConfig_ResourceModule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbconfig.GateConfig.ResourceModule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GateConfig_ResourceModule::IsInitialized() const {
  return true;
}

void GateConfig_ResourceModule::Swap(GateConfig_ResourceModule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GateConfig_ResourceModule::InternalSwap(GateConfig_ResourceModule* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GateConfig_ResourceModule::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_gate_2econf_2eproto);
  return ::file_level_metadata_gate_2econf_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GateConfig_LogicModule::InitAsDefaultInstance() {
}
class GateConfig_LogicModule::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GateConfig_LogicModule::kWorkThreadNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GateConfig_LogicModule::GateConfig_LogicModule()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbconfig.GateConfig.LogicModule)
}
GateConfig_LogicModule::GateConfig_LogicModule(const GateConfig_LogicModule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  work_thread_num_ = from.work_thread_num_;
  // @@protoc_insertion_point(copy_constructor:pbconfig.GateConfig.LogicModule)
}

void GateConfig_LogicModule::SharedCtor() {
  work_thread_num_ = 0u;
}

GateConfig_LogicModule::~GateConfig_LogicModule() {
  // @@protoc_insertion_point(destructor:pbconfig.GateConfig.LogicModule)
  SharedDtor();
}

void GateConfig_LogicModule::SharedDtor() {
}

void GateConfig_LogicModule::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GateConfig_LogicModule& GateConfig_LogicModule::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GateConfig_LogicModule_gate_2econf_2eproto.base);
  return *internal_default_instance();
}


void GateConfig_LogicModule::Clear() {
// @@protoc_insertion_point(message_clear_start:pbconfig.GateConfig.LogicModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  work_thread_num_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GateConfig_LogicModule::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GateConfig_LogicModule*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 work_thread_num = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_work_thread_num(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GateConfig_LogicModule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbconfig.GateConfig.LogicModule)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 work_thread_num = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &work_thread_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbconfig.GateConfig.LogicModule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbconfig.GateConfig.LogicModule)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GateConfig_LogicModule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbconfig.GateConfig.LogicModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 work_thread_num = 1;
  if (this->work_thread_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->work_thread_num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pbconfig.GateConfig.LogicModule)
}

::google::protobuf::uint8* GateConfig_LogicModule::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbconfig.GateConfig.LogicModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 work_thread_num = 1;
  if (this->work_thread_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->work_thread_num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbconfig.GateConfig.LogicModule)
  return target;
}

size_t GateConfig_LogicModule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbconfig.GateConfig.LogicModule)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 work_thread_num = 1;
  if (this->work_thread_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->work_thread_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GateConfig_LogicModule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbconfig.GateConfig.LogicModule)
  GOOGLE_DCHECK_NE(&from, this);
  const GateConfig_LogicModule* source =
      ::google::protobuf::DynamicCastToGenerated<GateConfig_LogicModule>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbconfig.GateConfig.LogicModule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbconfig.GateConfig.LogicModule)
    MergeFrom(*source);
  }
}

void GateConfig_LogicModule::MergeFrom(const GateConfig_LogicModule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbconfig.GateConfig.LogicModule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.work_thread_num() != 0) {
    set_work_thread_num(from.work_thread_num());
  }
}

void GateConfig_LogicModule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbconfig.GateConfig.LogicModule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GateConfig_LogicModule::CopyFrom(const GateConfig_LogicModule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbconfig.GateConfig.LogicModule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GateConfig_LogicModule::IsInitialized() const {
  return true;
}

void GateConfig_LogicModule::Swap(GateConfig_LogicModule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GateConfig_LogicModule::InternalSwap(GateConfig_LogicModule* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(work_thread_num_, other->work_thread_num_);
}

::google::protobuf::Metadata GateConfig_LogicModule::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_gate_2econf_2eproto);
  return ::file_level_metadata_gate_2econf_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GateConfig_DatabaseModule::InitAsDefaultInstance() {
}
class GateConfig_DatabaseModule::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GateConfig_DatabaseModule::GateConfig_DatabaseModule()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbconfig.GateConfig.DatabaseModule)
}
GateConfig_DatabaseModule::GateConfig_DatabaseModule(const GateConfig_DatabaseModule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pbconfig.GateConfig.DatabaseModule)
}

void GateConfig_DatabaseModule::SharedCtor() {
}

GateConfig_DatabaseModule::~GateConfig_DatabaseModule() {
  // @@protoc_insertion_point(destructor:pbconfig.GateConfig.DatabaseModule)
  SharedDtor();
}

void GateConfig_DatabaseModule::SharedDtor() {
}

void GateConfig_DatabaseModule::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GateConfig_DatabaseModule& GateConfig_DatabaseModule::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GateConfig_DatabaseModule_gate_2econf_2eproto.base);
  return *internal_default_instance();
}


void GateConfig_DatabaseModule::Clear() {
// @@protoc_insertion_point(message_clear_start:pbconfig.GateConfig.DatabaseModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GateConfig_DatabaseModule::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GateConfig_DatabaseModule*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GateConfig_DatabaseModule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbconfig.GateConfig.DatabaseModule)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pbconfig.GateConfig.DatabaseModule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbconfig.GateConfig.DatabaseModule)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GateConfig_DatabaseModule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbconfig.GateConfig.DatabaseModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pbconfig.GateConfig.DatabaseModule)
}

::google::protobuf::uint8* GateConfig_DatabaseModule::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbconfig.GateConfig.DatabaseModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbconfig.GateConfig.DatabaseModule)
  return target;
}

size_t GateConfig_DatabaseModule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbconfig.GateConfig.DatabaseModule)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GateConfig_DatabaseModule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbconfig.GateConfig.DatabaseModule)
  GOOGLE_DCHECK_NE(&from, this);
  const GateConfig_DatabaseModule* source =
      ::google::protobuf::DynamicCastToGenerated<GateConfig_DatabaseModule>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbconfig.GateConfig.DatabaseModule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbconfig.GateConfig.DatabaseModule)
    MergeFrom(*source);
  }
}

void GateConfig_DatabaseModule::MergeFrom(const GateConfig_DatabaseModule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbconfig.GateConfig.DatabaseModule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GateConfig_DatabaseModule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbconfig.GateConfig.DatabaseModule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GateConfig_DatabaseModule::CopyFrom(const GateConfig_DatabaseModule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbconfig.GateConfig.DatabaseModule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GateConfig_DatabaseModule::IsInitialized() const {
  return true;
}

void GateConfig_DatabaseModule::Swap(GateConfig_DatabaseModule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GateConfig_DatabaseModule::InternalSwap(GateConfig_DatabaseModule* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GateConfig_DatabaseModule::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_gate_2econf_2eproto);
  return ::file_level_metadata_gate_2econf_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GateConfig_NetworkModule::InitAsDefaultInstance() {
}
class GateConfig_NetworkModule::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GateConfig_NetworkModule::kFromCListenHostFieldNumber;
const int GateConfig_NetworkModule::kFromCListenPortFieldNumber;
const int GateConfig_NetworkModule::kFromCSessionNumFieldNumber;
const int GateConfig_NetworkModule::kFromCCertFilenameFieldNumber;
const int GateConfig_NetworkModule::kFromCKeyFilenameFieldNumber;
const int GateConfig_NetworkModule::kFromCKeyFilepasswordFieldNumber;
const int GateConfig_NetworkModule::kFromCHttpListenPortsFieldNumber;
const int GateConfig_NetworkModule::kFromCHttpThreadNumFieldNumber;
const int GateConfig_NetworkModule::kToWsRemoteAddrFieldNumber;
const int GateConfig_NetworkModule::kToWsThreadNumFieldNumber;
const int GateConfig_NetworkModule::kToWsSessionNumFieldNumber;
const int GateConfig_NetworkModule::kToGsRemoteAddrFieldNumber;
const int GateConfig_NetworkModule::kToGsThreadNumFieldNumber;
const int GateConfig_NetworkModule::kToGsSessionNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GateConfig_NetworkModule::GateConfig_NetworkModule()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbconfig.GateConfig.NetworkModule)
}
GateConfig_NetworkModule::GateConfig_NetworkModule(const GateConfig_NetworkModule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_c_listen_host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_c_listen_host().size() > 0) {
    from_c_listen_host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_c_listen_host_);
  }
  from_c_cert_filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_c_cert_filename().size() > 0) {
    from_c_cert_filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_c_cert_filename_);
  }
  from_c_key_filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_c_key_filename().size() > 0) {
    from_c_key_filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_c_key_filename_);
  }
  from_c_key_filepassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_c_key_filepassword().size() > 0) {
    from_c_key_filepassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_c_key_filepassword_);
  }
  from_c_http_listen_ports_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_c_http_listen_ports().size() > 0) {
    from_c_http_listen_ports_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_c_http_listen_ports_);
  }
  to_ws_remote_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to_ws_remote_addr().size() > 0) {
    to_ws_remote_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_ws_remote_addr_);
  }
  to_gs_remote_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to_gs_remote_addr().size() > 0) {
    to_gs_remote_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_gs_remote_addr_);
  }
  ::memcpy(&from_c_listen_port_, &from.from_c_listen_port_,
    static_cast<size_t>(reinterpret_cast<char*>(&to_gs_session_num_) -
    reinterpret_cast<char*>(&from_c_listen_port_)) + sizeof(to_gs_session_num_));
  // @@protoc_insertion_point(copy_constructor:pbconfig.GateConfig.NetworkModule)
}

void GateConfig_NetworkModule::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GateConfig_NetworkModule_gate_2econf_2eproto.base);
  from_c_listen_host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_c_cert_filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_c_key_filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_c_key_filepassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_c_http_listen_ports_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_ws_remote_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_gs_remote_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&from_c_listen_port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&to_gs_session_num_) -
      reinterpret_cast<char*>(&from_c_listen_port_)) + sizeof(to_gs_session_num_));
}

GateConfig_NetworkModule::~GateConfig_NetworkModule() {
  // @@protoc_insertion_point(destructor:pbconfig.GateConfig.NetworkModule)
  SharedDtor();
}

void GateConfig_NetworkModule::SharedDtor() {
  from_c_listen_host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_c_cert_filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_c_key_filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_c_key_filepassword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_c_http_listen_ports_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_ws_remote_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_gs_remote_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GateConfig_NetworkModule::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GateConfig_NetworkModule& GateConfig_NetworkModule::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GateConfig_NetworkModule_gate_2econf_2eproto.base);
  return *internal_default_instance();
}


void GateConfig_NetworkModule::Clear() {
// @@protoc_insertion_point(message_clear_start:pbconfig.GateConfig.NetworkModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  from_c_listen_host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_c_cert_filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_c_key_filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_c_key_filepassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_c_http_listen_ports_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_ws_remote_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_gs_remote_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&from_c_listen_port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&to_gs_session_num_) -
      reinterpret_cast<char*>(&from_c_listen_port_)) + sizeof(to_gs_session_num_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GateConfig_NetworkModule::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GateConfig_NetworkModule*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string from_c_listen_host = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pbconfig.GateConfig.NetworkModule.from_c_listen_host");
        object = msg->mutable_from_c_listen_host();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 from_c_listen_port = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_from_c_listen_port(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 from_c_session_num = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_from_c_session_num(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string from_c_cert_filename = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pbconfig.GateConfig.NetworkModule.from_c_cert_filename");
        object = msg->mutable_from_c_cert_filename();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string from_c_key_filename = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pbconfig.GateConfig.NetworkModule.from_c_key_filename");
        object = msg->mutable_from_c_key_filename();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string from_c_key_filepassword = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pbconfig.GateConfig.NetworkModule.from_c_key_filepassword");
        object = msg->mutable_from_c_key_filepassword();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string from_c_http_listen_ports = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pbconfig.GateConfig.NetworkModule.from_c_http_listen_ports");
        object = msg->mutable_from_c_http_listen_ports();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // uint32 from_c_http_thread_num = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_from_c_http_thread_num(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string to_ws_remote_addr = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pbconfig.GateConfig.NetworkModule.to_ws_remote_addr");
        object = msg->mutable_to_ws_remote_addr();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // uint32 to_ws_thread_num = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 80) goto handle_unusual;
        msg->set_to_ws_thread_num(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 to_ws_session_num = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 88) goto handle_unusual;
        msg->set_to_ws_session_num(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string to_gs_remote_addr = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pbconfig.GateConfig.NetworkModule.to_gs_remote_addr");
        object = msg->mutable_to_gs_remote_addr();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // uint32 to_gs_thread_num = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 104) goto handle_unusual;
        msg->set_to_gs_thread_num(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 to_gs_session_num = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 112) goto handle_unusual;
        msg->set_to_gs_session_num(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GateConfig_NetworkModule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbconfig.GateConfig.NetworkModule)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string from_c_listen_host = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_c_listen_host()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_c_listen_host().data(), static_cast<int>(this->from_c_listen_host().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pbconfig.GateConfig.NetworkModule.from_c_listen_host"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 from_c_listen_port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &from_c_listen_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 from_c_session_num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &from_c_session_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_c_cert_filename = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_c_cert_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_c_cert_filename().data(), static_cast<int>(this->from_c_cert_filename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pbconfig.GateConfig.NetworkModule.from_c_cert_filename"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_c_key_filename = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_c_key_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_c_key_filename().data(), static_cast<int>(this->from_c_key_filename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pbconfig.GateConfig.NetworkModule.from_c_key_filename"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_c_key_filepassword = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_c_key_filepassword()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_c_key_filepassword().data(), static_cast<int>(this->from_c_key_filepassword().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pbconfig.GateConfig.NetworkModule.from_c_key_filepassword"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_c_http_listen_ports = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_c_http_listen_ports()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_c_http_listen_ports().data(), static_cast<int>(this->from_c_http_listen_ports().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pbconfig.GateConfig.NetworkModule.from_c_http_listen_ports"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 from_c_http_thread_num = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &from_c_http_thread_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string to_ws_remote_addr = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to_ws_remote_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to_ws_remote_addr().data(), static_cast<int>(this->to_ws_remote_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pbconfig.GateConfig.NetworkModule.to_ws_remote_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 to_ws_thread_num = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (80 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &to_ws_thread_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 to_ws_session_num = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (88 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &to_ws_session_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string to_gs_remote_addr = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (98 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to_gs_remote_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to_gs_remote_addr().data(), static_cast<int>(this->to_gs_remote_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pbconfig.GateConfig.NetworkModule.to_gs_remote_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 to_gs_thread_num = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (104 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &to_gs_thread_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 to_gs_session_num = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (112 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &to_gs_session_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbconfig.GateConfig.NetworkModule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbconfig.GateConfig.NetworkModule)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GateConfig_NetworkModule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbconfig.GateConfig.NetworkModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_c_listen_host = 1;
  if (this->from_c_listen_host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_c_listen_host().data(), static_cast<int>(this->from_c_listen_host().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pbconfig.GateConfig.NetworkModule.from_c_listen_host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from_c_listen_host(), output);
  }

  // int32 from_c_listen_port = 2;
  if (this->from_c_listen_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->from_c_listen_port(), output);
  }

  // uint32 from_c_session_num = 3;
  if (this->from_c_session_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->from_c_session_num(), output);
  }

  // string from_c_cert_filename = 4;
  if (this->from_c_cert_filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_c_cert_filename().data(), static_cast<int>(this->from_c_cert_filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pbconfig.GateConfig.NetworkModule.from_c_cert_filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->from_c_cert_filename(), output);
  }

  // string from_c_key_filename = 5;
  if (this->from_c_key_filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_c_key_filename().data(), static_cast<int>(this->from_c_key_filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pbconfig.GateConfig.NetworkModule.from_c_key_filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->from_c_key_filename(), output);
  }

  // string from_c_key_filepassword = 6;
  if (this->from_c_key_filepassword().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_c_key_filepassword().data(), static_cast<int>(this->from_c_key_filepassword().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pbconfig.GateConfig.NetworkModule.from_c_key_filepassword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->from_c_key_filepassword(), output);
  }

  // string from_c_http_listen_ports = 7;
  if (this->from_c_http_listen_ports().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_c_http_listen_ports().data(), static_cast<int>(this->from_c_http_listen_ports().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pbconfig.GateConfig.NetworkModule.from_c_http_listen_ports");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->from_c_http_listen_ports(), output);
  }

  // uint32 from_c_http_thread_num = 8;
  if (this->from_c_http_thread_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->from_c_http_thread_num(), output);
  }

  // string to_ws_remote_addr = 9;
  if (this->to_ws_remote_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_ws_remote_addr().data(), static_cast<int>(this->to_ws_remote_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pbconfig.GateConfig.NetworkModule.to_ws_remote_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->to_ws_remote_addr(), output);
  }

  // uint32 to_ws_thread_num = 10;
  if (this->to_ws_thread_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->to_ws_thread_num(), output);
  }

  // uint32 to_ws_session_num = 11;
  if (this->to_ws_session_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->to_ws_session_num(), output);
  }

  // string to_gs_remote_addr = 12;
  if (this->to_gs_remote_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_gs_remote_addr().data(), static_cast<int>(this->to_gs_remote_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pbconfig.GateConfig.NetworkModule.to_gs_remote_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->to_gs_remote_addr(), output);
  }

  // uint32 to_gs_thread_num = 13;
  if (this->to_gs_thread_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->to_gs_thread_num(), output);
  }

  // uint32 to_gs_session_num = 14;
  if (this->to_gs_session_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->to_gs_session_num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pbconfig.GateConfig.NetworkModule)
}

::google::protobuf::uint8* GateConfig_NetworkModule::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbconfig.GateConfig.NetworkModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_c_listen_host = 1;
  if (this->from_c_listen_host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_c_listen_host().data(), static_cast<int>(this->from_c_listen_host().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pbconfig.GateConfig.NetworkModule.from_c_listen_host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from_c_listen_host(), target);
  }

  // int32 from_c_listen_port = 2;
  if (this->from_c_listen_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->from_c_listen_port(), target);
  }

  // uint32 from_c_session_num = 3;
  if (this->from_c_session_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->from_c_session_num(), target);
  }

  // string from_c_cert_filename = 4;
  if (this->from_c_cert_filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_c_cert_filename().data(), static_cast<int>(this->from_c_cert_filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pbconfig.GateConfig.NetworkModule.from_c_cert_filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->from_c_cert_filename(), target);
  }

  // string from_c_key_filename = 5;
  if (this->from_c_key_filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_c_key_filename().data(), static_cast<int>(this->from_c_key_filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pbconfig.GateConfig.NetworkModule.from_c_key_filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->from_c_key_filename(), target);
  }

  // string from_c_key_filepassword = 6;
  if (this->from_c_key_filepassword().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_c_key_filepassword().data(), static_cast<int>(this->from_c_key_filepassword().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pbconfig.GateConfig.NetworkModule.from_c_key_filepassword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->from_c_key_filepassword(), target);
  }

  // string from_c_http_listen_ports = 7;
  if (this->from_c_http_listen_ports().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_c_http_listen_ports().data(), static_cast<int>(this->from_c_http_listen_ports().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pbconfig.GateConfig.NetworkModule.from_c_http_listen_ports");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->from_c_http_listen_ports(), target);
  }

  // uint32 from_c_http_thread_num = 8;
  if (this->from_c_http_thread_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->from_c_http_thread_num(), target);
  }

  // string to_ws_remote_addr = 9;
  if (this->to_ws_remote_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_ws_remote_addr().data(), static_cast<int>(this->to_ws_remote_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pbconfig.GateConfig.NetworkModule.to_ws_remote_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->to_ws_remote_addr(), target);
  }

  // uint32 to_ws_thread_num = 10;
  if (this->to_ws_thread_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->to_ws_thread_num(), target);
  }

  // uint32 to_ws_session_num = 11;
  if (this->to_ws_session_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->to_ws_session_num(), target);
  }

  // string to_gs_remote_addr = 12;
  if (this->to_gs_remote_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_gs_remote_addr().data(), static_cast<int>(this->to_gs_remote_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pbconfig.GateConfig.NetworkModule.to_gs_remote_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->to_gs_remote_addr(), target);
  }

  // uint32 to_gs_thread_num = 13;
  if (this->to_gs_thread_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->to_gs_thread_num(), target);
  }

  // uint32 to_gs_session_num = 14;
  if (this->to_gs_session_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->to_gs_session_num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbconfig.GateConfig.NetworkModule)
  return target;
}

size_t GateConfig_NetworkModule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbconfig.GateConfig.NetworkModule)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string from_c_listen_host = 1;
  if (this->from_c_listen_host().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_c_listen_host());
  }

  // string from_c_cert_filename = 4;
  if (this->from_c_cert_filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_c_cert_filename());
  }

  // string from_c_key_filename = 5;
  if (this->from_c_key_filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_c_key_filename());
  }

  // string from_c_key_filepassword = 6;
  if (this->from_c_key_filepassword().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_c_key_filepassword());
  }

  // string from_c_http_listen_ports = 7;
  if (this->from_c_http_listen_ports().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_c_http_listen_ports());
  }

  // string to_ws_remote_addr = 9;
  if (this->to_ws_remote_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_ws_remote_addr());
  }

  // string to_gs_remote_addr = 12;
  if (this->to_gs_remote_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_gs_remote_addr());
  }

  // int32 from_c_listen_port = 2;
  if (this->from_c_listen_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->from_c_listen_port());
  }

  // uint32 from_c_session_num = 3;
  if (this->from_c_session_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->from_c_session_num());
  }

  // uint32 from_c_http_thread_num = 8;
  if (this->from_c_http_thread_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->from_c_http_thread_num());
  }

  // uint32 to_ws_thread_num = 10;
  if (this->to_ws_thread_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->to_ws_thread_num());
  }

  // uint32 to_ws_session_num = 11;
  if (this->to_ws_session_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->to_ws_session_num());
  }

  // uint32 to_gs_thread_num = 13;
  if (this->to_gs_thread_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->to_gs_thread_num());
  }

  // uint32 to_gs_session_num = 14;
  if (this->to_gs_session_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->to_gs_session_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GateConfig_NetworkModule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbconfig.GateConfig.NetworkModule)
  GOOGLE_DCHECK_NE(&from, this);
  const GateConfig_NetworkModule* source =
      ::google::protobuf::DynamicCastToGenerated<GateConfig_NetworkModule>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbconfig.GateConfig.NetworkModule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbconfig.GateConfig.NetworkModule)
    MergeFrom(*source);
  }
}

void GateConfig_NetworkModule::MergeFrom(const GateConfig_NetworkModule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbconfig.GateConfig.NetworkModule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.from_c_listen_host().size() > 0) {

    from_c_listen_host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_c_listen_host_);
  }
  if (from.from_c_cert_filename().size() > 0) {

    from_c_cert_filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_c_cert_filename_);
  }
  if (from.from_c_key_filename().size() > 0) {

    from_c_key_filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_c_key_filename_);
  }
  if (from.from_c_key_filepassword().size() > 0) {

    from_c_key_filepassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_c_key_filepassword_);
  }
  if (from.from_c_http_listen_ports().size() > 0) {

    from_c_http_listen_ports_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_c_http_listen_ports_);
  }
  if (from.to_ws_remote_addr().size() > 0) {

    to_ws_remote_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_ws_remote_addr_);
  }
  if (from.to_gs_remote_addr().size() > 0) {

    to_gs_remote_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_gs_remote_addr_);
  }
  if (from.from_c_listen_port() != 0) {
    set_from_c_listen_port(from.from_c_listen_port());
  }
  if (from.from_c_session_num() != 0) {
    set_from_c_session_num(from.from_c_session_num());
  }
  if (from.from_c_http_thread_num() != 0) {
    set_from_c_http_thread_num(from.from_c_http_thread_num());
  }
  if (from.to_ws_thread_num() != 0) {
    set_to_ws_thread_num(from.to_ws_thread_num());
  }
  if (from.to_ws_session_num() != 0) {
    set_to_ws_session_num(from.to_ws_session_num());
  }
  if (from.to_gs_thread_num() != 0) {
    set_to_gs_thread_num(from.to_gs_thread_num());
  }
  if (from.to_gs_session_num() != 0) {
    set_to_gs_session_num(from.to_gs_session_num());
  }
}

void GateConfig_NetworkModule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbconfig.GateConfig.NetworkModule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GateConfig_NetworkModule::CopyFrom(const GateConfig_NetworkModule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbconfig.GateConfig.NetworkModule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GateConfig_NetworkModule::IsInitialized() const {
  return true;
}

void GateConfig_NetworkModule::Swap(GateConfig_NetworkModule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GateConfig_NetworkModule::InternalSwap(GateConfig_NetworkModule* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  from_c_listen_host_.Swap(&other->from_c_listen_host_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  from_c_cert_filename_.Swap(&other->from_c_cert_filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  from_c_key_filename_.Swap(&other->from_c_key_filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  from_c_key_filepassword_.Swap(&other->from_c_key_filepassword_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  from_c_http_listen_ports_.Swap(&other->from_c_http_listen_ports_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  to_ws_remote_addr_.Swap(&other->to_ws_remote_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  to_gs_remote_addr_.Swap(&other->to_gs_remote_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(from_c_listen_port_, other->from_c_listen_port_);
  swap(from_c_session_num_, other->from_c_session_num_);
  swap(from_c_http_thread_num_, other->from_c_http_thread_num_);
  swap(to_ws_thread_num_, other->to_ws_thread_num_);
  swap(to_ws_session_num_, other->to_ws_session_num_);
  swap(to_gs_thread_num_, other->to_gs_thread_num_);
  swap(to_gs_session_num_, other->to_gs_session_num_);
}

::google::protobuf::Metadata GateConfig_NetworkModule::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_gate_2econf_2eproto);
  return ::file_level_metadata_gate_2econf_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GateConfig::InitAsDefaultInstance() {
  ::pbconfig::_GateConfig_default_instance_._instance.get_mutable()->logicmodule_ = const_cast< ::pbconfig::GateConfig_LogicModule*>(
      ::pbconfig::GateConfig_LogicModule::internal_default_instance());
  ::pbconfig::_GateConfig_default_instance_._instance.get_mutable()->networkmodule_ = const_cast< ::pbconfig::GateConfig_NetworkModule*>(
      ::pbconfig::GateConfig_NetworkModule::internal_default_instance());
}
class GateConfig::HasBitSetters {
 public:
  static const ::pbconfig::GateConfig_LogicModule& logicmodule(const GateConfig* msg);
  static const ::pbconfig::GateConfig_NetworkModule& networkmodule(const GateConfig* msg);
};

const ::pbconfig::GateConfig_LogicModule&
GateConfig::HasBitSetters::logicmodule(const GateConfig* msg) {
  return *msg->logicmodule_;
}
const ::pbconfig::GateConfig_NetworkModule&
GateConfig::HasBitSetters::networkmodule(const GateConfig* msg) {
  return *msg->networkmodule_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GateConfig::kLogicModuleFieldNumber;
const int GateConfig::kNetworkModuleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GateConfig::GateConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbconfig.GateConfig)
}
GateConfig::GateConfig(const GateConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_logicmodule()) {
    logicmodule_ = new ::pbconfig::GateConfig_LogicModule(*from.logicmodule_);
  } else {
    logicmodule_ = nullptr;
  }
  if (from.has_networkmodule()) {
    networkmodule_ = new ::pbconfig::GateConfig_NetworkModule(*from.networkmodule_);
  } else {
    networkmodule_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:pbconfig.GateConfig)
}

void GateConfig::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GateConfig_gate_2econf_2eproto.base);
  ::memset(&logicmodule_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&networkmodule_) -
      reinterpret_cast<char*>(&logicmodule_)) + sizeof(networkmodule_));
}

GateConfig::~GateConfig() {
  // @@protoc_insertion_point(destructor:pbconfig.GateConfig)
  SharedDtor();
}

void GateConfig::SharedDtor() {
  if (this != internal_default_instance()) delete logicmodule_;
  if (this != internal_default_instance()) delete networkmodule_;
}

void GateConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GateConfig& GateConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GateConfig_gate_2econf_2eproto.base);
  return *internal_default_instance();
}


void GateConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:pbconfig.GateConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && logicmodule_ != nullptr) {
    delete logicmodule_;
  }
  logicmodule_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && networkmodule_ != nullptr) {
    delete networkmodule_;
  }
  networkmodule_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GateConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GateConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .pbconfig.GateConfig.LogicModule logicModule = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::pbconfig::GateConfig_LogicModule::_InternalParse;
        object = msg->mutable_logicmodule();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .pbconfig.GateConfig.NetworkModule networkModule = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::pbconfig::GateConfig_NetworkModule::_InternalParse;
        object = msg->mutable_networkmodule();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GateConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbconfig.GateConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .pbconfig.GateConfig.LogicModule logicModule = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_logicmodule()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pbconfig.GateConfig.NetworkModule networkModule = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_networkmodule()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbconfig.GateConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbconfig.GateConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GateConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbconfig.GateConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pbconfig.GateConfig.LogicModule logicModule = 1;
  if (this->has_logicmodule()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::logicmodule(this), output);
  }

  // .pbconfig.GateConfig.NetworkModule networkModule = 2;
  if (this->has_networkmodule()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::networkmodule(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pbconfig.GateConfig)
}

::google::protobuf::uint8* GateConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbconfig.GateConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pbconfig.GateConfig.LogicModule logicModule = 1;
  if (this->has_logicmodule()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::logicmodule(this), target);
  }

  // .pbconfig.GateConfig.NetworkModule networkModule = 2;
  if (this->has_networkmodule()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::networkmodule(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbconfig.GateConfig)
  return target;
}

size_t GateConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbconfig.GateConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pbconfig.GateConfig.LogicModule logicModule = 1;
  if (this->has_logicmodule()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *logicmodule_);
  }

  // .pbconfig.GateConfig.NetworkModule networkModule = 2;
  if (this->has_networkmodule()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *networkmodule_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GateConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbconfig.GateConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const GateConfig* source =
      ::google::protobuf::DynamicCastToGenerated<GateConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbconfig.GateConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbconfig.GateConfig)
    MergeFrom(*source);
  }
}

void GateConfig::MergeFrom(const GateConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbconfig.GateConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_logicmodule()) {
    mutable_logicmodule()->::pbconfig::GateConfig_LogicModule::MergeFrom(from.logicmodule());
  }
  if (from.has_networkmodule()) {
    mutable_networkmodule()->::pbconfig::GateConfig_NetworkModule::MergeFrom(from.networkmodule());
  }
}

void GateConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbconfig.GateConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GateConfig::CopyFrom(const GateConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbconfig.GateConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GateConfig::IsInitialized() const {
  return true;
}

void GateConfig::Swap(GateConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GateConfig::InternalSwap(GateConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(logicmodule_, other->logicmodule_);
  swap(networkmodule_, other->networkmodule_);
}

::google::protobuf::Metadata GateConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_gate_2econf_2eproto);
  return ::file_level_metadata_gate_2econf_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pbconfig
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::pbconfig::GateConfig_ResourceModule* Arena::CreateMaybeMessage< ::pbconfig::GateConfig_ResourceModule >(Arena* arena) {
  return Arena::CreateInternal< ::pbconfig::GateConfig_ResourceModule >(arena);
}
template<> PROTOBUF_NOINLINE ::pbconfig::GateConfig_LogicModule* Arena::CreateMaybeMessage< ::pbconfig::GateConfig_LogicModule >(Arena* arena) {
  return Arena::CreateInternal< ::pbconfig::GateConfig_LogicModule >(arena);
}
template<> PROTOBUF_NOINLINE ::pbconfig::GateConfig_DatabaseModule* Arena::CreateMaybeMessage< ::pbconfig::GateConfig_DatabaseModule >(Arena* arena) {
  return Arena::CreateInternal< ::pbconfig::GateConfig_DatabaseModule >(arena);
}
template<> PROTOBUF_NOINLINE ::pbconfig::GateConfig_NetworkModule* Arena::CreateMaybeMessage< ::pbconfig::GateConfig_NetworkModule >(Arena* arena) {
  return Arena::CreateInternal< ::pbconfig::GateConfig_NetworkModule >(arena);
}
template<> PROTOBUF_NOINLINE ::pbconfig::GateConfig* Arena::CreateMaybeMessage< ::pbconfig::GateConfig >(Arena* arena) {
  return Arena::CreateInternal< ::pbconfig::GateConfig >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
