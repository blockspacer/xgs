// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core.proto

#ifndef PROTOBUF_INCLUDED_core_2eproto
#define PROTOBUF_INCLUDED_core_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_core_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_core_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[13]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_core_2eproto();
namespace protos {
class LoginAuth;
class LoginAuthDefaultTypeInternal;
extern LoginAuthDefaultTypeInternal _LoginAuth_default_instance_;
class LoginAuthResult;
class LoginAuthResultDefaultTypeInternal;
extern LoginAuthResultDefaultTypeInternal _LoginAuthResult_default_instance_;
class Ping;
class PingDefaultTypeInternal;
extern PingDefaultTypeInternal _Ping_default_instance_;
class Pong;
class PongDefaultTypeInternal;
extern PongDefaultTypeInternal _Pong_default_instance_;
class QueryServerInfo;
class QueryServerInfoDefaultTypeInternal;
extern QueryServerInfoDefaultTypeInternal _QueryServerInfo_default_instance_;
class QueryServerInfoResult;
class QueryServerInfoResultDefaultTypeInternal;
extern QueryServerInfoResultDefaultTypeInternal _QueryServerInfoResult_default_instance_;
class RegisterService;
class RegisterServiceDefaultTypeInternal;
extern RegisterServiceDefaultTypeInternal _RegisterService_default_instance_;
class RegisterServiceResult;
class RegisterServiceResultDefaultTypeInternal;
extern RegisterServiceResultDefaultTypeInternal _RegisterServiceResult_default_instance_;
class RegisterService_ServicesEntry_DoNotUse;
class RegisterService_ServicesEntry_DoNotUseDefaultTypeInternal;
extern RegisterService_ServicesEntry_DoNotUseDefaultTypeInternal _RegisterService_ServicesEntry_DoNotUse_default_instance_;
class ServerInfo;
class ServerInfoDefaultTypeInternal;
extern ServerInfoDefaultTypeInternal _ServerInfo_default_instance_;
class ServiceParam;
class ServiceParamDefaultTypeInternal;
extern ServiceParamDefaultTypeInternal _ServiceParam_default_instance_;
class UnregisterService;
class UnregisterServiceDefaultTypeInternal;
extern UnregisterServiceDefaultTypeInternal _UnregisterService_default_instance_;
class UnregisterServiceResult;
class UnregisterServiceResultDefaultTypeInternal;
extern UnregisterServiceResultDefaultTypeInternal _UnregisterServiceResult_default_instance_;
}  // namespace protos
namespace google {
namespace protobuf {
template<> ::protos::LoginAuth* Arena::CreateMaybeMessage<::protos::LoginAuth>(Arena*);
template<> ::protos::LoginAuthResult* Arena::CreateMaybeMessage<::protos::LoginAuthResult>(Arena*);
template<> ::protos::Ping* Arena::CreateMaybeMessage<::protos::Ping>(Arena*);
template<> ::protos::Pong* Arena::CreateMaybeMessage<::protos::Pong>(Arena*);
template<> ::protos::QueryServerInfo* Arena::CreateMaybeMessage<::protos::QueryServerInfo>(Arena*);
template<> ::protos::QueryServerInfoResult* Arena::CreateMaybeMessage<::protos::QueryServerInfoResult>(Arena*);
template<> ::protos::RegisterService* Arena::CreateMaybeMessage<::protos::RegisterService>(Arena*);
template<> ::protos::RegisterServiceResult* Arena::CreateMaybeMessage<::protos::RegisterServiceResult>(Arena*);
template<> ::protos::RegisterService_ServicesEntry_DoNotUse* Arena::CreateMaybeMessage<::protos::RegisterService_ServicesEntry_DoNotUse>(Arena*);
template<> ::protos::ServerInfo* Arena::CreateMaybeMessage<::protos::ServerInfo>(Arena*);
template<> ::protos::ServiceParam* Arena::CreateMaybeMessage<::protos::ServiceParam>(Arena*);
template<> ::protos::UnregisterService* Arena::CreateMaybeMessage<::protos::UnregisterService>(Arena*);
template<> ::protos::UnregisterServiceResult* Arena::CreateMaybeMessage<::protos::UnregisterServiceResult>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace protos {

// ===================================================================

class Ping :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.Ping) */ {
 public:
  Ping();
  virtual ~Ping();

  Ping(const Ping& from);

  inline Ping& operator=(const Ping& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Ping(Ping&& from) noexcept
    : Ping() {
    *this = ::std::move(from);
  }

  inline Ping& operator=(Ping&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Ping& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Ping* internal_default_instance() {
    return reinterpret_cast<const Ping*>(
               &_Ping_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Ping* other);
  friend void swap(Ping& a, Ping& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Ping* New() const final {
    return CreateMaybeMessage<Ping>(nullptr);
  }

  Ping* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Ping>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Ping& from);
  void MergeFrom(const Ping& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Ping* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string message = 1;
  void clear_message();
  static const int kMessageFieldNumber = 1;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:protos.Ping)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_core_2eproto;
};
// -------------------------------------------------------------------

class Pong :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.Pong) */ {
 public:
  Pong();
  virtual ~Pong();

  Pong(const Pong& from);

  inline Pong& operator=(const Pong& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Pong(Pong&& from) noexcept
    : Pong() {
    *this = ::std::move(from);
  }

  inline Pong& operator=(Pong&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Pong& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Pong* internal_default_instance() {
    return reinterpret_cast<const Pong*>(
               &_Pong_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Pong* other);
  friend void swap(Pong& a, Pong& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Pong* New() const final {
    return CreateMaybeMessage<Pong>(nullptr);
  }

  Pong* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Pong>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Pong& from);
  void MergeFrom(const Pong& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Pong* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string message = 1;
  void clear_message();
  static const int kMessageFieldNumber = 1;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:protos.Pong)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_core_2eproto;
};
// -------------------------------------------------------------------

class LoginAuth :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.LoginAuth) */ {
 public:
  LoginAuth();
  virtual ~LoginAuth();

  LoginAuth(const LoginAuth& from);

  inline LoginAuth& operator=(const LoginAuth& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginAuth(LoginAuth&& from) noexcept
    : LoginAuth() {
    *this = ::std::move(from);
  }

  inline LoginAuth& operator=(LoginAuth&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LoginAuth& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginAuth* internal_default_instance() {
    return reinterpret_cast<const LoginAuth*>(
               &_LoginAuth_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(LoginAuth* other);
  friend void swap(LoginAuth& a, LoginAuth& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginAuth* New() const final {
    return CreateMaybeMessage<LoginAuth>(nullptr);
  }

  LoginAuth* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LoginAuth>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LoginAuth& from);
  void MergeFrom(const LoginAuth& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoginAuth* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 4;
  void clear_name();
  static const int kNameFieldNumber = 4;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int64 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int64 code() const;
  void set_code(::google::protobuf::int64 value);

  // int32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // int32 group = 3;
  void clear_group();
  static const int kGroupFieldNumber = 3;
  ::google::protobuf::int32 group() const;
  void set_group(::google::protobuf::int32 value);

  // int32 listen_client_port = 5;
  void clear_listen_client_port();
  static const int kListenClientPortFieldNumber = 5;
  ::google::protobuf::int32 listen_client_port() const;
  void set_listen_client_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.LoginAuth)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int64 code_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 group_;
  ::google::protobuf::int32 listen_client_port_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_core_2eproto;
};
// -------------------------------------------------------------------

class LoginAuthResult :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.LoginAuthResult) */ {
 public:
  LoginAuthResult();
  virtual ~LoginAuthResult();

  LoginAuthResult(const LoginAuthResult& from);

  inline LoginAuthResult& operator=(const LoginAuthResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginAuthResult(LoginAuthResult&& from) noexcept
    : LoginAuthResult() {
    *this = ::std::move(from);
  }

  inline LoginAuthResult& operator=(LoginAuthResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LoginAuthResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginAuthResult* internal_default_instance() {
    return reinterpret_cast<const LoginAuthResult*>(
               &_LoginAuthResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(LoginAuthResult* other);
  friend void swap(LoginAuthResult& a, LoginAuthResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginAuthResult* New() const final {
    return CreateMaybeMessage<LoginAuthResult>(nullptr);
  }

  LoginAuthResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LoginAuthResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LoginAuthResult& from);
  void MergeFrom(const LoginAuthResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoginAuthResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string errmsg = 2;
  void clear_errmsg();
  static const int kErrmsgFieldNumber = 2;
  const ::std::string& errmsg() const;
  void set_errmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_errmsg(::std::string&& value);
  #endif
  void set_errmsg(const char* value);
  void set_errmsg(const char* value, size_t size);
  ::std::string* mutable_errmsg();
  ::std::string* release_errmsg();
  void set_allocated_errmsg(::std::string* errmsg);

  // int32 error = 1;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.LoginAuthResult)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr errmsg_;
  ::google::protobuf::int32 error_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_core_2eproto;
};
// -------------------------------------------------------------------

class ServiceParam :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.ServiceParam) */ {
 public:
  ServiceParam();
  virtual ~ServiceParam();

  ServiceParam(const ServiceParam& from);

  inline ServiceParam& operator=(const ServiceParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServiceParam(ServiceParam&& from) noexcept
    : ServiceParam() {
    *this = ::std::move(from);
  }

  inline ServiceParam& operator=(ServiceParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ServiceParam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ServiceParam* internal_default_instance() {
    return reinterpret_cast<const ServiceParam*>(
               &_ServiceParam_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ServiceParam* other);
  friend void swap(ServiceParam& a, ServiceParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServiceParam* New() const final {
    return CreateMaybeMessage<ServiceParam>(nullptr);
  }

  ServiceParam* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ServiceParam>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ServiceParam& from);
  void MergeFrom(const ServiceParam& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServiceParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 p1 = 1;
  void clear_p1();
  static const int kP1FieldNumber = 1;
  ::google::protobuf::int64 p1() const;
  void set_p1(::google::protobuf::int64 value);

  // int64 p2 = 2;
  void clear_p2();
  static const int kP2FieldNumber = 2;
  ::google::protobuf::int64 p2() const;
  void set_p2(::google::protobuf::int64 value);

  // int64 p3 = 3;
  void clear_p3();
  static const int kP3FieldNumber = 3;
  ::google::protobuf::int64 p3() const;
  void set_p3(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:protos.ServiceParam)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 p1_;
  ::google::protobuf::int64 p2_;
  ::google::protobuf::int64 p3_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_core_2eproto;
};
// -------------------------------------------------------------------

class RegisterService_ServicesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<RegisterService_ServicesEntry_DoNotUse, 
    ::std::string, ::protos::ServiceParam,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<RegisterService_ServicesEntry_DoNotUse, 
    ::std::string, ::protos::ServiceParam,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  RegisterService_ServicesEntry_DoNotUse();
  RegisterService_ServicesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const RegisterService_ServicesEntry_DoNotUse& other);
  static const RegisterService_ServicesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const RegisterService_ServicesEntry_DoNotUse*>(&_RegisterService_ServicesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class RegisterService :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.RegisterService) */ {
 public:
  RegisterService();
  virtual ~RegisterService();

  RegisterService(const RegisterService& from);

  inline RegisterService& operator=(const RegisterService& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegisterService(RegisterService&& from) noexcept
    : RegisterService() {
    *this = ::std::move(from);
  }

  inline RegisterService& operator=(RegisterService&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RegisterService& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RegisterService* internal_default_instance() {
    return reinterpret_cast<const RegisterService*>(
               &_RegisterService_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(RegisterService* other);
  friend void swap(RegisterService& a, RegisterService& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegisterService* New() const final {
    return CreateMaybeMessage<RegisterService>(nullptr);
  }

  RegisterService* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RegisterService>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RegisterService& from);
  void MergeFrom(const RegisterService& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RegisterService* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .protos.ServiceParam> services = 1;
  int services_size() const;
  void clear_services();
  static const int kServicesFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::protos::ServiceParam >&
      services() const;
  ::google::protobuf::Map< ::std::string, ::protos::ServiceParam >*
      mutable_services();

  // @@protoc_insertion_point(class_scope:protos.RegisterService)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      RegisterService_ServicesEntry_DoNotUse,
      ::std::string, ::protos::ServiceParam,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > services_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_core_2eproto;
};
// -------------------------------------------------------------------

class RegisterServiceResult :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.RegisterServiceResult) */ {
 public:
  RegisterServiceResult();
  virtual ~RegisterServiceResult();

  RegisterServiceResult(const RegisterServiceResult& from);

  inline RegisterServiceResult& operator=(const RegisterServiceResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegisterServiceResult(RegisterServiceResult&& from) noexcept
    : RegisterServiceResult() {
    *this = ::std::move(from);
  }

  inline RegisterServiceResult& operator=(RegisterServiceResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RegisterServiceResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RegisterServiceResult* internal_default_instance() {
    return reinterpret_cast<const RegisterServiceResult*>(
               &_RegisterServiceResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(RegisterServiceResult* other);
  friend void swap(RegisterServiceResult& a, RegisterServiceResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegisterServiceResult* New() const final {
    return CreateMaybeMessage<RegisterServiceResult>(nullptr);
  }

  RegisterServiceResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RegisterServiceResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RegisterServiceResult& from);
  void MergeFrom(const RegisterServiceResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RegisterServiceResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string errmsg = 2;
  void clear_errmsg();
  static const int kErrmsgFieldNumber = 2;
  const ::std::string& errmsg() const;
  void set_errmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_errmsg(::std::string&& value);
  #endif
  void set_errmsg(const char* value);
  void set_errmsg(const char* value, size_t size);
  ::std::string* mutable_errmsg();
  ::std::string* release_errmsg();
  void set_allocated_errmsg(::std::string* errmsg);

  // int32 error = 1;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.RegisterServiceResult)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr errmsg_;
  ::google::protobuf::int32 error_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_core_2eproto;
};
// -------------------------------------------------------------------

class UnregisterService :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.UnregisterService) */ {
 public:
  UnregisterService();
  virtual ~UnregisterService();

  UnregisterService(const UnregisterService& from);

  inline UnregisterService& operator=(const UnregisterService& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnregisterService(UnregisterService&& from) noexcept
    : UnregisterService() {
    *this = ::std::move(from);
  }

  inline UnregisterService& operator=(UnregisterService&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UnregisterService& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnregisterService* internal_default_instance() {
    return reinterpret_cast<const UnregisterService*>(
               &_UnregisterService_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(UnregisterService* other);
  friend void swap(UnregisterService& a, UnregisterService& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnregisterService* New() const final {
    return CreateMaybeMessage<UnregisterService>(nullptr);
  }

  UnregisterService* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UnregisterService>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UnregisterService& from);
  void MergeFrom(const UnregisterService& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnregisterService* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string service_names = 1;
  int service_names_size() const;
  void clear_service_names();
  static const int kServiceNamesFieldNumber = 1;
  const ::std::string& service_names(int index) const;
  ::std::string* mutable_service_names(int index);
  void set_service_names(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_service_names(int index, ::std::string&& value);
  #endif
  void set_service_names(int index, const char* value);
  void set_service_names(int index, const char* value, size_t size);
  ::std::string* add_service_names();
  void add_service_names(const ::std::string& value);
  #if LANG_CXX11
  void add_service_names(::std::string&& value);
  #endif
  void add_service_names(const char* value);
  void add_service_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& service_names() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_service_names();

  // @@protoc_insertion_point(class_scope:protos.UnregisterService)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField<::std::string> service_names_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_core_2eproto;
};
// -------------------------------------------------------------------

class UnregisterServiceResult :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.UnregisterServiceResult) */ {
 public:
  UnregisterServiceResult();
  virtual ~UnregisterServiceResult();

  UnregisterServiceResult(const UnregisterServiceResult& from);

  inline UnregisterServiceResult& operator=(const UnregisterServiceResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnregisterServiceResult(UnregisterServiceResult&& from) noexcept
    : UnregisterServiceResult() {
    *this = ::std::move(from);
  }

  inline UnregisterServiceResult& operator=(UnregisterServiceResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UnregisterServiceResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnregisterServiceResult* internal_default_instance() {
    return reinterpret_cast<const UnregisterServiceResult*>(
               &_UnregisterServiceResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(UnregisterServiceResult* other);
  friend void swap(UnregisterServiceResult& a, UnregisterServiceResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnregisterServiceResult* New() const final {
    return CreateMaybeMessage<UnregisterServiceResult>(nullptr);
  }

  UnregisterServiceResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UnregisterServiceResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UnregisterServiceResult& from);
  void MergeFrom(const UnregisterServiceResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnregisterServiceResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string errmsg = 2;
  void clear_errmsg();
  static const int kErrmsgFieldNumber = 2;
  const ::std::string& errmsg() const;
  void set_errmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_errmsg(::std::string&& value);
  #endif
  void set_errmsg(const char* value);
  void set_errmsg(const char* value, size_t size);
  ::std::string* mutable_errmsg();
  ::std::string* release_errmsg();
  void set_allocated_errmsg(::std::string* errmsg);

  // int32 error = 1;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.UnregisterServiceResult)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr errmsg_;
  ::google::protobuf::int32 error_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_core_2eproto;
};
// -------------------------------------------------------------------

class ServerInfo :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.ServerInfo) */ {
 public:
  ServerInfo();
  virtual ~ServerInfo();

  ServerInfo(const ServerInfo& from);

  inline ServerInfo& operator=(const ServerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerInfo(ServerInfo&& from) noexcept
    : ServerInfo() {
    *this = ::std::move(from);
  }

  inline ServerInfo& operator=(ServerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ServerInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ServerInfo* internal_default_instance() {
    return reinterpret_cast<const ServerInfo*>(
               &_ServerInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(ServerInfo* other);
  friend void swap(ServerInfo& a, ServerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerInfo* New() const final {
    return CreateMaybeMessage<ServerInfo>(nullptr);
  }

  ServerInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ServerInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ServerInfo& from);
  void MergeFrom(const ServerInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // int32 group = 2;
  void clear_group();
  static const int kGroupFieldNumber = 2;
  ::google::protobuf::int32 group() const;
  void set_group(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.ServerInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 group_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_core_2eproto;
};
// -------------------------------------------------------------------

class QueryServerInfo :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.QueryServerInfo) */ {
 public:
  QueryServerInfo();
  virtual ~QueryServerInfo();

  QueryServerInfo(const QueryServerInfo& from);

  inline QueryServerInfo& operator=(const QueryServerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QueryServerInfo(QueryServerInfo&& from) noexcept
    : QueryServerInfo() {
    *this = ::std::move(from);
  }

  inline QueryServerInfo& operator=(QueryServerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const QueryServerInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QueryServerInfo* internal_default_instance() {
    return reinterpret_cast<const QueryServerInfo*>(
               &_QueryServerInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(QueryServerInfo* other);
  friend void swap(QueryServerInfo& a, QueryServerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QueryServerInfo* New() const final {
    return CreateMaybeMessage<QueryServerInfo>(nullptr);
  }

  QueryServerInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<QueryServerInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const QueryServerInfo& from);
  void MergeFrom(const QueryServerInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryServerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:protos.QueryServerInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_core_2eproto;
};
// -------------------------------------------------------------------

class QueryServerInfoResult :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.QueryServerInfoResult) */ {
 public:
  QueryServerInfoResult();
  virtual ~QueryServerInfoResult();

  QueryServerInfoResult(const QueryServerInfoResult& from);

  inline QueryServerInfoResult& operator=(const QueryServerInfoResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QueryServerInfoResult(QueryServerInfoResult&& from) noexcept
    : QueryServerInfoResult() {
    *this = ::std::move(from);
  }

  inline QueryServerInfoResult& operator=(QueryServerInfoResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const QueryServerInfoResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QueryServerInfoResult* internal_default_instance() {
    return reinterpret_cast<const QueryServerInfoResult*>(
               &_QueryServerInfoResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(QueryServerInfoResult* other);
  friend void swap(QueryServerInfoResult& a, QueryServerInfoResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QueryServerInfoResult* New() const final {
    return CreateMaybeMessage<QueryServerInfoResult>(nullptr);
  }

  QueryServerInfoResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<QueryServerInfoResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const QueryServerInfoResult& from);
  void MergeFrom(const QueryServerInfoResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryServerInfoResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protos.ServerInfo infos = 1;
  int infos_size() const;
  void clear_infos();
  static const int kInfosFieldNumber = 1;
  ::protos::ServerInfo* mutable_infos(int index);
  ::google::protobuf::RepeatedPtrField< ::protos::ServerInfo >*
      mutable_infos();
  const ::protos::ServerInfo& infos(int index) const;
  ::protos::ServerInfo* add_infos();
  const ::google::protobuf::RepeatedPtrField< ::protos::ServerInfo >&
      infos() const;

  // @@protoc_insertion_point(class_scope:protos.QueryServerInfoResult)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::protos::ServerInfo > infos_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_core_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Ping

// string message = 1;
inline void Ping::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Ping::message() const {
  // @@protoc_insertion_point(field_get:protos.Ping.message)
  return message_.GetNoArena();
}
inline void Ping::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.Ping.message)
}
#if LANG_CXX11
inline void Ping::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.Ping.message)
}
#endif
inline void Ping::set_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.Ping.message)
}
inline void Ping::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.Ping.message)
}
inline ::std::string* Ping::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:protos.Ping.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Ping::release_message() {
  // @@protoc_insertion_point(field_release:protos.Ping.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Ping::set_allocated_message(::std::string* message) {
  if (message != nullptr) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:protos.Ping.message)
}

// -------------------------------------------------------------------

// Pong

// string message = 1;
inline void Pong::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Pong::message() const {
  // @@protoc_insertion_point(field_get:protos.Pong.message)
  return message_.GetNoArena();
}
inline void Pong::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.Pong.message)
}
#if LANG_CXX11
inline void Pong::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.Pong.message)
}
#endif
inline void Pong::set_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.Pong.message)
}
inline void Pong::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.Pong.message)
}
inline ::std::string* Pong::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:protos.Pong.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Pong::release_message() {
  // @@protoc_insertion_point(field_release:protos.Pong.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Pong::set_allocated_message(::std::string* message) {
  if (message != nullptr) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:protos.Pong.message)
}

// -------------------------------------------------------------------

// LoginAuth

// int64 code = 1;
inline void LoginAuth::clear_code() {
  code_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 LoginAuth::code() const {
  // @@protoc_insertion_point(field_get:protos.LoginAuth.code)
  return code_;
}
inline void LoginAuth::set_code(::google::protobuf::int64 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:protos.LoginAuth.code)
}

// int32 id = 2;
inline void LoginAuth::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 LoginAuth::id() const {
  // @@protoc_insertion_point(field_get:protos.LoginAuth.id)
  return id_;
}
inline void LoginAuth::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:protos.LoginAuth.id)
}

// int32 group = 3;
inline void LoginAuth::clear_group() {
  group_ = 0;
}
inline ::google::protobuf::int32 LoginAuth::group() const {
  // @@protoc_insertion_point(field_get:protos.LoginAuth.group)
  return group_;
}
inline void LoginAuth::set_group(::google::protobuf::int32 value) {
  
  group_ = value;
  // @@protoc_insertion_point(field_set:protos.LoginAuth.group)
}

// string name = 4;
inline void LoginAuth::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginAuth::name() const {
  // @@protoc_insertion_point(field_get:protos.LoginAuth.name)
  return name_.GetNoArena();
}
inline void LoginAuth::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.LoginAuth.name)
}
#if LANG_CXX11
inline void LoginAuth::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.LoginAuth.name)
}
#endif
inline void LoginAuth::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.LoginAuth.name)
}
inline void LoginAuth::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.LoginAuth.name)
}
inline ::std::string* LoginAuth::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:protos.LoginAuth.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginAuth::release_name() {
  // @@protoc_insertion_point(field_release:protos.LoginAuth.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginAuth::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:protos.LoginAuth.name)
}

// int32 listen_client_port = 5;
inline void LoginAuth::clear_listen_client_port() {
  listen_client_port_ = 0;
}
inline ::google::protobuf::int32 LoginAuth::listen_client_port() const {
  // @@protoc_insertion_point(field_get:protos.LoginAuth.listen_client_port)
  return listen_client_port_;
}
inline void LoginAuth::set_listen_client_port(::google::protobuf::int32 value) {
  
  listen_client_port_ = value;
  // @@protoc_insertion_point(field_set:protos.LoginAuth.listen_client_port)
}

// -------------------------------------------------------------------

// LoginAuthResult

// int32 error = 1;
inline void LoginAuthResult::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 LoginAuthResult::error() const {
  // @@protoc_insertion_point(field_get:protos.LoginAuthResult.error)
  return error_;
}
inline void LoginAuthResult::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:protos.LoginAuthResult.error)
}

// string errmsg = 2;
inline void LoginAuthResult::clear_errmsg() {
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginAuthResult::errmsg() const {
  // @@protoc_insertion_point(field_get:protos.LoginAuthResult.errmsg)
  return errmsg_.GetNoArena();
}
inline void LoginAuthResult::set_errmsg(const ::std::string& value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.LoginAuthResult.errmsg)
}
#if LANG_CXX11
inline void LoginAuthResult::set_errmsg(::std::string&& value) {
  
  errmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.LoginAuthResult.errmsg)
}
#endif
inline void LoginAuthResult::set_errmsg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.LoginAuthResult.errmsg)
}
inline void LoginAuthResult::set_errmsg(const char* value, size_t size) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.LoginAuthResult.errmsg)
}
inline ::std::string* LoginAuthResult::mutable_errmsg() {
  
  // @@protoc_insertion_point(field_mutable:protos.LoginAuthResult.errmsg)
  return errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginAuthResult::release_errmsg() {
  // @@protoc_insertion_point(field_release:protos.LoginAuthResult.errmsg)
  
  return errmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginAuthResult::set_allocated_errmsg(::std::string* errmsg) {
  if (errmsg != nullptr) {
    
  } else {
    
  }
  errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmsg);
  // @@protoc_insertion_point(field_set_allocated:protos.LoginAuthResult.errmsg)
}

// -------------------------------------------------------------------

// ServiceParam

// int64 p1 = 1;
inline void ServiceParam::clear_p1() {
  p1_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 ServiceParam::p1() const {
  // @@protoc_insertion_point(field_get:protos.ServiceParam.p1)
  return p1_;
}
inline void ServiceParam::set_p1(::google::protobuf::int64 value) {
  
  p1_ = value;
  // @@protoc_insertion_point(field_set:protos.ServiceParam.p1)
}

// int64 p2 = 2;
inline void ServiceParam::clear_p2() {
  p2_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 ServiceParam::p2() const {
  // @@protoc_insertion_point(field_get:protos.ServiceParam.p2)
  return p2_;
}
inline void ServiceParam::set_p2(::google::protobuf::int64 value) {
  
  p2_ = value;
  // @@protoc_insertion_point(field_set:protos.ServiceParam.p2)
}

// int64 p3 = 3;
inline void ServiceParam::clear_p3() {
  p3_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 ServiceParam::p3() const {
  // @@protoc_insertion_point(field_get:protos.ServiceParam.p3)
  return p3_;
}
inline void ServiceParam::set_p3(::google::protobuf::int64 value) {
  
  p3_ = value;
  // @@protoc_insertion_point(field_set:protos.ServiceParam.p3)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// RegisterService

// map<string, .protos.ServiceParam> services = 1;
inline int RegisterService::services_size() const {
  return services_.size();
}
inline void RegisterService::clear_services() {
  services_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::protos::ServiceParam >&
RegisterService::services() const {
  // @@protoc_insertion_point(field_map:protos.RegisterService.services)
  return services_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::protos::ServiceParam >*
RegisterService::mutable_services() {
  // @@protoc_insertion_point(field_mutable_map:protos.RegisterService.services)
  return services_.MutableMap();
}

// -------------------------------------------------------------------

// RegisterServiceResult

// int32 error = 1;
inline void RegisterServiceResult::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 RegisterServiceResult::error() const {
  // @@protoc_insertion_point(field_get:protos.RegisterServiceResult.error)
  return error_;
}
inline void RegisterServiceResult::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:protos.RegisterServiceResult.error)
}

// string errmsg = 2;
inline void RegisterServiceResult::clear_errmsg() {
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterServiceResult::errmsg() const {
  // @@protoc_insertion_point(field_get:protos.RegisterServiceResult.errmsg)
  return errmsg_.GetNoArena();
}
inline void RegisterServiceResult::set_errmsg(const ::std::string& value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.RegisterServiceResult.errmsg)
}
#if LANG_CXX11
inline void RegisterServiceResult::set_errmsg(::std::string&& value) {
  
  errmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.RegisterServiceResult.errmsg)
}
#endif
inline void RegisterServiceResult::set_errmsg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.RegisterServiceResult.errmsg)
}
inline void RegisterServiceResult::set_errmsg(const char* value, size_t size) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.RegisterServiceResult.errmsg)
}
inline ::std::string* RegisterServiceResult::mutable_errmsg() {
  
  // @@protoc_insertion_point(field_mutable:protos.RegisterServiceResult.errmsg)
  return errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterServiceResult::release_errmsg() {
  // @@protoc_insertion_point(field_release:protos.RegisterServiceResult.errmsg)
  
  return errmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterServiceResult::set_allocated_errmsg(::std::string* errmsg) {
  if (errmsg != nullptr) {
    
  } else {
    
  }
  errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmsg);
  // @@protoc_insertion_point(field_set_allocated:protos.RegisterServiceResult.errmsg)
}

// -------------------------------------------------------------------

// UnregisterService

// repeated string service_names = 1;
inline int UnregisterService::service_names_size() const {
  return service_names_.size();
}
inline void UnregisterService::clear_service_names() {
  service_names_.Clear();
}
inline const ::std::string& UnregisterService::service_names(int index) const {
  // @@protoc_insertion_point(field_get:protos.UnregisterService.service_names)
  return service_names_.Get(index);
}
inline ::std::string* UnregisterService::mutable_service_names(int index) {
  // @@protoc_insertion_point(field_mutable:protos.UnregisterService.service_names)
  return service_names_.Mutable(index);
}
inline void UnregisterService::set_service_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protos.UnregisterService.service_names)
  service_names_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void UnregisterService::set_service_names(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:protos.UnregisterService.service_names)
  service_names_.Mutable(index)->assign(std::move(value));
}
#endif
inline void UnregisterService::set_service_names(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  service_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protos.UnregisterService.service_names)
}
inline void UnregisterService::set_service_names(int index, const char* value, size_t size) {
  service_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protos.UnregisterService.service_names)
}
inline ::std::string* UnregisterService::add_service_names() {
  // @@protoc_insertion_point(field_add_mutable:protos.UnregisterService.service_names)
  return service_names_.Add();
}
inline void UnregisterService::add_service_names(const ::std::string& value) {
  service_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protos.UnregisterService.service_names)
}
#if LANG_CXX11
inline void UnregisterService::add_service_names(::std::string&& value) {
  service_names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:protos.UnregisterService.service_names)
}
#endif
inline void UnregisterService::add_service_names(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  service_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protos.UnregisterService.service_names)
}
inline void UnregisterService::add_service_names(const char* value, size_t size) {
  service_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protos.UnregisterService.service_names)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
UnregisterService::service_names() const {
  // @@protoc_insertion_point(field_list:protos.UnregisterService.service_names)
  return service_names_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
UnregisterService::mutable_service_names() {
  // @@protoc_insertion_point(field_mutable_list:protos.UnregisterService.service_names)
  return &service_names_;
}

// -------------------------------------------------------------------

// UnregisterServiceResult

// int32 error = 1;
inline void UnregisterServiceResult::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 UnregisterServiceResult::error() const {
  // @@protoc_insertion_point(field_get:protos.UnregisterServiceResult.error)
  return error_;
}
inline void UnregisterServiceResult::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:protos.UnregisterServiceResult.error)
}

// string errmsg = 2;
inline void UnregisterServiceResult::clear_errmsg() {
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnregisterServiceResult::errmsg() const {
  // @@protoc_insertion_point(field_get:protos.UnregisterServiceResult.errmsg)
  return errmsg_.GetNoArena();
}
inline void UnregisterServiceResult::set_errmsg(const ::std::string& value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.UnregisterServiceResult.errmsg)
}
#if LANG_CXX11
inline void UnregisterServiceResult::set_errmsg(::std::string&& value) {
  
  errmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.UnregisterServiceResult.errmsg)
}
#endif
inline void UnregisterServiceResult::set_errmsg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.UnregisterServiceResult.errmsg)
}
inline void UnregisterServiceResult::set_errmsg(const char* value, size_t size) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.UnregisterServiceResult.errmsg)
}
inline ::std::string* UnregisterServiceResult::mutable_errmsg() {
  
  // @@protoc_insertion_point(field_mutable:protos.UnregisterServiceResult.errmsg)
  return errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnregisterServiceResult::release_errmsg() {
  // @@protoc_insertion_point(field_release:protos.UnregisterServiceResult.errmsg)
  
  return errmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnregisterServiceResult::set_allocated_errmsg(::std::string* errmsg) {
  if (errmsg != nullptr) {
    
  } else {
    
  }
  errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmsg);
  // @@protoc_insertion_point(field_set_allocated:protos.UnregisterServiceResult.errmsg)
}

// -------------------------------------------------------------------

// ServerInfo

// int32 id = 1;
inline void ServerInfo::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 ServerInfo::id() const {
  // @@protoc_insertion_point(field_get:protos.ServerInfo.id)
  return id_;
}
inline void ServerInfo::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:protos.ServerInfo.id)
}

// int32 group = 2;
inline void ServerInfo::clear_group() {
  group_ = 0;
}
inline ::google::protobuf::int32 ServerInfo::group() const {
  // @@protoc_insertion_point(field_get:protos.ServerInfo.group)
  return group_;
}
inline void ServerInfo::set_group(::google::protobuf::int32 value) {
  
  group_ = value;
  // @@protoc_insertion_point(field_set:protos.ServerInfo.group)
}

// string name = 3;
inline void ServerInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ServerInfo::name() const {
  // @@protoc_insertion_point(field_get:protos.ServerInfo.name)
  return name_.GetNoArena();
}
inline void ServerInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.ServerInfo.name)
}
#if LANG_CXX11
inline void ServerInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.ServerInfo.name)
}
#endif
inline void ServerInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.ServerInfo.name)
}
inline void ServerInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.ServerInfo.name)
}
inline ::std::string* ServerInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:protos.ServerInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServerInfo::release_name() {
  // @@protoc_insertion_point(field_release:protos.ServerInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServerInfo::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:protos.ServerInfo.name)
}

// -------------------------------------------------------------------

// QueryServerInfo

// string name = 1;
inline void QueryServerInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryServerInfo::name() const {
  // @@protoc_insertion_point(field_get:protos.QueryServerInfo.name)
  return name_.GetNoArena();
}
inline void QueryServerInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.QueryServerInfo.name)
}
#if LANG_CXX11
inline void QueryServerInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.QueryServerInfo.name)
}
#endif
inline void QueryServerInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.QueryServerInfo.name)
}
inline void QueryServerInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.QueryServerInfo.name)
}
inline ::std::string* QueryServerInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:protos.QueryServerInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryServerInfo::release_name() {
  // @@protoc_insertion_point(field_release:protos.QueryServerInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryServerInfo::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:protos.QueryServerInfo.name)
}

// -------------------------------------------------------------------

// QueryServerInfoResult

// repeated .protos.ServerInfo infos = 1;
inline int QueryServerInfoResult::infos_size() const {
  return infos_.size();
}
inline void QueryServerInfoResult::clear_infos() {
  infos_.Clear();
}
inline ::protos::ServerInfo* QueryServerInfoResult::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:protos.QueryServerInfoResult.infos)
  return infos_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::protos::ServerInfo >*
QueryServerInfoResult::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:protos.QueryServerInfoResult.infos)
  return &infos_;
}
inline const ::protos::ServerInfo& QueryServerInfoResult::infos(int index) const {
  // @@protoc_insertion_point(field_get:protos.QueryServerInfoResult.infos)
  return infos_.Get(index);
}
inline ::protos::ServerInfo* QueryServerInfoResult::add_infos() {
  // @@protoc_insertion_point(field_add:protos.QueryServerInfoResult.infos)
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::ServerInfo >&
QueryServerInfoResult::infos() const {
  // @@protoc_insertion_point(field_list:protos.QueryServerInfoResult.infos)
  return infos_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protos

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_core_2eproto
