// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: login2sdk.proto

#include "login2sdk.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_login2sdk_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LoginFacebook_login2sdk_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_login2sdk_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LoginRoute_login2sdk_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_login2sdk_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LoginWeixin_login2sdk_2eproto;
namespace protos {
class LoginWeixinDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginWeixin> _instance;
} _LoginWeixin_default_instance_;
class LoginRouteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginRoute> _instance;
} _LoginRoute_default_instance_;
class CLLoginWeixinDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CLLoginWeixin> _instance;
} _CLLoginWeixin_default_instance_;
class LCLoginWeixinDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LCLoginWeixin> _instance;
} _LCLoginWeixin_default_instance_;
class L2SDKLoginWeixinDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<L2SDKLoginWeixin> _instance;
} _L2SDKLoginWeixin_default_instance_;
class SDK2LLoginWeixinDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SDK2LLoginWeixin> _instance;
} _SDK2LLoginWeixin_default_instance_;
class LoginFacebookDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginFacebook> _instance;
} _LoginFacebook_default_instance_;
class CLLoginFacebookDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CLLoginFacebook> _instance;
} _CLLoginFacebook_default_instance_;
class LCLoginFacebookDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LCLoginFacebook> _instance;
} _LCLoginFacebook_default_instance_;
class CLReconnLoginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CLReconnLogin> _instance;
} _CLReconnLogin_default_instance_;
class LCReconnLoginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LCReconnLogin> _instance;
} _LCReconnLogin_default_instance_;
class Link2LDisconnectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Link2LDisconnect> _instance;
} _Link2LDisconnect_default_instance_;
class L2LinkDisconnectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<L2LinkDisconnect> _instance;
} _L2LinkDisconnect_default_instance_;
class L2LinkKickPlayerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<L2LinkKickPlayer> _instance;
} _L2LinkKickPlayer_default_instance_;
}  // namespace protos
static void InitDefaultsLoginWeixin_login2sdk_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_LoginWeixin_default_instance_;
    new (ptr) ::protos::LoginWeixin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::LoginWeixin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LoginWeixin_login2sdk_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLoginWeixin_login2sdk_2eproto}, {}};

static void InitDefaultsLoginRoute_login2sdk_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_LoginRoute_default_instance_;
    new (ptr) ::protos::LoginRoute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::LoginRoute::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LoginRoute_login2sdk_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLoginRoute_login2sdk_2eproto}, {}};

static void InitDefaultsCLLoginWeixin_login2sdk_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_CLLoginWeixin_default_instance_;
    new (ptr) ::protos::CLLoginWeixin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::CLLoginWeixin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CLLoginWeixin_login2sdk_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCLLoginWeixin_login2sdk_2eproto}, {
      &scc_info_LoginRoute_login2sdk_2eproto.base,
      &scc_info_LoginWeixin_login2sdk_2eproto.base,}};

static void InitDefaultsLCLoginWeixin_login2sdk_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_LCLoginWeixin_default_instance_;
    new (ptr) ::protos::LCLoginWeixin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::LCLoginWeixin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LCLoginWeixin_login2sdk_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLCLoginWeixin_login2sdk_2eproto}, {
      &scc_info_LoginRoute_login2sdk_2eproto.base,}};

static void InitDefaultsL2SDKLoginWeixin_login2sdk_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_L2SDKLoginWeixin_default_instance_;
    new (ptr) ::protos::L2SDKLoginWeixin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::L2SDKLoginWeixin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_L2SDKLoginWeixin_login2sdk_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsL2SDKLoginWeixin_login2sdk_2eproto}, {
      &scc_info_LoginRoute_login2sdk_2eproto.base,
      &scc_info_LoginWeixin_login2sdk_2eproto.base,}};

static void InitDefaultsSDK2LLoginWeixin_login2sdk_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_SDK2LLoginWeixin_default_instance_;
    new (ptr) ::protos::SDK2LLoginWeixin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::SDK2LLoginWeixin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SDK2LLoginWeixin_login2sdk_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSDK2LLoginWeixin_login2sdk_2eproto}, {
      &scc_info_LoginRoute_login2sdk_2eproto.base,
      &scc_info_LoginWeixin_login2sdk_2eproto.base,}};

static void InitDefaultsLoginFacebook_login2sdk_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_LoginFacebook_default_instance_;
    new (ptr) ::protos::LoginFacebook();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::LoginFacebook::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LoginFacebook_login2sdk_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLoginFacebook_login2sdk_2eproto}, {}};

static void InitDefaultsCLLoginFacebook_login2sdk_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_CLLoginFacebook_default_instance_;
    new (ptr) ::protos::CLLoginFacebook();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::CLLoginFacebook::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CLLoginFacebook_login2sdk_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCLLoginFacebook_login2sdk_2eproto}, {
      &scc_info_LoginRoute_login2sdk_2eproto.base,
      &scc_info_LoginFacebook_login2sdk_2eproto.base,}};

static void InitDefaultsLCLoginFacebook_login2sdk_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_LCLoginFacebook_default_instance_;
    new (ptr) ::protos::LCLoginFacebook();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::LCLoginFacebook::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LCLoginFacebook_login2sdk_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLCLoginFacebook_login2sdk_2eproto}, {
      &scc_info_LoginRoute_login2sdk_2eproto.base,}};

static void InitDefaultsCLReconnLogin_login2sdk_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_CLReconnLogin_default_instance_;
    new (ptr) ::protos::CLReconnLogin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::CLReconnLogin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CLReconnLogin_login2sdk_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCLReconnLogin_login2sdk_2eproto}, {
      &scc_info_LoginRoute_login2sdk_2eproto.base,}};

static void InitDefaultsLCReconnLogin_login2sdk_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_LCReconnLogin_default_instance_;
    new (ptr) ::protos::LCReconnLogin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::LCReconnLogin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LCReconnLogin_login2sdk_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLCReconnLogin_login2sdk_2eproto}, {
      &scc_info_LoginRoute_login2sdk_2eproto.base,}};

static void InitDefaultsLink2LDisconnect_login2sdk_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_Link2LDisconnect_default_instance_;
    new (ptr) ::protos::Link2LDisconnect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::Link2LDisconnect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Link2LDisconnect_login2sdk_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLink2LDisconnect_login2sdk_2eproto}, {}};

static void InitDefaultsL2LinkDisconnect_login2sdk_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_L2LinkDisconnect_default_instance_;
    new (ptr) ::protos::L2LinkDisconnect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::L2LinkDisconnect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_L2LinkDisconnect_login2sdk_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsL2LinkDisconnect_login2sdk_2eproto}, {}};

static void InitDefaultsL2LinkKickPlayer_login2sdk_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_L2LinkKickPlayer_default_instance_;
    new (ptr) ::protos::L2LinkKickPlayer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::L2LinkKickPlayer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_L2LinkKickPlayer_login2sdk_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsL2LinkKickPlayer_login2sdk_2eproto}, {}};

void InitDefaults_login2sdk_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_LoginWeixin_login2sdk_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoginRoute_login2sdk_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CLLoginWeixin_login2sdk_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LCLoginWeixin_login2sdk_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_L2SDKLoginWeixin_login2sdk_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SDK2LLoginWeixin_login2sdk_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoginFacebook_login2sdk_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CLLoginFacebook_login2sdk_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LCLoginFacebook_login2sdk_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CLReconnLogin_login2sdk_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LCReconnLogin_login2sdk_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Link2LDisconnect_login2sdk_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_L2LinkDisconnect_login2sdk_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_L2LinkKickPlayer_login2sdk_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_login2sdk_2eproto[14];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_login2sdk_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_login2sdk_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_login2sdk_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::LoginWeixin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::LoginWeixin, deviceid_),
  PROTOBUF_FIELD_OFFSET(::protos::LoginWeixin, ip_),
  PROTOBUF_FIELD_OFFSET(::protos::LoginWeixin, js_code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::LoginRoute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::LoginRoute, client_sessionid_),
  PROTOBUF_FIELD_OFFSET(::protos::LoginRoute, link_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::CLLoginWeixin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::CLLoginWeixin, route_),
  PROTOBUF_FIELD_OFFSET(::protos::CLLoginWeixin, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::LCLoginWeixin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::LCLoginWeixin, error_),
  PROTOBUF_FIELD_OFFSET(::protos::LCLoginWeixin, errmsg_),
  PROTOBUF_FIELD_OFFSET(::protos::LCLoginWeixin, route_),
  PROTOBUF_FIELD_OFFSET(::protos::LCLoginWeixin, userid_),
  PROTOBUF_FIELD_OFFSET(::protos::LCLoginWeixin, login_key_),
  PROTOBUF_FIELD_OFFSET(::protos::LCLoginWeixin, user_token_),
  PROTOBUF_FIELD_OFFSET(::protos::LCLoginWeixin, wx_openid_),
  PROTOBUF_FIELD_OFFSET(::protos::LCLoginWeixin, wx_errcode_),
  PROTOBUF_FIELD_OFFSET(::protos::LCLoginWeixin, wx_errmsg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::L2SDKLoginWeixin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::L2SDKLoginWeixin, route_),
  PROTOBUF_FIELD_OFFSET(::protos::L2SDKLoginWeixin, link_sessionid_),
  PROTOBUF_FIELD_OFFSET(::protos::L2SDKLoginWeixin, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::SDK2LLoginWeixin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::SDK2LLoginWeixin, error_),
  PROTOBUF_FIELD_OFFSET(::protos::SDK2LLoginWeixin, errmsg_),
  PROTOBUF_FIELD_OFFSET(::protos::SDK2LLoginWeixin, route_),
  PROTOBUF_FIELD_OFFSET(::protos::SDK2LLoginWeixin, link_sessionid_),
  PROTOBUF_FIELD_OFFSET(::protos::SDK2LLoginWeixin, param_),
  PROTOBUF_FIELD_OFFSET(::protos::SDK2LLoginWeixin, wx_openid_),
  PROTOBUF_FIELD_OFFSET(::protos::SDK2LLoginWeixin, wx_session_key_),
  PROTOBUF_FIELD_OFFSET(::protos::SDK2LLoginWeixin, wx_errcode_),
  PROTOBUF_FIELD_OFFSET(::protos::SDK2LLoginWeixin, wx_errmsg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::LoginFacebook, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::LoginFacebook, deviceid_),
  PROTOBUF_FIELD_OFFSET(::protos::LoginFacebook, ip_),
  PROTOBUF_FIELD_OFFSET(::protos::LoginFacebook, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::CLLoginFacebook, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::CLLoginFacebook, route_),
  PROTOBUF_FIELD_OFFSET(::protos::CLLoginFacebook, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::LCLoginFacebook, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::LCLoginFacebook, error_),
  PROTOBUF_FIELD_OFFSET(::protos::LCLoginFacebook, errmsg_),
  PROTOBUF_FIELD_OFFSET(::protos::LCLoginFacebook, route_),
  PROTOBUF_FIELD_OFFSET(::protos::LCLoginFacebook, userid_),
  PROTOBUF_FIELD_OFFSET(::protos::LCLoginFacebook, login_key_),
  PROTOBUF_FIELD_OFFSET(::protos::LCLoginFacebook, user_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::CLReconnLogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::CLReconnLogin, route_),
  PROTOBUF_FIELD_OFFSET(::protos::CLReconnLogin, login_key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::LCReconnLogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::LCReconnLogin, error_),
  PROTOBUF_FIELD_OFFSET(::protos::LCReconnLogin, errmsg_),
  PROTOBUF_FIELD_OFFSET(::protos::LCReconnLogin, route_),
  PROTOBUF_FIELD_OFFSET(::protos::LCReconnLogin, userid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::Link2LDisconnect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::Link2LDisconnect, userid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::L2LinkDisconnect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::L2LinkDisconnect, error_),
  PROTOBUF_FIELD_OFFSET(::protos::L2LinkDisconnect, errmsg_),
  PROTOBUF_FIELD_OFFSET(::protos::L2LinkDisconnect, userid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::L2LinkKickPlayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::L2LinkKickPlayer, error_),
  PROTOBUF_FIELD_OFFSET(::protos::L2LinkKickPlayer, errmsg_),
  PROTOBUF_FIELD_OFFSET(::protos::L2LinkKickPlayer, userid_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::protos::LoginWeixin)},
  { 8, -1, sizeof(::protos::LoginRoute)},
  { 15, -1, sizeof(::protos::CLLoginWeixin)},
  { 22, -1, sizeof(::protos::LCLoginWeixin)},
  { 36, -1, sizeof(::protos::L2SDKLoginWeixin)},
  { 44, -1, sizeof(::protos::SDK2LLoginWeixin)},
  { 58, -1, sizeof(::protos::LoginFacebook)},
  { 66, -1, sizeof(::protos::CLLoginFacebook)},
  { 73, -1, sizeof(::protos::LCLoginFacebook)},
  { 84, -1, sizeof(::protos::CLReconnLogin)},
  { 91, -1, sizeof(::protos::LCReconnLogin)},
  { 100, -1, sizeof(::protos::Link2LDisconnect)},
  { 106, -1, sizeof(::protos::L2LinkDisconnect)},
  { 114, -1, sizeof(::protos::L2LinkKickPlayer)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_LoginWeixin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_LoginRoute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_CLLoginWeixin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_LCLoginWeixin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_L2SDKLoginWeixin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_SDK2LLoginWeixin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_LoginFacebook_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_CLLoginFacebook_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_LCLoginFacebook_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_CLReconnLogin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_LCReconnLogin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_Link2LDisconnect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_L2LinkDisconnect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_L2LinkKickPlayer_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_login2sdk_2eproto = {
  {}, AddDescriptors_login2sdk_2eproto, "login2sdk.proto", schemas,
  file_default_instances, TableStruct_login2sdk_2eproto::offsets,
  file_level_metadata_login2sdk_2eproto, 14, file_level_enum_descriptors_login2sdk_2eproto, file_level_service_descriptors_login2sdk_2eproto,
};

const char descriptor_table_protodef_login2sdk_2eproto[] =
  "\n\017login2sdk.proto\022\006protos\"<\n\013LoginWeixin"
  "\022\020\n\010deviceid\030\001 \001(\t\022\n\n\002ip\030\002 \001(\t\022\017\n\007js_cod"
  "e\030\003 \001(\t\"7\n\nLoginRoute\022\030\n\020client_sessioni"
  "d\030\001 \001(\003\022\017\n\007link_id\030\002 \001(\005\"V\n\rCLLoginWeixi"
  "n\022!\n\005route\030\001 \001(\0132\022.protos.LoginRoute\022\"\n\005"
  "param\030\002 \001(\0132\023.protos.LoginWeixin\"\302\001\n\rLCL"
  "oginWeixin\022\r\n\005error\030\001 \001(\005\022\016\n\006errmsg\030\002 \001("
  "\t\022!\n\005route\030\003 \001(\0132\022.protos.LoginRoute\022\016\n\006"
  "userid\030\004 \001(\003\022\021\n\tlogin_key\030\005 \001(\t\022\022\n\nuser_"
  "token\030\006 \001(\t\022\021\n\twx_openid\030\007 \001(\t\022\022\n\nwx_err"
  "code\030\010 \001(\005\022\021\n\twx_errmsg\030\t \001(\t\"q\n\020L2SDKLo"
  "ginWeixin\022!\n\005route\030\001 \001(\0132\022.protos.LoginR"
  "oute\022\026\n\016link_sessionid\030\002 \001(\003\022\"\n\005param\030\003 "
  "\001(\0132\023.protos.LoginWeixin\"\342\001\n\020SDK2LLoginW"
  "eixin\022\r\n\005error\030\001 \001(\005\022\016\n\006errmsg\030\002 \001(\t\022!\n\005"
  "route\030\003 \001(\0132\022.protos.LoginRoute\022\026\n\016link_"
  "sessionid\030\004 \001(\003\022\"\n\005param\030\005 \001(\0132\023.protos."
  "LoginWeixin\022\021\n\twx_openid\030\006 \001(\t\022\026\n\016wx_ses"
  "sion_key\030\007 \001(\t\022\022\n\nwx_errcode\030\010 \001(\005\022\021\n\twx"
  "_errmsg\030\t \001(\t\";\n\rLoginFacebook\022\020\n\010device"
  "id\030\001 \001(\t\022\n\n\002ip\030\002 \001(\t\022\014\n\004code\030\003 \001(\t\"Z\n\017CL"
  "LoginFacebook\022!\n\005route\030\001 \001(\0132\022.protos.Lo"
  "ginRoute\022$\n\005param\030\002 \001(\0132\025.protos.LoginFa"
  "cebook\"\212\001\n\017LCLoginFacebook\022\r\n\005error\030\001 \001("
  "\005\022\016\n\006errmsg\030\002 \001(\t\022!\n\005route\030\003 \001(\0132\022.proto"
  "s.LoginRoute\022\016\n\006userid\030\004 \001(\003\022\021\n\tlogin_ke"
  "y\030\005 \001(\t\022\022\n\nuser_token\030\006 \001(\t\"E\n\rCLReconnL"
  "ogin\022!\n\005route\030\001 \001(\0132\022.protos.LoginRoute\022"
  "\021\n\tlogin_key\030\002 \001(\t\"a\n\rLCReconnLogin\022\r\n\005e"
  "rror\030\001 \001(\005\022\016\n\006errmsg\030\002 \001(\t\022!\n\005route\030\003 \001("
  "\0132\022.protos.LoginRoute\022\016\n\006userid\030\004 \001(\003\"\"\n"
  "\020Link2LDisconnect\022\016\n\006userid\030\001 \001(\003\"A\n\020L2L"
  "inkDisconnect\022\r\n\005error\030\001 \001(\005\022\016\n\006errmsg\030\002"
  " \001(\t\022\016\n\006userid\030\003 \001(\003\"A\n\020L2LinkKickPlayer"
  "\022\r\n\005error\030\001 \001(\005\022\016\n\006errmsg\030\002 \001(\t\022\016\n\006useri"
  "d\030\003 \001(\003b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_login2sdk_2eproto = {
  false, InitDefaults_login2sdk_2eproto, 
  descriptor_table_protodef_login2sdk_2eproto,
  "login2sdk.proto", &assign_descriptors_table_login2sdk_2eproto, 1415,
};

void AddDescriptors_login2sdk_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_login2sdk_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_login2sdk_2eproto = []() { AddDescriptors_login2sdk_2eproto(); return true; }();
namespace protos {

// ===================================================================

void LoginWeixin::InitAsDefaultInstance() {
}
class LoginWeixin::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginWeixin::kDeviceidFieldNumber;
const int LoginWeixin::kIpFieldNumber;
const int LoginWeixin::kJsCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginWeixin::LoginWeixin()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.LoginWeixin)
}
LoginWeixin::LoginWeixin(const LoginWeixin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deviceid().size() > 0) {
    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  js_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.js_code().size() > 0) {
    js_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.js_code_);
  }
  // @@protoc_insertion_point(copy_constructor:protos.LoginWeixin)
}

void LoginWeixin::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LoginWeixin_login2sdk_2eproto.base);
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  js_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LoginWeixin::~LoginWeixin() {
  // @@protoc_insertion_point(destructor:protos.LoginWeixin)
  SharedDtor();
}

void LoginWeixin::SharedDtor() {
  deviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  js_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginWeixin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoginWeixin& LoginWeixin::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LoginWeixin_login2sdk_2eproto.base);
  return *internal_default_instance();
}


void LoginWeixin::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.LoginWeixin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  js_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LoginWeixin::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LoginWeixin*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string deviceid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.LoginWeixin.deviceid");
        object = msg->mutable_deviceid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string ip = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.LoginWeixin.ip");
        object = msg->mutable_ip();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string js_code = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.LoginWeixin.js_code");
        object = msg->mutable_js_code();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LoginWeixin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.LoginWeixin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string deviceid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deviceid().data(), static_cast<int>(this->deviceid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.LoginWeixin.deviceid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip().data(), static_cast<int>(this->ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.LoginWeixin.ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string js_code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_js_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->js_code().data(), static_cast<int>(this->js_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.LoginWeixin.js_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.LoginWeixin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.LoginWeixin)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LoginWeixin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.LoginWeixin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string deviceid = 1;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.LoginWeixin.deviceid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->deviceid(), output);
  }

  // string ip = 2;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.LoginWeixin.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ip(), output);
  }

  // string js_code = 3;
  if (this->js_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->js_code().data(), static_cast<int>(this->js_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.LoginWeixin.js_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->js_code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.LoginWeixin)
}

::google::protobuf::uint8* LoginWeixin::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.LoginWeixin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string deviceid = 1;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.LoginWeixin.deviceid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->deviceid(), target);
  }

  // string ip = 2;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.LoginWeixin.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ip(), target);
  }

  // string js_code = 3;
  if (this->js_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->js_code().data(), static_cast<int>(this->js_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.LoginWeixin.js_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->js_code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.LoginWeixin)
  return target;
}

size_t LoginWeixin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.LoginWeixin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string deviceid = 1;
  if (this->deviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deviceid());
  }

  // string ip = 2;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip());
  }

  // string js_code = 3;
  if (this->js_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->js_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginWeixin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.LoginWeixin)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginWeixin* source =
      ::google::protobuf::DynamicCastToGenerated<LoginWeixin>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.LoginWeixin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.LoginWeixin)
    MergeFrom(*source);
  }
}

void LoginWeixin::MergeFrom(const LoginWeixin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.LoginWeixin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.deviceid().size() > 0) {

    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.js_code().size() > 0) {

    js_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.js_code_);
  }
}

void LoginWeixin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.LoginWeixin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginWeixin::CopyFrom(const LoginWeixin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.LoginWeixin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginWeixin::IsInitialized() const {
  return true;
}

void LoginWeixin::Swap(LoginWeixin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginWeixin::InternalSwap(LoginWeixin* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  deviceid_.Swap(&other->deviceid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  js_code_.Swap(&other->js_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata LoginWeixin::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login2sdk_2eproto);
  return ::file_level_metadata_login2sdk_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LoginRoute::InitAsDefaultInstance() {
}
class LoginRoute::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginRoute::kClientSessionidFieldNumber;
const int LoginRoute::kLinkIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginRoute::LoginRoute()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.LoginRoute)
}
LoginRoute::LoginRoute(const LoginRoute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&client_sessionid_, &from.client_sessionid_,
    static_cast<size_t>(reinterpret_cast<char*>(&link_id_) -
    reinterpret_cast<char*>(&client_sessionid_)) + sizeof(link_id_));
  // @@protoc_insertion_point(copy_constructor:protos.LoginRoute)
}

void LoginRoute::SharedCtor() {
  ::memset(&client_sessionid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&link_id_) -
      reinterpret_cast<char*>(&client_sessionid_)) + sizeof(link_id_));
}

LoginRoute::~LoginRoute() {
  // @@protoc_insertion_point(destructor:protos.LoginRoute)
  SharedDtor();
}

void LoginRoute::SharedDtor() {
}

void LoginRoute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoginRoute& LoginRoute::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LoginRoute_login2sdk_2eproto.base);
  return *internal_default_instance();
}


void LoginRoute::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.LoginRoute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&client_sessionid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&link_id_) -
      reinterpret_cast<char*>(&client_sessionid_)) + sizeof(link_id_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LoginRoute::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LoginRoute*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 client_sessionid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_client_sessionid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 link_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_link_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LoginRoute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.LoginRoute)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 client_sessionid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &client_sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 link_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &link_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.LoginRoute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.LoginRoute)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LoginRoute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.LoginRoute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 client_sessionid = 1;
  if (this->client_sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->client_sessionid(), output);
  }

  // int32 link_id = 2;
  if (this->link_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->link_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.LoginRoute)
}

::google::protobuf::uint8* LoginRoute::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.LoginRoute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 client_sessionid = 1;
  if (this->client_sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->client_sessionid(), target);
  }

  // int32 link_id = 2;
  if (this->link_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->link_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.LoginRoute)
  return target;
}

size_t LoginRoute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.LoginRoute)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 client_sessionid = 1;
  if (this->client_sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->client_sessionid());
  }

  // int32 link_id = 2;
  if (this->link_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->link_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginRoute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.LoginRoute)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginRoute* source =
      ::google::protobuf::DynamicCastToGenerated<LoginRoute>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.LoginRoute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.LoginRoute)
    MergeFrom(*source);
  }
}

void LoginRoute::MergeFrom(const LoginRoute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.LoginRoute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.client_sessionid() != 0) {
    set_client_sessionid(from.client_sessionid());
  }
  if (from.link_id() != 0) {
    set_link_id(from.link_id());
  }
}

void LoginRoute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.LoginRoute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRoute::CopyFrom(const LoginRoute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.LoginRoute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginRoute::IsInitialized() const {
  return true;
}

void LoginRoute::Swap(LoginRoute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginRoute::InternalSwap(LoginRoute* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(client_sessionid_, other->client_sessionid_);
  swap(link_id_, other->link_id_);
}

::google::protobuf::Metadata LoginRoute::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login2sdk_2eproto);
  return ::file_level_metadata_login2sdk_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CLLoginWeixin::InitAsDefaultInstance() {
  ::protos::_CLLoginWeixin_default_instance_._instance.get_mutable()->route_ = const_cast< ::protos::LoginRoute*>(
      ::protos::LoginRoute::internal_default_instance());
  ::protos::_CLLoginWeixin_default_instance_._instance.get_mutable()->param_ = const_cast< ::protos::LoginWeixin*>(
      ::protos::LoginWeixin::internal_default_instance());
}
class CLLoginWeixin::HasBitSetters {
 public:
  static const ::protos::LoginRoute& route(const CLLoginWeixin* msg);
  static const ::protos::LoginWeixin& param(const CLLoginWeixin* msg);
};

const ::protos::LoginRoute&
CLLoginWeixin::HasBitSetters::route(const CLLoginWeixin* msg) {
  return *msg->route_;
}
const ::protos::LoginWeixin&
CLLoginWeixin::HasBitSetters::param(const CLLoginWeixin* msg) {
  return *msg->param_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CLLoginWeixin::kRouteFieldNumber;
const int CLLoginWeixin::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CLLoginWeixin::CLLoginWeixin()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.CLLoginWeixin)
}
CLLoginWeixin::CLLoginWeixin(const CLLoginWeixin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_route()) {
    route_ = new ::protos::LoginRoute(*from.route_);
  } else {
    route_ = nullptr;
  }
  if (from.has_param()) {
    param_ = new ::protos::LoginWeixin(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protos.CLLoginWeixin)
}

void CLLoginWeixin::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CLLoginWeixin_login2sdk_2eproto.base);
  ::memset(&route_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param_) -
      reinterpret_cast<char*>(&route_)) + sizeof(param_));
}

CLLoginWeixin::~CLLoginWeixin() {
  // @@protoc_insertion_point(destructor:protos.CLLoginWeixin)
  SharedDtor();
}

void CLLoginWeixin::SharedDtor() {
  if (this != internal_default_instance()) delete route_;
  if (this != internal_default_instance()) delete param_;
}

void CLLoginWeixin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CLLoginWeixin& CLLoginWeixin::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CLLoginWeixin_login2sdk_2eproto.base);
  return *internal_default_instance();
}


void CLLoginWeixin::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.CLLoginWeixin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && route_ != nullptr) {
    delete route_;
  }
  route_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CLLoginWeixin::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CLLoginWeixin*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .protos.LoginRoute route = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::protos::LoginRoute::_InternalParse;
        object = msg->mutable_route();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .protos.LoginWeixin param = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::protos::LoginWeixin::_InternalParse;
        object = msg->mutable_param();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CLLoginWeixin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.CLLoginWeixin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .protos.LoginRoute route = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_route()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protos.LoginWeixin param = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.CLLoginWeixin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.CLLoginWeixin)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CLLoginWeixin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.CLLoginWeixin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protos.LoginRoute route = 1;
  if (this->has_route()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::route(this), output);
  }

  // .protos.LoginWeixin param = 2;
  if (this->has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::param(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.CLLoginWeixin)
}

::google::protobuf::uint8* CLLoginWeixin::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.CLLoginWeixin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protos.LoginRoute route = 1;
  if (this->has_route()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::route(this), target);
  }

  // .protos.LoginWeixin param = 2;
  if (this->has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::param(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.CLLoginWeixin)
  return target;
}

size_t CLLoginWeixin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.CLLoginWeixin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protos.LoginRoute route = 1;
  if (this->has_route()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *route_);
  }

  // .protos.LoginWeixin param = 2;
  if (this->has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *param_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CLLoginWeixin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.CLLoginWeixin)
  GOOGLE_DCHECK_NE(&from, this);
  const CLLoginWeixin* source =
      ::google::protobuf::DynamicCastToGenerated<CLLoginWeixin>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.CLLoginWeixin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.CLLoginWeixin)
    MergeFrom(*source);
  }
}

void CLLoginWeixin::MergeFrom(const CLLoginWeixin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.CLLoginWeixin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_route()) {
    mutable_route()->::protos::LoginRoute::MergeFrom(from.route());
  }
  if (from.has_param()) {
    mutable_param()->::protos::LoginWeixin::MergeFrom(from.param());
  }
}

void CLLoginWeixin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.CLLoginWeixin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CLLoginWeixin::CopyFrom(const CLLoginWeixin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.CLLoginWeixin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CLLoginWeixin::IsInitialized() const {
  return true;
}

void CLLoginWeixin::Swap(CLLoginWeixin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CLLoginWeixin::InternalSwap(CLLoginWeixin* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(route_, other->route_);
  swap(param_, other->param_);
}

::google::protobuf::Metadata CLLoginWeixin::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login2sdk_2eproto);
  return ::file_level_metadata_login2sdk_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LCLoginWeixin::InitAsDefaultInstance() {
  ::protos::_LCLoginWeixin_default_instance_._instance.get_mutable()->route_ = const_cast< ::protos::LoginRoute*>(
      ::protos::LoginRoute::internal_default_instance());
}
class LCLoginWeixin::HasBitSetters {
 public:
  static const ::protos::LoginRoute& route(const LCLoginWeixin* msg);
};

const ::protos::LoginRoute&
LCLoginWeixin::HasBitSetters::route(const LCLoginWeixin* msg) {
  return *msg->route_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LCLoginWeixin::kErrorFieldNumber;
const int LCLoginWeixin::kErrmsgFieldNumber;
const int LCLoginWeixin::kRouteFieldNumber;
const int LCLoginWeixin::kUseridFieldNumber;
const int LCLoginWeixin::kLoginKeyFieldNumber;
const int LCLoginWeixin::kUserTokenFieldNumber;
const int LCLoginWeixin::kWxOpenidFieldNumber;
const int LCLoginWeixin::kWxErrcodeFieldNumber;
const int LCLoginWeixin::kWxErrmsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LCLoginWeixin::LCLoginWeixin()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.LCLoginWeixin)
}
LCLoginWeixin::LCLoginWeixin(const LCLoginWeixin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errmsg().size() > 0) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  login_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.login_key().size() > 0) {
    login_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_key_);
  }
  user_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_token().size() > 0) {
    user_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_token_);
  }
  wx_openid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.wx_openid().size() > 0) {
    wx_openid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wx_openid_);
  }
  wx_errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.wx_errmsg().size() > 0) {
    wx_errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wx_errmsg_);
  }
  if (from.has_route()) {
    route_ = new ::protos::LoginRoute(*from.route_);
  } else {
    route_ = nullptr;
  }
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&wx_errcode_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(wx_errcode_));
  // @@protoc_insertion_point(copy_constructor:protos.LCLoginWeixin)
}

void LCLoginWeixin::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LCLoginWeixin_login2sdk_2eproto.base);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wx_openid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wx_errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&route_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wx_errcode_) -
      reinterpret_cast<char*>(&route_)) + sizeof(wx_errcode_));
}

LCLoginWeixin::~LCLoginWeixin() {
  // @@protoc_insertion_point(destructor:protos.LCLoginWeixin)
  SharedDtor();
}

void LCLoginWeixin::SharedDtor() {
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wx_openid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wx_errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete route_;
}

void LCLoginWeixin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LCLoginWeixin& LCLoginWeixin::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LCLoginWeixin_login2sdk_2eproto.base);
  return *internal_default_instance();
}


void LCLoginWeixin::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.LCLoginWeixin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wx_openid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wx_errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && route_ != nullptr) {
    delete route_;
  }
  route_ = nullptr;
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wx_errcode_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(wx_errcode_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LCLoginWeixin::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LCLoginWeixin*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 error = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_error(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string errmsg = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.LCLoginWeixin.errmsg");
        object = msg->mutable_errmsg();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .protos.LoginRoute route = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::protos::LoginRoute::_InternalParse;
        object = msg->mutable_route();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // int64 userid = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_userid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string login_key = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.LCLoginWeixin.login_key");
        object = msg->mutable_login_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string user_token = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.LCLoginWeixin.user_token");
        object = msg->mutable_user_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string wx_openid = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.LCLoginWeixin.wx_openid");
        object = msg->mutable_wx_openid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 wx_errcode = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_wx_errcode(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string wx_errmsg = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.LCLoginWeixin.wx_errmsg");
        object = msg->mutable_wx_errmsg();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LCLoginWeixin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.LCLoginWeixin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errmsg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), static_cast<int>(this->errmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.LCLoginWeixin.errmsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protos.LoginRoute route = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_route()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 userid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string login_key = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_login_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->login_key().data(), static_cast<int>(this->login_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.LCLoginWeixin.login_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_token = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_token().data(), static_cast<int>(this->user_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.LCLoginWeixin.user_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string wx_openid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_wx_openid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->wx_openid().data(), static_cast<int>(this->wx_openid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.LCLoginWeixin.wx_openid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 wx_errcode = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wx_errcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string wx_errmsg = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_wx_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->wx_errmsg().data(), static_cast<int>(this->wx_errmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.LCLoginWeixin.wx_errmsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.LCLoginWeixin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.LCLoginWeixin)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LCLoginWeixin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.LCLoginWeixin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.LCLoginWeixin.errmsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errmsg(), output);
  }

  // .protos.LoginRoute route = 3;
  if (this->has_route()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::route(this), output);
  }

  // int64 userid = 4;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->userid(), output);
  }

  // string login_key = 5;
  if (this->login_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login_key().data(), static_cast<int>(this->login_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.LCLoginWeixin.login_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->login_key(), output);
  }

  // string user_token = 6;
  if (this->user_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_token().data(), static_cast<int>(this->user_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.LCLoginWeixin.user_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->user_token(), output);
  }

  // string wx_openid = 7;
  if (this->wx_openid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wx_openid().data(), static_cast<int>(this->wx_openid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.LCLoginWeixin.wx_openid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->wx_openid(), output);
  }

  // int32 wx_errcode = 8;
  if (this->wx_errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->wx_errcode(), output);
  }

  // string wx_errmsg = 9;
  if (this->wx_errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wx_errmsg().data(), static_cast<int>(this->wx_errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.LCLoginWeixin.wx_errmsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->wx_errmsg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.LCLoginWeixin)
}

::google::protobuf::uint8* LCLoginWeixin::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.LCLoginWeixin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.LCLoginWeixin.errmsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errmsg(), target);
  }

  // .protos.LoginRoute route = 3;
  if (this->has_route()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::route(this), target);
  }

  // int64 userid = 4;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->userid(), target);
  }

  // string login_key = 5;
  if (this->login_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login_key().data(), static_cast<int>(this->login_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.LCLoginWeixin.login_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->login_key(), target);
  }

  // string user_token = 6;
  if (this->user_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_token().data(), static_cast<int>(this->user_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.LCLoginWeixin.user_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->user_token(), target);
  }

  // string wx_openid = 7;
  if (this->wx_openid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wx_openid().data(), static_cast<int>(this->wx_openid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.LCLoginWeixin.wx_openid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->wx_openid(), target);
  }

  // int32 wx_errcode = 8;
  if (this->wx_errcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->wx_errcode(), target);
  }

  // string wx_errmsg = 9;
  if (this->wx_errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wx_errmsg().data(), static_cast<int>(this->wx_errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.LCLoginWeixin.wx_errmsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->wx_errmsg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.LCLoginWeixin)
  return target;
}

size_t LCLoginWeixin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.LCLoginWeixin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // string login_key = 5;
  if (this->login_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->login_key());
  }

  // string user_token = 6;
  if (this->user_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_token());
  }

  // string wx_openid = 7;
  if (this->wx_openid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->wx_openid());
  }

  // string wx_errmsg = 9;
  if (this->wx_errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->wx_errmsg());
  }

  // .protos.LoginRoute route = 3;
  if (this->has_route()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *route_);
  }

  // int64 userid = 4;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->userid());
  }

  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  // int32 wx_errcode = 8;
  if (this->wx_errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->wx_errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LCLoginWeixin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.LCLoginWeixin)
  GOOGLE_DCHECK_NE(&from, this);
  const LCLoginWeixin* source =
      ::google::protobuf::DynamicCastToGenerated<LCLoginWeixin>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.LCLoginWeixin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.LCLoginWeixin)
    MergeFrom(*source);
  }
}

void LCLoginWeixin::MergeFrom(const LCLoginWeixin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.LCLoginWeixin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.login_key().size() > 0) {

    login_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_key_);
  }
  if (from.user_token().size() > 0) {

    user_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_token_);
  }
  if (from.wx_openid().size() > 0) {

    wx_openid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wx_openid_);
  }
  if (from.wx_errmsg().size() > 0) {

    wx_errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wx_errmsg_);
  }
  if (from.has_route()) {
    mutable_route()->::protos::LoginRoute::MergeFrom(from.route());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
  if (from.wx_errcode() != 0) {
    set_wx_errcode(from.wx_errcode());
  }
}

void LCLoginWeixin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.LCLoginWeixin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LCLoginWeixin::CopyFrom(const LCLoginWeixin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.LCLoginWeixin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LCLoginWeixin::IsInitialized() const {
  return true;
}

void LCLoginWeixin::Swap(LCLoginWeixin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LCLoginWeixin::InternalSwap(LCLoginWeixin* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  errmsg_.Swap(&other->errmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  login_key_.Swap(&other->login_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  user_token_.Swap(&other->user_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  wx_openid_.Swap(&other->wx_openid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  wx_errmsg_.Swap(&other->wx_errmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(route_, other->route_);
  swap(userid_, other->userid_);
  swap(error_, other->error_);
  swap(wx_errcode_, other->wx_errcode_);
}

::google::protobuf::Metadata LCLoginWeixin::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login2sdk_2eproto);
  return ::file_level_metadata_login2sdk_2eproto[kIndexInFileMessages];
}


// ===================================================================

void L2SDKLoginWeixin::InitAsDefaultInstance() {
  ::protos::_L2SDKLoginWeixin_default_instance_._instance.get_mutable()->route_ = const_cast< ::protos::LoginRoute*>(
      ::protos::LoginRoute::internal_default_instance());
  ::protos::_L2SDKLoginWeixin_default_instance_._instance.get_mutable()->param_ = const_cast< ::protos::LoginWeixin*>(
      ::protos::LoginWeixin::internal_default_instance());
}
class L2SDKLoginWeixin::HasBitSetters {
 public:
  static const ::protos::LoginRoute& route(const L2SDKLoginWeixin* msg);
  static const ::protos::LoginWeixin& param(const L2SDKLoginWeixin* msg);
};

const ::protos::LoginRoute&
L2SDKLoginWeixin::HasBitSetters::route(const L2SDKLoginWeixin* msg) {
  return *msg->route_;
}
const ::protos::LoginWeixin&
L2SDKLoginWeixin::HasBitSetters::param(const L2SDKLoginWeixin* msg) {
  return *msg->param_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int L2SDKLoginWeixin::kRouteFieldNumber;
const int L2SDKLoginWeixin::kLinkSessionidFieldNumber;
const int L2SDKLoginWeixin::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

L2SDKLoginWeixin::L2SDKLoginWeixin()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.L2SDKLoginWeixin)
}
L2SDKLoginWeixin::L2SDKLoginWeixin(const L2SDKLoginWeixin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_route()) {
    route_ = new ::protos::LoginRoute(*from.route_);
  } else {
    route_ = nullptr;
  }
  if (from.has_param()) {
    param_ = new ::protos::LoginWeixin(*from.param_);
  } else {
    param_ = nullptr;
  }
  link_sessionid_ = from.link_sessionid_;
  // @@protoc_insertion_point(copy_constructor:protos.L2SDKLoginWeixin)
}

void L2SDKLoginWeixin::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_L2SDKLoginWeixin_login2sdk_2eproto.base);
  ::memset(&route_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&link_sessionid_) -
      reinterpret_cast<char*>(&route_)) + sizeof(link_sessionid_));
}

L2SDKLoginWeixin::~L2SDKLoginWeixin() {
  // @@protoc_insertion_point(destructor:protos.L2SDKLoginWeixin)
  SharedDtor();
}

void L2SDKLoginWeixin::SharedDtor() {
  if (this != internal_default_instance()) delete route_;
  if (this != internal_default_instance()) delete param_;
}

void L2SDKLoginWeixin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const L2SDKLoginWeixin& L2SDKLoginWeixin::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_L2SDKLoginWeixin_login2sdk_2eproto.base);
  return *internal_default_instance();
}


void L2SDKLoginWeixin::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.L2SDKLoginWeixin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && route_ != nullptr) {
    delete route_;
  }
  route_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  link_sessionid_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* L2SDKLoginWeixin::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<L2SDKLoginWeixin*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .protos.LoginRoute route = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::protos::LoginRoute::_InternalParse;
        object = msg->mutable_route();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // int64 link_sessionid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_link_sessionid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .protos.LoginWeixin param = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::protos::LoginWeixin::_InternalParse;
        object = msg->mutable_param();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool L2SDKLoginWeixin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.L2SDKLoginWeixin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .protos.LoginRoute route = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_route()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 link_sessionid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &link_sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protos.LoginWeixin param = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.L2SDKLoginWeixin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.L2SDKLoginWeixin)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void L2SDKLoginWeixin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.L2SDKLoginWeixin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protos.LoginRoute route = 1;
  if (this->has_route()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::route(this), output);
  }

  // int64 link_sessionid = 2;
  if (this->link_sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->link_sessionid(), output);
  }

  // .protos.LoginWeixin param = 3;
  if (this->has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::param(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.L2SDKLoginWeixin)
}

::google::protobuf::uint8* L2SDKLoginWeixin::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.L2SDKLoginWeixin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protos.LoginRoute route = 1;
  if (this->has_route()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::route(this), target);
  }

  // int64 link_sessionid = 2;
  if (this->link_sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->link_sessionid(), target);
  }

  // .protos.LoginWeixin param = 3;
  if (this->has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::param(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.L2SDKLoginWeixin)
  return target;
}

size_t L2SDKLoginWeixin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.L2SDKLoginWeixin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protos.LoginRoute route = 1;
  if (this->has_route()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *route_);
  }

  // .protos.LoginWeixin param = 3;
  if (this->has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *param_);
  }

  // int64 link_sessionid = 2;
  if (this->link_sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->link_sessionid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void L2SDKLoginWeixin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.L2SDKLoginWeixin)
  GOOGLE_DCHECK_NE(&from, this);
  const L2SDKLoginWeixin* source =
      ::google::protobuf::DynamicCastToGenerated<L2SDKLoginWeixin>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.L2SDKLoginWeixin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.L2SDKLoginWeixin)
    MergeFrom(*source);
  }
}

void L2SDKLoginWeixin::MergeFrom(const L2SDKLoginWeixin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.L2SDKLoginWeixin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_route()) {
    mutable_route()->::protos::LoginRoute::MergeFrom(from.route());
  }
  if (from.has_param()) {
    mutable_param()->::protos::LoginWeixin::MergeFrom(from.param());
  }
  if (from.link_sessionid() != 0) {
    set_link_sessionid(from.link_sessionid());
  }
}

void L2SDKLoginWeixin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.L2SDKLoginWeixin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void L2SDKLoginWeixin::CopyFrom(const L2SDKLoginWeixin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.L2SDKLoginWeixin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool L2SDKLoginWeixin::IsInitialized() const {
  return true;
}

void L2SDKLoginWeixin::Swap(L2SDKLoginWeixin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void L2SDKLoginWeixin::InternalSwap(L2SDKLoginWeixin* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(route_, other->route_);
  swap(param_, other->param_);
  swap(link_sessionid_, other->link_sessionid_);
}

::google::protobuf::Metadata L2SDKLoginWeixin::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login2sdk_2eproto);
  return ::file_level_metadata_login2sdk_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SDK2LLoginWeixin::InitAsDefaultInstance() {
  ::protos::_SDK2LLoginWeixin_default_instance_._instance.get_mutable()->route_ = const_cast< ::protos::LoginRoute*>(
      ::protos::LoginRoute::internal_default_instance());
  ::protos::_SDK2LLoginWeixin_default_instance_._instance.get_mutable()->param_ = const_cast< ::protos::LoginWeixin*>(
      ::protos::LoginWeixin::internal_default_instance());
}
class SDK2LLoginWeixin::HasBitSetters {
 public:
  static const ::protos::LoginRoute& route(const SDK2LLoginWeixin* msg);
  static const ::protos::LoginWeixin& param(const SDK2LLoginWeixin* msg);
};

const ::protos::LoginRoute&
SDK2LLoginWeixin::HasBitSetters::route(const SDK2LLoginWeixin* msg) {
  return *msg->route_;
}
const ::protos::LoginWeixin&
SDK2LLoginWeixin::HasBitSetters::param(const SDK2LLoginWeixin* msg) {
  return *msg->param_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SDK2LLoginWeixin::kErrorFieldNumber;
const int SDK2LLoginWeixin::kErrmsgFieldNumber;
const int SDK2LLoginWeixin::kRouteFieldNumber;
const int SDK2LLoginWeixin::kLinkSessionidFieldNumber;
const int SDK2LLoginWeixin::kParamFieldNumber;
const int SDK2LLoginWeixin::kWxOpenidFieldNumber;
const int SDK2LLoginWeixin::kWxSessionKeyFieldNumber;
const int SDK2LLoginWeixin::kWxErrcodeFieldNumber;
const int SDK2LLoginWeixin::kWxErrmsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SDK2LLoginWeixin::SDK2LLoginWeixin()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.SDK2LLoginWeixin)
}
SDK2LLoginWeixin::SDK2LLoginWeixin(const SDK2LLoginWeixin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errmsg().size() > 0) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  wx_openid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.wx_openid().size() > 0) {
    wx_openid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wx_openid_);
  }
  wx_session_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.wx_session_key().size() > 0) {
    wx_session_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wx_session_key_);
  }
  wx_errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.wx_errmsg().size() > 0) {
    wx_errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wx_errmsg_);
  }
  if (from.has_route()) {
    route_ = new ::protos::LoginRoute(*from.route_);
  } else {
    route_ = nullptr;
  }
  if (from.has_param()) {
    param_ = new ::protos::LoginWeixin(*from.param_);
  } else {
    param_ = nullptr;
  }
  ::memcpy(&link_sessionid_, &from.link_sessionid_,
    static_cast<size_t>(reinterpret_cast<char*>(&wx_errcode_) -
    reinterpret_cast<char*>(&link_sessionid_)) + sizeof(wx_errcode_));
  // @@protoc_insertion_point(copy_constructor:protos.SDK2LLoginWeixin)
}

void SDK2LLoginWeixin::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SDK2LLoginWeixin_login2sdk_2eproto.base);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wx_openid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wx_session_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wx_errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&route_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wx_errcode_) -
      reinterpret_cast<char*>(&route_)) + sizeof(wx_errcode_));
}

SDK2LLoginWeixin::~SDK2LLoginWeixin() {
  // @@protoc_insertion_point(destructor:protos.SDK2LLoginWeixin)
  SharedDtor();
}

void SDK2LLoginWeixin::SharedDtor() {
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wx_openid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wx_session_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wx_errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete route_;
  if (this != internal_default_instance()) delete param_;
}

void SDK2LLoginWeixin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SDK2LLoginWeixin& SDK2LLoginWeixin::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SDK2LLoginWeixin_login2sdk_2eproto.base);
  return *internal_default_instance();
}


void SDK2LLoginWeixin::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.SDK2LLoginWeixin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wx_openid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wx_session_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wx_errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && route_ != nullptr) {
    delete route_;
  }
  route_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  ::memset(&link_sessionid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wx_errcode_) -
      reinterpret_cast<char*>(&link_sessionid_)) + sizeof(wx_errcode_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SDK2LLoginWeixin::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SDK2LLoginWeixin*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 error = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_error(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string errmsg = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.SDK2LLoginWeixin.errmsg");
        object = msg->mutable_errmsg();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .protos.LoginRoute route = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::protos::LoginRoute::_InternalParse;
        object = msg->mutable_route();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // int64 link_sessionid = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_link_sessionid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .protos.LoginWeixin param = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::protos::LoginWeixin::_InternalParse;
        object = msg->mutable_param();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string wx_openid = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.SDK2LLoginWeixin.wx_openid");
        object = msg->mutable_wx_openid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string wx_session_key = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.SDK2LLoginWeixin.wx_session_key");
        object = msg->mutable_wx_session_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 wx_errcode = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_wx_errcode(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string wx_errmsg = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.SDK2LLoginWeixin.wx_errmsg");
        object = msg->mutable_wx_errmsg();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SDK2LLoginWeixin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.SDK2LLoginWeixin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errmsg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), static_cast<int>(this->errmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.SDK2LLoginWeixin.errmsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protos.LoginRoute route = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_route()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 link_sessionid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &link_sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protos.LoginWeixin param = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string wx_openid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_wx_openid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->wx_openid().data(), static_cast<int>(this->wx_openid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.SDK2LLoginWeixin.wx_openid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string wx_session_key = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_wx_session_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->wx_session_key().data(), static_cast<int>(this->wx_session_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.SDK2LLoginWeixin.wx_session_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 wx_errcode = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wx_errcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string wx_errmsg = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_wx_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->wx_errmsg().data(), static_cast<int>(this->wx_errmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.SDK2LLoginWeixin.wx_errmsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.SDK2LLoginWeixin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.SDK2LLoginWeixin)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SDK2LLoginWeixin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.SDK2LLoginWeixin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.SDK2LLoginWeixin.errmsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errmsg(), output);
  }

  // .protos.LoginRoute route = 3;
  if (this->has_route()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::route(this), output);
  }

  // int64 link_sessionid = 4;
  if (this->link_sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->link_sessionid(), output);
  }

  // .protos.LoginWeixin param = 5;
  if (this->has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::param(this), output);
  }

  // string wx_openid = 6;
  if (this->wx_openid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wx_openid().data(), static_cast<int>(this->wx_openid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.SDK2LLoginWeixin.wx_openid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->wx_openid(), output);
  }

  // string wx_session_key = 7;
  if (this->wx_session_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wx_session_key().data(), static_cast<int>(this->wx_session_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.SDK2LLoginWeixin.wx_session_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->wx_session_key(), output);
  }

  // int32 wx_errcode = 8;
  if (this->wx_errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->wx_errcode(), output);
  }

  // string wx_errmsg = 9;
  if (this->wx_errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wx_errmsg().data(), static_cast<int>(this->wx_errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.SDK2LLoginWeixin.wx_errmsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->wx_errmsg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.SDK2LLoginWeixin)
}

::google::protobuf::uint8* SDK2LLoginWeixin::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.SDK2LLoginWeixin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.SDK2LLoginWeixin.errmsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errmsg(), target);
  }

  // .protos.LoginRoute route = 3;
  if (this->has_route()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::route(this), target);
  }

  // int64 link_sessionid = 4;
  if (this->link_sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->link_sessionid(), target);
  }

  // .protos.LoginWeixin param = 5;
  if (this->has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::param(this), target);
  }

  // string wx_openid = 6;
  if (this->wx_openid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wx_openid().data(), static_cast<int>(this->wx_openid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.SDK2LLoginWeixin.wx_openid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->wx_openid(), target);
  }

  // string wx_session_key = 7;
  if (this->wx_session_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wx_session_key().data(), static_cast<int>(this->wx_session_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.SDK2LLoginWeixin.wx_session_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->wx_session_key(), target);
  }

  // int32 wx_errcode = 8;
  if (this->wx_errcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->wx_errcode(), target);
  }

  // string wx_errmsg = 9;
  if (this->wx_errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wx_errmsg().data(), static_cast<int>(this->wx_errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.SDK2LLoginWeixin.wx_errmsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->wx_errmsg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.SDK2LLoginWeixin)
  return target;
}

size_t SDK2LLoginWeixin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.SDK2LLoginWeixin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // string wx_openid = 6;
  if (this->wx_openid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->wx_openid());
  }

  // string wx_session_key = 7;
  if (this->wx_session_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->wx_session_key());
  }

  // string wx_errmsg = 9;
  if (this->wx_errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->wx_errmsg());
  }

  // .protos.LoginRoute route = 3;
  if (this->has_route()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *route_);
  }

  // .protos.LoginWeixin param = 5;
  if (this->has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *param_);
  }

  // int64 link_sessionid = 4;
  if (this->link_sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->link_sessionid());
  }

  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  // int32 wx_errcode = 8;
  if (this->wx_errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->wx_errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SDK2LLoginWeixin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.SDK2LLoginWeixin)
  GOOGLE_DCHECK_NE(&from, this);
  const SDK2LLoginWeixin* source =
      ::google::protobuf::DynamicCastToGenerated<SDK2LLoginWeixin>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.SDK2LLoginWeixin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.SDK2LLoginWeixin)
    MergeFrom(*source);
  }
}

void SDK2LLoginWeixin::MergeFrom(const SDK2LLoginWeixin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.SDK2LLoginWeixin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.wx_openid().size() > 0) {

    wx_openid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wx_openid_);
  }
  if (from.wx_session_key().size() > 0) {

    wx_session_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wx_session_key_);
  }
  if (from.wx_errmsg().size() > 0) {

    wx_errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wx_errmsg_);
  }
  if (from.has_route()) {
    mutable_route()->::protos::LoginRoute::MergeFrom(from.route());
  }
  if (from.has_param()) {
    mutable_param()->::protos::LoginWeixin::MergeFrom(from.param());
  }
  if (from.link_sessionid() != 0) {
    set_link_sessionid(from.link_sessionid());
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
  if (from.wx_errcode() != 0) {
    set_wx_errcode(from.wx_errcode());
  }
}

void SDK2LLoginWeixin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.SDK2LLoginWeixin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SDK2LLoginWeixin::CopyFrom(const SDK2LLoginWeixin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.SDK2LLoginWeixin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SDK2LLoginWeixin::IsInitialized() const {
  return true;
}

void SDK2LLoginWeixin::Swap(SDK2LLoginWeixin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SDK2LLoginWeixin::InternalSwap(SDK2LLoginWeixin* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  errmsg_.Swap(&other->errmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  wx_openid_.Swap(&other->wx_openid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  wx_session_key_.Swap(&other->wx_session_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  wx_errmsg_.Swap(&other->wx_errmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(route_, other->route_);
  swap(param_, other->param_);
  swap(link_sessionid_, other->link_sessionid_);
  swap(error_, other->error_);
  swap(wx_errcode_, other->wx_errcode_);
}

::google::protobuf::Metadata SDK2LLoginWeixin::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login2sdk_2eproto);
  return ::file_level_metadata_login2sdk_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LoginFacebook::InitAsDefaultInstance() {
}
class LoginFacebook::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginFacebook::kDeviceidFieldNumber;
const int LoginFacebook::kIpFieldNumber;
const int LoginFacebook::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginFacebook::LoginFacebook()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.LoginFacebook)
}
LoginFacebook::LoginFacebook(const LoginFacebook& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deviceid().size() > 0) {
    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  // @@protoc_insertion_point(copy_constructor:protos.LoginFacebook)
}

void LoginFacebook::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LoginFacebook_login2sdk_2eproto.base);
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LoginFacebook::~LoginFacebook() {
  // @@protoc_insertion_point(destructor:protos.LoginFacebook)
  SharedDtor();
}

void LoginFacebook::SharedDtor() {
  deviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginFacebook::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoginFacebook& LoginFacebook::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LoginFacebook_login2sdk_2eproto.base);
  return *internal_default_instance();
}


void LoginFacebook::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.LoginFacebook)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LoginFacebook::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LoginFacebook*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string deviceid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.LoginFacebook.deviceid");
        object = msg->mutable_deviceid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string ip = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.LoginFacebook.ip");
        object = msg->mutable_ip();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string code = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.LoginFacebook.code");
        object = msg->mutable_code();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LoginFacebook::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.LoginFacebook)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string deviceid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deviceid().data(), static_cast<int>(this->deviceid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.LoginFacebook.deviceid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip().data(), static_cast<int>(this->ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.LoginFacebook.ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.LoginFacebook.code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.LoginFacebook)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.LoginFacebook)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LoginFacebook::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.LoginFacebook)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string deviceid = 1;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.LoginFacebook.deviceid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->deviceid(), output);
  }

  // string ip = 2;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.LoginFacebook.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ip(), output);
  }

  // string code = 3;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.LoginFacebook.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.LoginFacebook)
}

::google::protobuf::uint8* LoginFacebook::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.LoginFacebook)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string deviceid = 1;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.LoginFacebook.deviceid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->deviceid(), target);
  }

  // string ip = 2;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.LoginFacebook.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ip(), target);
  }

  // string code = 3;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.LoginFacebook.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.LoginFacebook)
  return target;
}

size_t LoginFacebook::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.LoginFacebook)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string deviceid = 1;
  if (this->deviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deviceid());
  }

  // string ip = 2;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip());
  }

  // string code = 3;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginFacebook::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.LoginFacebook)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginFacebook* source =
      ::google::protobuf::DynamicCastToGenerated<LoginFacebook>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.LoginFacebook)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.LoginFacebook)
    MergeFrom(*source);
  }
}

void LoginFacebook::MergeFrom(const LoginFacebook& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.LoginFacebook)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.deviceid().size() > 0) {

    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
}

void LoginFacebook::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.LoginFacebook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginFacebook::CopyFrom(const LoginFacebook& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.LoginFacebook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginFacebook::IsInitialized() const {
  return true;
}

void LoginFacebook::Swap(LoginFacebook* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginFacebook::InternalSwap(LoginFacebook* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  deviceid_.Swap(&other->deviceid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  code_.Swap(&other->code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata LoginFacebook::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login2sdk_2eproto);
  return ::file_level_metadata_login2sdk_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CLLoginFacebook::InitAsDefaultInstance() {
  ::protos::_CLLoginFacebook_default_instance_._instance.get_mutable()->route_ = const_cast< ::protos::LoginRoute*>(
      ::protos::LoginRoute::internal_default_instance());
  ::protos::_CLLoginFacebook_default_instance_._instance.get_mutable()->param_ = const_cast< ::protos::LoginFacebook*>(
      ::protos::LoginFacebook::internal_default_instance());
}
class CLLoginFacebook::HasBitSetters {
 public:
  static const ::protos::LoginRoute& route(const CLLoginFacebook* msg);
  static const ::protos::LoginFacebook& param(const CLLoginFacebook* msg);
};

const ::protos::LoginRoute&
CLLoginFacebook::HasBitSetters::route(const CLLoginFacebook* msg) {
  return *msg->route_;
}
const ::protos::LoginFacebook&
CLLoginFacebook::HasBitSetters::param(const CLLoginFacebook* msg) {
  return *msg->param_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CLLoginFacebook::kRouteFieldNumber;
const int CLLoginFacebook::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CLLoginFacebook::CLLoginFacebook()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.CLLoginFacebook)
}
CLLoginFacebook::CLLoginFacebook(const CLLoginFacebook& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_route()) {
    route_ = new ::protos::LoginRoute(*from.route_);
  } else {
    route_ = nullptr;
  }
  if (from.has_param()) {
    param_ = new ::protos::LoginFacebook(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protos.CLLoginFacebook)
}

void CLLoginFacebook::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CLLoginFacebook_login2sdk_2eproto.base);
  ::memset(&route_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param_) -
      reinterpret_cast<char*>(&route_)) + sizeof(param_));
}

CLLoginFacebook::~CLLoginFacebook() {
  // @@protoc_insertion_point(destructor:protos.CLLoginFacebook)
  SharedDtor();
}

void CLLoginFacebook::SharedDtor() {
  if (this != internal_default_instance()) delete route_;
  if (this != internal_default_instance()) delete param_;
}

void CLLoginFacebook::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CLLoginFacebook& CLLoginFacebook::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CLLoginFacebook_login2sdk_2eproto.base);
  return *internal_default_instance();
}


void CLLoginFacebook::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.CLLoginFacebook)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && route_ != nullptr) {
    delete route_;
  }
  route_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CLLoginFacebook::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CLLoginFacebook*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .protos.LoginRoute route = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::protos::LoginRoute::_InternalParse;
        object = msg->mutable_route();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .protos.LoginFacebook param = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::protos::LoginFacebook::_InternalParse;
        object = msg->mutable_param();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CLLoginFacebook::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.CLLoginFacebook)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .protos.LoginRoute route = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_route()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protos.LoginFacebook param = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.CLLoginFacebook)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.CLLoginFacebook)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CLLoginFacebook::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.CLLoginFacebook)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protos.LoginRoute route = 1;
  if (this->has_route()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::route(this), output);
  }

  // .protos.LoginFacebook param = 2;
  if (this->has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::param(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.CLLoginFacebook)
}

::google::protobuf::uint8* CLLoginFacebook::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.CLLoginFacebook)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protos.LoginRoute route = 1;
  if (this->has_route()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::route(this), target);
  }

  // .protos.LoginFacebook param = 2;
  if (this->has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::param(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.CLLoginFacebook)
  return target;
}

size_t CLLoginFacebook::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.CLLoginFacebook)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protos.LoginRoute route = 1;
  if (this->has_route()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *route_);
  }

  // .protos.LoginFacebook param = 2;
  if (this->has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *param_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CLLoginFacebook::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.CLLoginFacebook)
  GOOGLE_DCHECK_NE(&from, this);
  const CLLoginFacebook* source =
      ::google::protobuf::DynamicCastToGenerated<CLLoginFacebook>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.CLLoginFacebook)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.CLLoginFacebook)
    MergeFrom(*source);
  }
}

void CLLoginFacebook::MergeFrom(const CLLoginFacebook& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.CLLoginFacebook)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_route()) {
    mutable_route()->::protos::LoginRoute::MergeFrom(from.route());
  }
  if (from.has_param()) {
    mutable_param()->::protos::LoginFacebook::MergeFrom(from.param());
  }
}

void CLLoginFacebook::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.CLLoginFacebook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CLLoginFacebook::CopyFrom(const CLLoginFacebook& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.CLLoginFacebook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CLLoginFacebook::IsInitialized() const {
  return true;
}

void CLLoginFacebook::Swap(CLLoginFacebook* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CLLoginFacebook::InternalSwap(CLLoginFacebook* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(route_, other->route_);
  swap(param_, other->param_);
}

::google::protobuf::Metadata CLLoginFacebook::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login2sdk_2eproto);
  return ::file_level_metadata_login2sdk_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LCLoginFacebook::InitAsDefaultInstance() {
  ::protos::_LCLoginFacebook_default_instance_._instance.get_mutable()->route_ = const_cast< ::protos::LoginRoute*>(
      ::protos::LoginRoute::internal_default_instance());
}
class LCLoginFacebook::HasBitSetters {
 public:
  static const ::protos::LoginRoute& route(const LCLoginFacebook* msg);
};

const ::protos::LoginRoute&
LCLoginFacebook::HasBitSetters::route(const LCLoginFacebook* msg) {
  return *msg->route_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LCLoginFacebook::kErrorFieldNumber;
const int LCLoginFacebook::kErrmsgFieldNumber;
const int LCLoginFacebook::kRouteFieldNumber;
const int LCLoginFacebook::kUseridFieldNumber;
const int LCLoginFacebook::kLoginKeyFieldNumber;
const int LCLoginFacebook::kUserTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LCLoginFacebook::LCLoginFacebook()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.LCLoginFacebook)
}
LCLoginFacebook::LCLoginFacebook(const LCLoginFacebook& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errmsg().size() > 0) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  login_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.login_key().size() > 0) {
    login_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_key_);
  }
  user_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_token().size() > 0) {
    user_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_token_);
  }
  if (from.has_route()) {
    route_ = new ::protos::LoginRoute(*from.route_);
  } else {
    route_ = nullptr;
  }
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&error_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(error_));
  // @@protoc_insertion_point(copy_constructor:protos.LCLoginFacebook)
}

void LCLoginFacebook::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LCLoginFacebook_login2sdk_2eproto.base);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&route_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&route_)) + sizeof(error_));
}

LCLoginFacebook::~LCLoginFacebook() {
  // @@protoc_insertion_point(destructor:protos.LCLoginFacebook)
  SharedDtor();
}

void LCLoginFacebook::SharedDtor() {
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete route_;
}

void LCLoginFacebook::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LCLoginFacebook& LCLoginFacebook::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LCLoginFacebook_login2sdk_2eproto.base);
  return *internal_default_instance();
}


void LCLoginFacebook::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.LCLoginFacebook)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && route_ != nullptr) {
    delete route_;
  }
  route_ = nullptr;
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(error_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LCLoginFacebook::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LCLoginFacebook*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 error = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_error(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string errmsg = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.LCLoginFacebook.errmsg");
        object = msg->mutable_errmsg();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .protos.LoginRoute route = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::protos::LoginRoute::_InternalParse;
        object = msg->mutable_route();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // int64 userid = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_userid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string login_key = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.LCLoginFacebook.login_key");
        object = msg->mutable_login_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string user_token = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.LCLoginFacebook.user_token");
        object = msg->mutable_user_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LCLoginFacebook::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.LCLoginFacebook)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errmsg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), static_cast<int>(this->errmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.LCLoginFacebook.errmsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protos.LoginRoute route = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_route()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 userid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string login_key = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_login_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->login_key().data(), static_cast<int>(this->login_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.LCLoginFacebook.login_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_token = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_token().data(), static_cast<int>(this->user_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.LCLoginFacebook.user_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.LCLoginFacebook)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.LCLoginFacebook)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LCLoginFacebook::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.LCLoginFacebook)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.LCLoginFacebook.errmsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errmsg(), output);
  }

  // .protos.LoginRoute route = 3;
  if (this->has_route()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::route(this), output);
  }

  // int64 userid = 4;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->userid(), output);
  }

  // string login_key = 5;
  if (this->login_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login_key().data(), static_cast<int>(this->login_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.LCLoginFacebook.login_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->login_key(), output);
  }

  // string user_token = 6;
  if (this->user_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_token().data(), static_cast<int>(this->user_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.LCLoginFacebook.user_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->user_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.LCLoginFacebook)
}

::google::protobuf::uint8* LCLoginFacebook::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.LCLoginFacebook)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.LCLoginFacebook.errmsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errmsg(), target);
  }

  // .protos.LoginRoute route = 3;
  if (this->has_route()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::route(this), target);
  }

  // int64 userid = 4;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->userid(), target);
  }

  // string login_key = 5;
  if (this->login_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login_key().data(), static_cast<int>(this->login_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.LCLoginFacebook.login_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->login_key(), target);
  }

  // string user_token = 6;
  if (this->user_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_token().data(), static_cast<int>(this->user_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.LCLoginFacebook.user_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->user_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.LCLoginFacebook)
  return target;
}

size_t LCLoginFacebook::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.LCLoginFacebook)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // string login_key = 5;
  if (this->login_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->login_key());
  }

  // string user_token = 6;
  if (this->user_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_token());
  }

  // .protos.LoginRoute route = 3;
  if (this->has_route()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *route_);
  }

  // int64 userid = 4;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->userid());
  }

  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LCLoginFacebook::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.LCLoginFacebook)
  GOOGLE_DCHECK_NE(&from, this);
  const LCLoginFacebook* source =
      ::google::protobuf::DynamicCastToGenerated<LCLoginFacebook>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.LCLoginFacebook)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.LCLoginFacebook)
    MergeFrom(*source);
  }
}

void LCLoginFacebook::MergeFrom(const LCLoginFacebook& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.LCLoginFacebook)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.login_key().size() > 0) {

    login_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_key_);
  }
  if (from.user_token().size() > 0) {

    user_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_token_);
  }
  if (from.has_route()) {
    mutable_route()->::protos::LoginRoute::MergeFrom(from.route());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void LCLoginFacebook::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.LCLoginFacebook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LCLoginFacebook::CopyFrom(const LCLoginFacebook& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.LCLoginFacebook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LCLoginFacebook::IsInitialized() const {
  return true;
}

void LCLoginFacebook::Swap(LCLoginFacebook* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LCLoginFacebook::InternalSwap(LCLoginFacebook* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  errmsg_.Swap(&other->errmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  login_key_.Swap(&other->login_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  user_token_.Swap(&other->user_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(route_, other->route_);
  swap(userid_, other->userid_);
  swap(error_, other->error_);
}

::google::protobuf::Metadata LCLoginFacebook::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login2sdk_2eproto);
  return ::file_level_metadata_login2sdk_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CLReconnLogin::InitAsDefaultInstance() {
  ::protos::_CLReconnLogin_default_instance_._instance.get_mutable()->route_ = const_cast< ::protos::LoginRoute*>(
      ::protos::LoginRoute::internal_default_instance());
}
class CLReconnLogin::HasBitSetters {
 public:
  static const ::protos::LoginRoute& route(const CLReconnLogin* msg);
};

const ::protos::LoginRoute&
CLReconnLogin::HasBitSetters::route(const CLReconnLogin* msg) {
  return *msg->route_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CLReconnLogin::kRouteFieldNumber;
const int CLReconnLogin::kLoginKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CLReconnLogin::CLReconnLogin()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.CLReconnLogin)
}
CLReconnLogin::CLReconnLogin(const CLReconnLogin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  login_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.login_key().size() > 0) {
    login_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_key_);
  }
  if (from.has_route()) {
    route_ = new ::protos::LoginRoute(*from.route_);
  } else {
    route_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protos.CLReconnLogin)
}

void CLReconnLogin::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CLReconnLogin_login2sdk_2eproto.base);
  login_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  route_ = nullptr;
}

CLReconnLogin::~CLReconnLogin() {
  // @@protoc_insertion_point(destructor:protos.CLReconnLogin)
  SharedDtor();
}

void CLReconnLogin::SharedDtor() {
  login_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete route_;
}

void CLReconnLogin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CLReconnLogin& CLReconnLogin::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CLReconnLogin_login2sdk_2eproto.base);
  return *internal_default_instance();
}


void CLReconnLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.CLReconnLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  login_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && route_ != nullptr) {
    delete route_;
  }
  route_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CLReconnLogin::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CLReconnLogin*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .protos.LoginRoute route = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::protos::LoginRoute::_InternalParse;
        object = msg->mutable_route();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string login_key = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.CLReconnLogin.login_key");
        object = msg->mutable_login_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CLReconnLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.CLReconnLogin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .protos.LoginRoute route = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_route()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string login_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_login_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->login_key().data(), static_cast<int>(this->login_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.CLReconnLogin.login_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.CLReconnLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.CLReconnLogin)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CLReconnLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.CLReconnLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protos.LoginRoute route = 1;
  if (this->has_route()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::route(this), output);
  }

  // string login_key = 2;
  if (this->login_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login_key().data(), static_cast<int>(this->login_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.CLReconnLogin.login_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->login_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.CLReconnLogin)
}

::google::protobuf::uint8* CLReconnLogin::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.CLReconnLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protos.LoginRoute route = 1;
  if (this->has_route()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::route(this), target);
  }

  // string login_key = 2;
  if (this->login_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login_key().data(), static_cast<int>(this->login_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.CLReconnLogin.login_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->login_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.CLReconnLogin)
  return target;
}

size_t CLReconnLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.CLReconnLogin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string login_key = 2;
  if (this->login_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->login_key());
  }

  // .protos.LoginRoute route = 1;
  if (this->has_route()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *route_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CLReconnLogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.CLReconnLogin)
  GOOGLE_DCHECK_NE(&from, this);
  const CLReconnLogin* source =
      ::google::protobuf::DynamicCastToGenerated<CLReconnLogin>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.CLReconnLogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.CLReconnLogin)
    MergeFrom(*source);
  }
}

void CLReconnLogin::MergeFrom(const CLReconnLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.CLReconnLogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.login_key().size() > 0) {

    login_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_key_);
  }
  if (from.has_route()) {
    mutable_route()->::protos::LoginRoute::MergeFrom(from.route());
  }
}

void CLReconnLogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.CLReconnLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CLReconnLogin::CopyFrom(const CLReconnLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.CLReconnLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CLReconnLogin::IsInitialized() const {
  return true;
}

void CLReconnLogin::Swap(CLReconnLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CLReconnLogin::InternalSwap(CLReconnLogin* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  login_key_.Swap(&other->login_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(route_, other->route_);
}

::google::protobuf::Metadata CLReconnLogin::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login2sdk_2eproto);
  return ::file_level_metadata_login2sdk_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LCReconnLogin::InitAsDefaultInstance() {
  ::protos::_LCReconnLogin_default_instance_._instance.get_mutable()->route_ = const_cast< ::protos::LoginRoute*>(
      ::protos::LoginRoute::internal_default_instance());
}
class LCReconnLogin::HasBitSetters {
 public:
  static const ::protos::LoginRoute& route(const LCReconnLogin* msg);
};

const ::protos::LoginRoute&
LCReconnLogin::HasBitSetters::route(const LCReconnLogin* msg) {
  return *msg->route_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LCReconnLogin::kErrorFieldNumber;
const int LCReconnLogin::kErrmsgFieldNumber;
const int LCReconnLogin::kRouteFieldNumber;
const int LCReconnLogin::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LCReconnLogin::LCReconnLogin()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.LCReconnLogin)
}
LCReconnLogin::LCReconnLogin(const LCReconnLogin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errmsg().size() > 0) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.has_route()) {
    route_ = new ::protos::LoginRoute(*from.route_);
  } else {
    route_ = nullptr;
  }
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&error_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(error_));
  // @@protoc_insertion_point(copy_constructor:protos.LCReconnLogin)
}

void LCReconnLogin::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LCReconnLogin_login2sdk_2eproto.base);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&route_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&route_)) + sizeof(error_));
}

LCReconnLogin::~LCReconnLogin() {
  // @@protoc_insertion_point(destructor:protos.LCReconnLogin)
  SharedDtor();
}

void LCReconnLogin::SharedDtor() {
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete route_;
}

void LCReconnLogin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LCReconnLogin& LCReconnLogin::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LCReconnLogin_login2sdk_2eproto.base);
  return *internal_default_instance();
}


void LCReconnLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.LCReconnLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && route_ != nullptr) {
    delete route_;
  }
  route_ = nullptr;
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(error_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LCReconnLogin::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LCReconnLogin*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 error = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_error(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string errmsg = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.LCReconnLogin.errmsg");
        object = msg->mutable_errmsg();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .protos.LoginRoute route = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::protos::LoginRoute::_InternalParse;
        object = msg->mutable_route();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // int64 userid = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_userid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LCReconnLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.LCReconnLogin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errmsg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), static_cast<int>(this->errmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.LCReconnLogin.errmsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protos.LoginRoute route = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_route()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 userid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.LCReconnLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.LCReconnLogin)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LCReconnLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.LCReconnLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.LCReconnLogin.errmsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errmsg(), output);
  }

  // .protos.LoginRoute route = 3;
  if (this->has_route()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::route(this), output);
  }

  // int64 userid = 4;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.LCReconnLogin)
}

::google::protobuf::uint8* LCReconnLogin::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.LCReconnLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.LCReconnLogin.errmsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errmsg(), target);
  }

  // .protos.LoginRoute route = 3;
  if (this->has_route()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::route(this), target);
  }

  // int64 userid = 4;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.LCReconnLogin)
  return target;
}

size_t LCReconnLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.LCReconnLogin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // .protos.LoginRoute route = 3;
  if (this->has_route()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *route_);
  }

  // int64 userid = 4;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->userid());
  }

  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LCReconnLogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.LCReconnLogin)
  GOOGLE_DCHECK_NE(&from, this);
  const LCReconnLogin* source =
      ::google::protobuf::DynamicCastToGenerated<LCReconnLogin>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.LCReconnLogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.LCReconnLogin)
    MergeFrom(*source);
  }
}

void LCReconnLogin::MergeFrom(const LCReconnLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.LCReconnLogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.has_route()) {
    mutable_route()->::protos::LoginRoute::MergeFrom(from.route());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void LCReconnLogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.LCReconnLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LCReconnLogin::CopyFrom(const LCReconnLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.LCReconnLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LCReconnLogin::IsInitialized() const {
  return true;
}

void LCReconnLogin::Swap(LCReconnLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LCReconnLogin::InternalSwap(LCReconnLogin* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  errmsg_.Swap(&other->errmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(route_, other->route_);
  swap(userid_, other->userid_);
  swap(error_, other->error_);
}

::google::protobuf::Metadata LCReconnLogin::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login2sdk_2eproto);
  return ::file_level_metadata_login2sdk_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Link2LDisconnect::InitAsDefaultInstance() {
}
class Link2LDisconnect::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Link2LDisconnect::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Link2LDisconnect::Link2LDisconnect()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.Link2LDisconnect)
}
Link2LDisconnect::Link2LDisconnect(const Link2LDisconnect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:protos.Link2LDisconnect)
}

void Link2LDisconnect::SharedCtor() {
  userid_ = PROTOBUF_LONGLONG(0);
}

Link2LDisconnect::~Link2LDisconnect() {
  // @@protoc_insertion_point(destructor:protos.Link2LDisconnect)
  SharedDtor();
}

void Link2LDisconnect::SharedDtor() {
}

void Link2LDisconnect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Link2LDisconnect& Link2LDisconnect::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Link2LDisconnect_login2sdk_2eproto.base);
  return *internal_default_instance();
}


void Link2LDisconnect::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.Link2LDisconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Link2LDisconnect::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Link2LDisconnect*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 userid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_userid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Link2LDisconnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.Link2LDisconnect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.Link2LDisconnect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.Link2LDisconnect)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Link2LDisconnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.Link2LDisconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.Link2LDisconnect)
}

::google::protobuf::uint8* Link2LDisconnect::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.Link2LDisconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.Link2LDisconnect)
  return target;
}

size_t Link2LDisconnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.Link2LDisconnect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Link2LDisconnect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.Link2LDisconnect)
  GOOGLE_DCHECK_NE(&from, this);
  const Link2LDisconnect* source =
      ::google::protobuf::DynamicCastToGenerated<Link2LDisconnect>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.Link2LDisconnect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.Link2LDisconnect)
    MergeFrom(*source);
  }
}

void Link2LDisconnect::MergeFrom(const Link2LDisconnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.Link2LDisconnect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void Link2LDisconnect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.Link2LDisconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Link2LDisconnect::CopyFrom(const Link2LDisconnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.Link2LDisconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Link2LDisconnect::IsInitialized() const {
  return true;
}

void Link2LDisconnect::Swap(Link2LDisconnect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Link2LDisconnect::InternalSwap(Link2LDisconnect* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(userid_, other->userid_);
}

::google::protobuf::Metadata Link2LDisconnect::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login2sdk_2eproto);
  return ::file_level_metadata_login2sdk_2eproto[kIndexInFileMessages];
}


// ===================================================================

void L2LinkDisconnect::InitAsDefaultInstance() {
}
class L2LinkDisconnect::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int L2LinkDisconnect::kErrorFieldNumber;
const int L2LinkDisconnect::kErrmsgFieldNumber;
const int L2LinkDisconnect::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

L2LinkDisconnect::L2LinkDisconnect()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.L2LinkDisconnect)
}
L2LinkDisconnect::L2LinkDisconnect(const L2LinkDisconnect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errmsg().size() > 0) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&error_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(error_));
  // @@protoc_insertion_point(copy_constructor:protos.L2LinkDisconnect)
}

void L2LinkDisconnect::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_L2LinkDisconnect_login2sdk_2eproto.base);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(error_));
}

L2LinkDisconnect::~L2LinkDisconnect() {
  // @@protoc_insertion_point(destructor:protos.L2LinkDisconnect)
  SharedDtor();
}

void L2LinkDisconnect::SharedDtor() {
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void L2LinkDisconnect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const L2LinkDisconnect& L2LinkDisconnect::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_L2LinkDisconnect_login2sdk_2eproto.base);
  return *internal_default_instance();
}


void L2LinkDisconnect::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.L2LinkDisconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(error_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* L2LinkDisconnect::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<L2LinkDisconnect*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 error = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_error(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string errmsg = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.L2LinkDisconnect.errmsg");
        object = msg->mutable_errmsg();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int64 userid = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_userid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool L2LinkDisconnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.L2LinkDisconnect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errmsg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), static_cast<int>(this->errmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.L2LinkDisconnect.errmsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 userid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.L2LinkDisconnect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.L2LinkDisconnect)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void L2LinkDisconnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.L2LinkDisconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.L2LinkDisconnect.errmsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errmsg(), output);
  }

  // int64 userid = 3;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.L2LinkDisconnect)
}

::google::protobuf::uint8* L2LinkDisconnect::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.L2LinkDisconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.L2LinkDisconnect.errmsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errmsg(), target);
  }

  // int64 userid = 3;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.L2LinkDisconnect)
  return target;
}

size_t L2LinkDisconnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.L2LinkDisconnect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // int64 userid = 3;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->userid());
  }

  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void L2LinkDisconnect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.L2LinkDisconnect)
  GOOGLE_DCHECK_NE(&from, this);
  const L2LinkDisconnect* source =
      ::google::protobuf::DynamicCastToGenerated<L2LinkDisconnect>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.L2LinkDisconnect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.L2LinkDisconnect)
    MergeFrom(*source);
  }
}

void L2LinkDisconnect::MergeFrom(const L2LinkDisconnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.L2LinkDisconnect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void L2LinkDisconnect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.L2LinkDisconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void L2LinkDisconnect::CopyFrom(const L2LinkDisconnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.L2LinkDisconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool L2LinkDisconnect::IsInitialized() const {
  return true;
}

void L2LinkDisconnect::Swap(L2LinkDisconnect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void L2LinkDisconnect::InternalSwap(L2LinkDisconnect* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  errmsg_.Swap(&other->errmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(userid_, other->userid_);
  swap(error_, other->error_);
}

::google::protobuf::Metadata L2LinkDisconnect::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login2sdk_2eproto);
  return ::file_level_metadata_login2sdk_2eproto[kIndexInFileMessages];
}


// ===================================================================

void L2LinkKickPlayer::InitAsDefaultInstance() {
}
class L2LinkKickPlayer::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int L2LinkKickPlayer::kErrorFieldNumber;
const int L2LinkKickPlayer::kErrmsgFieldNumber;
const int L2LinkKickPlayer::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

L2LinkKickPlayer::L2LinkKickPlayer()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.L2LinkKickPlayer)
}
L2LinkKickPlayer::L2LinkKickPlayer(const L2LinkKickPlayer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errmsg().size() > 0) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&error_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(error_));
  // @@protoc_insertion_point(copy_constructor:protos.L2LinkKickPlayer)
}

void L2LinkKickPlayer::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_L2LinkKickPlayer_login2sdk_2eproto.base);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(error_));
}

L2LinkKickPlayer::~L2LinkKickPlayer() {
  // @@protoc_insertion_point(destructor:protos.L2LinkKickPlayer)
  SharedDtor();
}

void L2LinkKickPlayer::SharedDtor() {
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void L2LinkKickPlayer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const L2LinkKickPlayer& L2LinkKickPlayer::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_L2LinkKickPlayer_login2sdk_2eproto.base);
  return *internal_default_instance();
}


void L2LinkKickPlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.L2LinkKickPlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(error_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* L2LinkKickPlayer::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<L2LinkKickPlayer*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 error = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_error(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string errmsg = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("protos.L2LinkKickPlayer.errmsg");
        object = msg->mutable_errmsg();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int64 userid = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_userid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool L2LinkKickPlayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.L2LinkKickPlayer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errmsg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), static_cast<int>(this->errmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.L2LinkKickPlayer.errmsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 userid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.L2LinkKickPlayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.L2LinkKickPlayer)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void L2LinkKickPlayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.L2LinkKickPlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.L2LinkKickPlayer.errmsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errmsg(), output);
  }

  // int64 userid = 3;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.L2LinkKickPlayer)
}

::google::protobuf::uint8* L2LinkKickPlayer::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.L2LinkKickPlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.L2LinkKickPlayer.errmsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errmsg(), target);
  }

  // int64 userid = 3;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.L2LinkKickPlayer)
  return target;
}

size_t L2LinkKickPlayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.L2LinkKickPlayer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // int64 userid = 3;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->userid());
  }

  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void L2LinkKickPlayer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.L2LinkKickPlayer)
  GOOGLE_DCHECK_NE(&from, this);
  const L2LinkKickPlayer* source =
      ::google::protobuf::DynamicCastToGenerated<L2LinkKickPlayer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.L2LinkKickPlayer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.L2LinkKickPlayer)
    MergeFrom(*source);
  }
}

void L2LinkKickPlayer::MergeFrom(const L2LinkKickPlayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.L2LinkKickPlayer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void L2LinkKickPlayer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.L2LinkKickPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void L2LinkKickPlayer::CopyFrom(const L2LinkKickPlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.L2LinkKickPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool L2LinkKickPlayer::IsInitialized() const {
  return true;
}

void L2LinkKickPlayer::Swap(L2LinkKickPlayer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void L2LinkKickPlayer::InternalSwap(L2LinkKickPlayer* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  errmsg_.Swap(&other->errmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(userid_, other->userid_);
  swap(error_, other->error_);
}

::google::protobuf::Metadata L2LinkKickPlayer::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login2sdk_2eproto);
  return ::file_level_metadata_login2sdk_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::protos::LoginWeixin* Arena::CreateMaybeMessage< ::protos::LoginWeixin >(Arena* arena) {
  return Arena::CreateInternal< ::protos::LoginWeixin >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::LoginRoute* Arena::CreateMaybeMessage< ::protos::LoginRoute >(Arena* arena) {
  return Arena::CreateInternal< ::protos::LoginRoute >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::CLLoginWeixin* Arena::CreateMaybeMessage< ::protos::CLLoginWeixin >(Arena* arena) {
  return Arena::CreateInternal< ::protos::CLLoginWeixin >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::LCLoginWeixin* Arena::CreateMaybeMessage< ::protos::LCLoginWeixin >(Arena* arena) {
  return Arena::CreateInternal< ::protos::LCLoginWeixin >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::L2SDKLoginWeixin* Arena::CreateMaybeMessage< ::protos::L2SDKLoginWeixin >(Arena* arena) {
  return Arena::CreateInternal< ::protos::L2SDKLoginWeixin >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::SDK2LLoginWeixin* Arena::CreateMaybeMessage< ::protos::SDK2LLoginWeixin >(Arena* arena) {
  return Arena::CreateInternal< ::protos::SDK2LLoginWeixin >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::LoginFacebook* Arena::CreateMaybeMessage< ::protos::LoginFacebook >(Arena* arena) {
  return Arena::CreateInternal< ::protos::LoginFacebook >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::CLLoginFacebook* Arena::CreateMaybeMessage< ::protos::CLLoginFacebook >(Arena* arena) {
  return Arena::CreateInternal< ::protos::CLLoginFacebook >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::LCLoginFacebook* Arena::CreateMaybeMessage< ::protos::LCLoginFacebook >(Arena* arena) {
  return Arena::CreateInternal< ::protos::LCLoginFacebook >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::CLReconnLogin* Arena::CreateMaybeMessage< ::protos::CLReconnLogin >(Arena* arena) {
  return Arena::CreateInternal< ::protos::CLReconnLogin >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::LCReconnLogin* Arena::CreateMaybeMessage< ::protos::LCReconnLogin >(Arena* arena) {
  return Arena::CreateInternal< ::protos::LCReconnLogin >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::Link2LDisconnect* Arena::CreateMaybeMessage< ::protos::Link2LDisconnect >(Arena* arena) {
  return Arena::CreateInternal< ::protos::Link2LDisconnect >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::L2LinkDisconnect* Arena::CreateMaybeMessage< ::protos::L2LinkDisconnect >(Arena* arena) {
  return Arena::CreateInternal< ::protos::L2LinkDisconnect >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::L2LinkKickPlayer* Arena::CreateMaybeMessage< ::protos::L2LinkKickPlayer >(Arena* arena) {
  return Arena::CreateInternal< ::protos::L2LinkKickPlayer >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
