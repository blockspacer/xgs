// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: link2ls_meta.proto

#include "link2ls_meta.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_link2ls_5fmeta_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LS2LinkMeta_link2ls_5fmeta_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_link2ls_5fmeta_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Link2LSMeta_link2ls_5fmeta_2eproto;
namespace protos {
class Link2LSMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Link2LSMeta> _instance;
} _Link2LSMeta_default_instance_;
class LS2LinkMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LS2LinkMeta> _instance;
} _LS2LinkMeta_default_instance_;
class Link2LSRpcMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Link2LSRpcMeta> _instance;
} _Link2LSRpcMeta_default_instance_;
}  // namespace protos
static void InitDefaultsLink2LSMeta_link2ls_5fmeta_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_Link2LSMeta_default_instance_;
    new (ptr) ::protos::Link2LSMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::Link2LSMeta::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Link2LSMeta_link2ls_5fmeta_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLink2LSMeta_link2ls_5fmeta_2eproto}, {}};

static void InitDefaultsLS2LinkMeta_link2ls_5fmeta_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_LS2LinkMeta_default_instance_;
    new (ptr) ::protos::LS2LinkMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::LS2LinkMeta::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LS2LinkMeta_link2ls_5fmeta_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLS2LinkMeta_link2ls_5fmeta_2eproto}, {}};

static void InitDefaultsLink2LSRpcMeta_link2ls_5fmeta_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_Link2LSRpcMeta_default_instance_;
    new (ptr) ::protos::Link2LSRpcMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::Link2LSRpcMeta::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Link2LSRpcMeta_link2ls_5fmeta_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsLink2LSRpcMeta_link2ls_5fmeta_2eproto}, {
      &scc_info_Link2LSMeta_link2ls_5fmeta_2eproto.base,
      &scc_info_LS2LinkMeta_link2ls_5fmeta_2eproto.base,}};

void InitDefaults_link2ls_5fmeta_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Link2LSMeta_link2ls_5fmeta_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LS2LinkMeta_link2ls_5fmeta_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Link2LSRpcMeta_link2ls_5fmeta_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_link2ls_5fmeta_2eproto[3];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_link2ls_5fmeta_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_link2ls_5fmeta_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_link2ls_5fmeta_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::Link2LSMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::Link2LSMeta, userid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::LS2LinkMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::LS2LinkMeta, userid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::Link2LSRpcMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::Link2LSRpcMeta, req_),
  PROTOBUF_FIELD_OFFSET(::protos::Link2LSRpcMeta, resp_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::protos::Link2LSMeta)},
  { 6, -1, sizeof(::protos::LS2LinkMeta)},
  { 12, -1, sizeof(::protos::Link2LSRpcMeta)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_Link2LSMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_LS2LinkMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protos::_Link2LSRpcMeta_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_link2ls_5fmeta_2eproto = {
  {}, AddDescriptors_link2ls_5fmeta_2eproto, "link2ls_meta.proto", schemas,
  file_default_instances, TableStruct_link2ls_5fmeta_2eproto::offsets,
  file_level_metadata_link2ls_5fmeta_2eproto, 3, file_level_enum_descriptors_link2ls_5fmeta_2eproto, file_level_service_descriptors_link2ls_5fmeta_2eproto,
};

const char descriptor_table_protodef_link2ls_5fmeta_2eproto[] =
  "\n\022link2ls_meta.proto\022\006protos\"\035\n\013Link2LSM"
  "eta\022\016\n\006userid\030\001 \001(\003\"\035\n\013LS2LinkMeta\022\016\n\006us"
  "erid\030\001 \001(\003\"U\n\016Link2LSRpcMeta\022 \n\003req\030\001 \001("
  "\0132\023.protos.Link2LSMeta\022!\n\004resp\030\002 \001(\0132\023.p"
  "rotos.LS2LinkMetab\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_link2ls_5fmeta_2eproto = {
  false, InitDefaults_link2ls_5fmeta_2eproto, 
  descriptor_table_protodef_link2ls_5fmeta_2eproto,
  "link2ls_meta.proto", &assign_descriptors_table_link2ls_5fmeta_2eproto, 185,
};

void AddDescriptors_link2ls_5fmeta_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_link2ls_5fmeta_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_link2ls_5fmeta_2eproto = []() { AddDescriptors_link2ls_5fmeta_2eproto(); return true; }();
namespace protos {

// ===================================================================

void Link2LSMeta::InitAsDefaultInstance() {
}
class Link2LSMeta::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Link2LSMeta::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Link2LSMeta::Link2LSMeta()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.Link2LSMeta)
}
Link2LSMeta::Link2LSMeta(const Link2LSMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:protos.Link2LSMeta)
}

void Link2LSMeta::SharedCtor() {
  userid_ = PROTOBUF_LONGLONG(0);
}

Link2LSMeta::~Link2LSMeta() {
  // @@protoc_insertion_point(destructor:protos.Link2LSMeta)
  SharedDtor();
}

void Link2LSMeta::SharedDtor() {
}

void Link2LSMeta::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Link2LSMeta& Link2LSMeta::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Link2LSMeta_link2ls_5fmeta_2eproto.base);
  return *internal_default_instance();
}


void Link2LSMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.Link2LSMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Link2LSMeta::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Link2LSMeta*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 userid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_userid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Link2LSMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.Link2LSMeta)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.Link2LSMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.Link2LSMeta)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Link2LSMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.Link2LSMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.Link2LSMeta)
}

::google::protobuf::uint8* Link2LSMeta::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.Link2LSMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.Link2LSMeta)
  return target;
}

size_t Link2LSMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.Link2LSMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Link2LSMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.Link2LSMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const Link2LSMeta* source =
      ::google::protobuf::DynamicCastToGenerated<Link2LSMeta>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.Link2LSMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.Link2LSMeta)
    MergeFrom(*source);
  }
}

void Link2LSMeta::MergeFrom(const Link2LSMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.Link2LSMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void Link2LSMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.Link2LSMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Link2LSMeta::CopyFrom(const Link2LSMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.Link2LSMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Link2LSMeta::IsInitialized() const {
  return true;
}

void Link2LSMeta::Swap(Link2LSMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Link2LSMeta::InternalSwap(Link2LSMeta* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(userid_, other->userid_);
}

::google::protobuf::Metadata Link2LSMeta::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_link2ls_5fmeta_2eproto);
  return ::file_level_metadata_link2ls_5fmeta_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LS2LinkMeta::InitAsDefaultInstance() {
}
class LS2LinkMeta::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LS2LinkMeta::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LS2LinkMeta::LS2LinkMeta()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.LS2LinkMeta)
}
LS2LinkMeta::LS2LinkMeta(const LS2LinkMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:protos.LS2LinkMeta)
}

void LS2LinkMeta::SharedCtor() {
  userid_ = PROTOBUF_LONGLONG(0);
}

LS2LinkMeta::~LS2LinkMeta() {
  // @@protoc_insertion_point(destructor:protos.LS2LinkMeta)
  SharedDtor();
}

void LS2LinkMeta::SharedDtor() {
}

void LS2LinkMeta::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LS2LinkMeta& LS2LinkMeta::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LS2LinkMeta_link2ls_5fmeta_2eproto.base);
  return *internal_default_instance();
}


void LS2LinkMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.LS2LinkMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LS2LinkMeta::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LS2LinkMeta*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 userid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_userid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LS2LinkMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.LS2LinkMeta)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.LS2LinkMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.LS2LinkMeta)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LS2LinkMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.LS2LinkMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.LS2LinkMeta)
}

::google::protobuf::uint8* LS2LinkMeta::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.LS2LinkMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.LS2LinkMeta)
  return target;
}

size_t LS2LinkMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.LS2LinkMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LS2LinkMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.LS2LinkMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const LS2LinkMeta* source =
      ::google::protobuf::DynamicCastToGenerated<LS2LinkMeta>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.LS2LinkMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.LS2LinkMeta)
    MergeFrom(*source);
  }
}

void LS2LinkMeta::MergeFrom(const LS2LinkMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.LS2LinkMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void LS2LinkMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.LS2LinkMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LS2LinkMeta::CopyFrom(const LS2LinkMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.LS2LinkMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LS2LinkMeta::IsInitialized() const {
  return true;
}

void LS2LinkMeta::Swap(LS2LinkMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LS2LinkMeta::InternalSwap(LS2LinkMeta* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(userid_, other->userid_);
}

::google::protobuf::Metadata LS2LinkMeta::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_link2ls_5fmeta_2eproto);
  return ::file_level_metadata_link2ls_5fmeta_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Link2LSRpcMeta::InitAsDefaultInstance() {
  ::protos::_Link2LSRpcMeta_default_instance_._instance.get_mutable()->req_ = const_cast< ::protos::Link2LSMeta*>(
      ::protos::Link2LSMeta::internal_default_instance());
  ::protos::_Link2LSRpcMeta_default_instance_._instance.get_mutable()->resp_ = const_cast< ::protos::LS2LinkMeta*>(
      ::protos::LS2LinkMeta::internal_default_instance());
}
class Link2LSRpcMeta::HasBitSetters {
 public:
  static const ::protos::Link2LSMeta& req(const Link2LSRpcMeta* msg);
  static const ::protos::LS2LinkMeta& resp(const Link2LSRpcMeta* msg);
};

const ::protos::Link2LSMeta&
Link2LSRpcMeta::HasBitSetters::req(const Link2LSRpcMeta* msg) {
  return *msg->req_;
}
const ::protos::LS2LinkMeta&
Link2LSRpcMeta::HasBitSetters::resp(const Link2LSRpcMeta* msg) {
  return *msg->resp_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Link2LSRpcMeta::kReqFieldNumber;
const int Link2LSRpcMeta::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Link2LSRpcMeta::Link2LSRpcMeta()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.Link2LSRpcMeta)
}
Link2LSRpcMeta::Link2LSRpcMeta(const Link2LSRpcMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req()) {
    req_ = new ::protos::Link2LSMeta(*from.req_);
  } else {
    req_ = nullptr;
  }
  if (from.has_resp()) {
    resp_ = new ::protos::LS2LinkMeta(*from.resp_);
  } else {
    resp_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protos.Link2LSRpcMeta)
}

void Link2LSRpcMeta::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Link2LSRpcMeta_link2ls_5fmeta_2eproto.base);
  ::memset(&req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resp_) -
      reinterpret_cast<char*>(&req_)) + sizeof(resp_));
}

Link2LSRpcMeta::~Link2LSRpcMeta() {
  // @@protoc_insertion_point(destructor:protos.Link2LSRpcMeta)
  SharedDtor();
}

void Link2LSRpcMeta::SharedDtor() {
  if (this != internal_default_instance()) delete req_;
  if (this != internal_default_instance()) delete resp_;
}

void Link2LSRpcMeta::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Link2LSRpcMeta& Link2LSRpcMeta::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Link2LSRpcMeta_link2ls_5fmeta_2eproto.base);
  return *internal_default_instance();
}


void Link2LSRpcMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.Link2LSRpcMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && req_ != nullptr) {
    delete req_;
  }
  req_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && resp_ != nullptr) {
    delete resp_;
  }
  resp_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Link2LSRpcMeta::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Link2LSRpcMeta*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .protos.Link2LSMeta req = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::protos::Link2LSMeta::_InternalParse;
        object = msg->mutable_req();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .protos.LS2LinkMeta resp = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::protos::LS2LinkMeta::_InternalParse;
        object = msg->mutable_resp();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Link2LSRpcMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.Link2LSRpcMeta)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .protos.Link2LSMeta req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protos.LS2LinkMeta resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.Link2LSRpcMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.Link2LSRpcMeta)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Link2LSRpcMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.Link2LSRpcMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protos.Link2LSMeta req = 1;
  if (this->has_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::req(this), output);
  }

  // .protos.LS2LinkMeta resp = 2;
  if (this->has_resp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::resp(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protos.Link2LSRpcMeta)
}

::google::protobuf::uint8* Link2LSRpcMeta::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.Link2LSRpcMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protos.Link2LSMeta req = 1;
  if (this->has_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::req(this), target);
  }

  // .protos.LS2LinkMeta resp = 2;
  if (this->has_resp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::resp(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.Link2LSRpcMeta)
  return target;
}

size_t Link2LSRpcMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.Link2LSRpcMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protos.Link2LSMeta req = 1;
  if (this->has_req()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *req_);
  }

  // .protos.LS2LinkMeta resp = 2;
  if (this->has_resp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *resp_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Link2LSRpcMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.Link2LSRpcMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const Link2LSRpcMeta* source =
      ::google::protobuf::DynamicCastToGenerated<Link2LSRpcMeta>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.Link2LSRpcMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.Link2LSRpcMeta)
    MergeFrom(*source);
  }
}

void Link2LSRpcMeta::MergeFrom(const Link2LSRpcMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.Link2LSRpcMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_req()) {
    mutable_req()->::protos::Link2LSMeta::MergeFrom(from.req());
  }
  if (from.has_resp()) {
    mutable_resp()->::protos::LS2LinkMeta::MergeFrom(from.resp());
  }
}

void Link2LSRpcMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.Link2LSRpcMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Link2LSRpcMeta::CopyFrom(const Link2LSRpcMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.Link2LSRpcMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Link2LSRpcMeta::IsInitialized() const {
  return true;
}

void Link2LSRpcMeta::Swap(Link2LSRpcMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Link2LSRpcMeta::InternalSwap(Link2LSRpcMeta* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(req_, other->req_);
  swap(resp_, other->resp_);
}

::google::protobuf::Metadata Link2LSRpcMeta::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_link2ls_5fmeta_2eproto);
  return ::file_level_metadata_link2ls_5fmeta_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::protos::Link2LSMeta* Arena::CreateMaybeMessage< ::protos::Link2LSMeta >(Arena* arena) {
  return Arena::CreateInternal< ::protos::Link2LSMeta >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::LS2LinkMeta* Arena::CreateMaybeMessage< ::protos::LS2LinkMeta >(Arena* arena) {
  return Arena::CreateInternal< ::protos::LS2LinkMeta >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::Link2LSRpcMeta* Arena::CreateMaybeMessage< ::protos::Link2LSRpcMeta >(Arena* arena) {
  return Arena::CreateInternal< ::protos::Link2LSRpcMeta >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
